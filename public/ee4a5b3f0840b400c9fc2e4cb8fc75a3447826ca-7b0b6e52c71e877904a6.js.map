{"version":3,"sources":["webpack:///./src/components/base_components/images_list.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ArrowUpOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ArrowUpOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ArrowDownOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ArrowDownOutlined.js","webpack:///./src/components/base_components/images_list_handle.js","webpack:///./src/components/upload_files/sts_upload_files_list.js"],"names":["ImagesList","imagesList","setImagesList","deletedImageHandle","imageKeyName","deletedColumnKeys","useRef","updateCulumnKey","deletedImages","column_key","console","log","deletedColumnNum","parseInt","replace","updatedImagesList","index","length","currentObj","currentColumnNum","push","deleteCurrentImage","deepcopyImages","concat","splice","culumn_key","has_key","updatedDeletedColumnKeys","current","updateDeletedColumnKeys","style","textAlign","itemLayout","size","dataSource","renderItem","item","Item","key","toString","actions","title","onClick","shape","icon","DeleteOutlined","Meta","file_name","avatar","src","url","defaultProps","props","ref","AntdIcon","Object","assign","displayName","ImagesListHandle","moveImageObjIndex","moveNum","copyImages","moveImgObj","insertIndex","createImagesObj","maxImagesNum","cos_names_obj","cos_name","StsUploadFilesList","onChange","initFileList","maxFilesNum","cleanImagesCount","useState","showUploadButton","setShowUploadButton","currentSelectedFileObj","temporaryKeyRequestCount","setTemporaryKeyRequestCount","stsTemporaryObj","temporaryKeyRequestObj","fileList","setFileList","deletedColumnsKeys","useEffect","addObj","newFilesList","element","getAuthorization","options","callback","stsObj","credentials","TmpSecretId","tmpSecretId","TmpSecretKey","tmpSecretKey","XCosSecurityToken","sessionToken","StartTime","startTime","ExpiredTime","expiredTime","uploadFileProps","listType","beforeUpload","file","delKeysArr","UploadOutlined","requestCount","reqObject","responseDataHandle","respObj","keys","includes","message","error","sts_obj","window","require","putObject","cosConfig","Key","image_cos_name","Body","onProgress","progressData","JSON","stringify","err","data","uploadedImageObj","maxIndex","image_cos_name_url","name","deepcopyFileList","success","imagesObj","StsUploadImagesList","oldObj","isUploading","setIsUploading","imgList","initImagesList","currentUrlKey","currentCosNameKey","createImageList","accept","handleCount","StsUploadVideo","videoKeyName","videoUrl","setVideoUrl","videoCosKey","setVideoCosKey","coskey_convert_urlkey","currentVideoUrl","currentVideoCosName","newVideoObj","direction","width","height","controls","obj"],"mappings":"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","file":"ee4a5b3f0840b400c9fc2e4cb8fc75a3447826ca-7b0b6e52c71e877904a6.js","sourcesContent":["import React, { useRef } from 'react';\nimport { List, Button, Tooltip } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport ImageZoom from './image_zoom';\n\n// 显示图片列表\nconst ImagesList = ({ imagesList, setImagesList, deletedImageHandle, imageKeyName }) => {\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  // url:必须; fileName:必须;\n  const deletedColumnKeys = useRef([]);\n\n  const updateDeletedColumnKeys = (culumn_key) => {\n    // 更新保存删除的列 数组\n    let has_key = false;\n    for (let index = 0; index < deletedColumnKeys.length; index++) {\n      const element = deletedColumnKeys[index];\n      if (element === culumn_key) {\n        has_key = true;\n      }\n    }\n    let updatedDeletedColumnKeys = [].concat(deletedColumnKeys.current);\n    if (!has_key) {\n      updatedDeletedColumnKeys.push(culumn_key);\n      deletedColumnKeys.current = updatedDeletedColumnKeys;\n    }\n    deletedImageHandle(updatedDeletedColumnKeys);\n\n    // let editedImagesObj = {};\n    // // 更新 editedImagesObj\n    // for (let index = 0; index < imagesList.length; index++) {\n    //   const element = imagesList[index];\n    //   if (element.cos_name.length > 10) {\n    //     editedImagesObj[element.culumn_key] = element.cos_name;\n    //   }\n    // }\n    // const editedImagesObjKeys = Object.keys(editedImagesObj);\n    // let deletedKeys = deletedColumnKeys.current;\n    // for (let index = 0; index < deletedKeys.length; index++) {\n    //   const delKey = deletedKeys[index];\n    //   if (!editedImagesObjKeys.includes(delKey)) {\n    //     editedImagesObj[delKey] = '';\n    //   }\n    // }\n  }\n\n  const updateCulumnKey = (deletedImages, column_key) => {\n    // 删除图片后更新column_key, 大于 deleteIndex 减 1\n    console.log(column_key);\n    let deletedColumnNum = parseInt(column_key.replace(imageKeyName, ''));\n    console.log(deletedColumnNum);\n    if (!deletedColumnNum) {\n      return deletedImages;\n    }\n    let updatedImagesList = [];\n    for (let index = 0; index < deletedImages.length; index++) {\n      let currentObj = { ...deletedImages[index] };\n      console.log(currentObj);\n      let currentColumnNum = currentObj.column_key ? currentObj.column_key : '0';\n      // console.log(currentColumnNum);\n      currentColumnNum = parseInt(currentColumnNum.replace(imageKeyName, ''));\n      if (currentColumnNum > deletedColumnNum) {\n        // console.log(currentColumnNum);\n        currentObj.column_key = imageKeyName + deletedColumnNum;\n        deletedColumnNum = deletedColumnNum + 1;\n      }\n      console.log(currentObj);\n      updatedImagesList.push(currentObj);\n    }\n    return updatedImagesList;\n  }\n\n  const deleteCurrentImage = (column_key) => {\n    // 删除一张图片\n    const deepcopyImages = [].concat(imagesList);\n    for (let index = 0; index < imagesList.length; index++) {\n      const element = imagesList[index];\n      if (element.column_key === column_key) {\n        deepcopyImages.splice(index, 1);\n      }\n    }\n    console.log(updateCulumnKey(deepcopyImages, column_key));\n    setImagesList(updateCulumnKey(deepcopyImages, column_key));\n    \n    updateDeletedColumnKeys(column_key);  // 更新保存删除的列 数组\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      {imagesList.length === 0 ? null : (\n        <List itemLayout=\"vertical\" size=\"large\" dataSource={imagesList}\n          renderItem={(item, index) => (\n            <List.Item\n              key={index.toString()}\n              actions={[\n                <Tooltip title=\"删除\"><Button onClick={() => deleteCurrentImage(item.column_key)} shape=\"circle\" icon={<DeleteOutlined />} /></Tooltip>,\n              ]}\n            ><List.Item.Meta\n              title={item.file_name}\n              avatar={<ImageZoom src={item.url}></ImageZoom>} />\n            </List.Item>\n          )}\n        ></List>\n      )}\n    </div>\n  );\n}\n\nImagesList.defaultProps = {\n  imagesList: [],\n  setImagesList: index => { console.log(index); },\n  deletedImageHandle: deletedColumnKeys => console.log(deletedColumnKeys),\n  imageKeyName: 'image_cos_name'\n};\n\nexport { ImagesList };\n","// This icon file is generated automatically.\nvar ArrowUpOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M868 545.5L536.1 163a31.96 31.96 0 00-48.3 0L156 545.5a7.97 7.97 0 006 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z\"\n      }\n    }]\n  },\n  \"name\": \"arrow-up\",\n  \"theme\": \"outlined\"\n};\nexport default ArrowUpOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowUpOutlined = function ArrowUpOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ArrowUpOutlinedSvg\n  }));\n};\n\nArrowUpOutlined.displayName = 'ArrowUpOutlined';\nexport default React.forwardRef(ArrowUpOutlined);","// This icon file is generated automatically.\nvar ArrowDownOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M862 465.3h-81c-4.6 0-9 2-12.1 5.5L550 723.1V160c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v563.1L255.1 470.8c-3-3.5-7.4-5.5-12.1-5.5h-81c-6.8 0-10.5 8.1-6 13.2L487.9 861a31.96 31.96 0 0048.3 0L868 478.5c4.5-5.2.8-13.2-6-13.2z\"\n      }\n    }]\n  },\n  \"name\": \"arrow-down\",\n  \"theme\": \"outlined\"\n};\nexport default ArrowDownOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowDownOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowDownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowDownOutlined = function ArrowDownOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ArrowDownOutlinedSvg\n  }));\n};\n\nArrowDownOutlined.displayName = 'ArrowDownOutlined';\nexport default React.forwardRef(ArrowDownOutlined);","import React, { useRef } from 'react';\nimport { List, Button, Tooltip } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ImageZoom from './image_zoom';\n\n// 显示图片列表\nconst ImagesListHandle = ({ imagesList, setImagesList }) => {\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  // url:必须; fileName:必须;\n\n  const deleteCurrentImage = (index) => {\n    // 删除一张图片\n    const deepcopyImages = [].concat(imagesList);\n    deepcopyImages.splice(index, 1);\n    console.log(deepcopyImages);\n    setImagesList(deepcopyImages);\n  }\n\n  const moveImageObjIndex = (index, moveNum = 1) => {\n    // 上下移动图片\n    let copyImages = [].concat(imagesList);\n    const moveImgObj = copyImages.splice(index, 1)[0];\n    // console.log(moveImgObj);\n    const insertIndex = index + moveNum;\n    if (insertIndex < 0 || insertIndex > copyImages.length) {\n      console.log('Insert index Error', insertIndex);\n      return;\n    }\n    copyImages.splice(insertIndex, 0, moveImgObj);\n    // console.log(copyImages);\n    setImagesList(copyImages);\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      {imagesList.length === 0 ? null : (\n        <List itemLayout=\"vertical\" size=\"large\" dataSource={imagesList}\n          renderItem={(item, index) => (\n            <List.Item\n              key={index.toString()}\n              actions={[\n                <Tooltip title=\"上移\"><Button onClick={() => moveImageObjIndex(index, -1)} shape=\"circle\" icon={<ArrowUpOutlined />} /></Tooltip>,\n                <Tooltip title=\"下移\"><Button onClick={() => moveImageObjIndex(index)} shape=\"circle\" icon={<ArrowDownOutlined />} /></Tooltip>,\n                <Tooltip title=\"删除\"><Button onClick={() => deleteCurrentImage(index)} shape=\"circle\" icon={<DeleteOutlined />} /></Tooltip>,\n              ]}\n            ><List.Item.Meta\n              title={item.file_name}\n              avatar={<ImageZoom src={item.url}></ImageZoom>} />\n            </List.Item>\n          )}\n        ></List>\n      )}\n    </div>\n  );\n}\n\nImagesListHandle.defaultProps = {\n  imagesList: [],\n  setImagesList: index => { console.log(index); }\n};\n\nexport { ImagesListHandle };\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, Button, message, Divider, Spin, Space } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\n// import customConfig from '../../custom_config';\n// import Cos from 'cos-js-sdk-v5';\nimport { ImagesList } from '../base_components/images_list';\nimport { ImagesListHandle } from '../base_components/images_list_handle';\n\nimport { StsTemporaryKeyRequestPost } from './upload_file_requests';\nimport { cosConfig } from './sts_funcs_config';\n\nconst createImageList = (oldObj, maxImagesNum, imageKeyName) => {\n  // 创建图片列表\n  const initImagesList = [];\n  if (maxImagesNum === 1) {\n    // 只有一个图片 cosNameKey = imageKeyName\n    const currentUrlKey = imageKeyName + '_url';\n    if (Object.keys(oldObj).includes(currentUrlKey)) {\n      initImagesList.push({\n        column_key: imageKeyName,\n        url: oldObj[currentUrlKey],\n        file_name: '',\n        cos_name: oldObj[imageKeyName]\n      });\n    }\n  } else {\n    for (let index = 0; index < maxImagesNum; index++) {\n      const currentCosNameKey = imageKeyName + (index + 1);\n      const currentUrlKey = currentCosNameKey + '_url';\n      if (Object.keys(oldObj).includes(currentCosNameKey)\n        && oldObj[currentCosNameKey].length > 5\n        && Object.keys(oldObj).includes(currentUrlKey)\n        && oldObj[currentUrlKey].length > 5\n      ) {\n        initImagesList.push({\n          column_key: currentCosNameKey,\n          url: oldObj[currentUrlKey],\n          file_name: '',\n          cos_name: oldObj[currentCosNameKey]\n        });\n      }\n    }\n  }\n  return initImagesList;\n};\n\nconst createImagesObj = (imagesList, maxImagesNum, imageKeyName) => {\n  // 创建图片对象\n  let cos_names_obj = {};\n  if (maxImagesNum === 1) {\n    // 单张图片\n    cos_names_obj[imageKeyName] = imagesList.length > 0 ? imagesList[0].cos_name : '';\n  } else {\n    // 多张图片\n    for (let index = 0; index < maxImagesNum; index++) {\n      const currentCosNameKey = imageKeyName + (index + 1);\n      cos_names_obj[currentCosNameKey] = imagesList.length > index ? imagesList[index].cos_name : '';\n    }\n  }\n  console.log(cos_names_obj);\n  return cos_names_obj;\n};\n\nconst StsUploadFilesList = ({ onChange, initFileList, maxFilesNum, imageKeyName, cleanImagesCount }) => {\n  // 上传文件组件\n  // initFileList = [{culumn_key: 'image_cos_name1', url: 'https://abc.jpg'}, ]\n  const [showUploadButton, setShowUploadButton] = useState(true);\n  const currentSelectedFileObj = useRef({});\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n\n  const stsTemporaryObj = useRef({});\n  const temporaryKeyRequestObj = useRef({});\n  const [fileList, setFileList] = useState([]);\n  const deletedColumnsKeys = useRef([]);\n\n  useEffect(() => {\n    // 默认图片\n    const addObj = { file_name: '', cos_name: '' };\n    let newFilesList = [];\n    for (let index = 0; index < initFileList.length; index++) {\n      const element = initFileList[index];\n      newFilesList.push({ ...element, ...addObj });\n    }\n    setFileList(newFilesList);\n  }, [initFileList]);\n\n  useEffect(() => {\n    if (fileList.length >= maxFilesNum) {\n      setShowUploadButton(false);  // 是否显示上传按钮\n    } else {\n      setShowUploadButton(true);\n    }\n    onChange(createImagesObj(fileList, maxFilesNum, imageKeyName));\n  }, [fileList, maxFilesNum]);\n\n  useEffect(() => {\n    // 清空图片\n    setFileList([]);\n    deletedColumnsKeys.current = [];\n  }, [cleanImagesCount]);\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const createColumnKey = () => {\n    // 生成新的column_key\n    const maxIndex = fileList.length + 1;\n    return imageKeyName + maxIndex;\n  }\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后操作\n    // console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject({\n      ...cosConfig,\n      Key: respObj.image_cos_name,              /* 必须 */\n      Body: currentSelectedFileObj.current,            // 上传文件对象\n      onProgress: function (progressData) {\n        console.log(JSON.stringify(progressData));\n      }\n    }, function (err, data) {\n      console.log(err || data);\n      if (data) {\n        // console.log(data);\n        // console.log(fileList);\n\n        // 更新fileList\n        const uploadedImageObj = {\n          column_key: createColumnKey(),\n          url: respObj.image_cos_name_url,\n          cos_name: respObj.image_cos_name,\n          file_name: currentSelectedFileObj.current.name,\n        };\n        const deepcopyFileList = [].concat(fileList);\n        deepcopyFileList.push(uploadedImageObj)\n        setFileList(deepcopyFileList);\n        message.success('文件上传成功!');\n      } else {\n        // deleteCurrentImage();  //上传失败删除图片\n        message.error('文件上传失败...');\n      }\n    });\n  };\n\n  const uploadFileProps = {\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      console.log(file);\n      currentSelectedFileObj.current = file;\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <ImagesList imagesList={fileList}\n        setImagesList={setFileList}\n        deletedImageHandle={delKeysArr => deletedColumnsKeys.current = delKeysArr}\n        imageKeyName={imageKeyName}></ImagesList>\n      <Upload {...uploadFileProps}>\n        {(showUploadButton) ? (<Button><UploadOutlined /> Upload</Button>) : null}\n      </Upload>\n      <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n        reqObject={temporaryKeyRequestObj.current}\n        responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n    </div>\n  );\n};\n\nStsUploadFilesList.defaultProps = {\n  initFileList: [],\n  fileList: [],\n  maxFilesNum: 5,\n  onChange: (imagesObj) => { console.log(imagesObj) },\n  imageKeyName: 'image_cos_name',\n  cleanImagesCount: 0\n};\n\nconst StsUploadImagesList = ({ onChange, oldObj, maxImagesNum, imageKeyName }) => {\n  // 图片上传列表\n  // oldObj = {...} 包含key `${imageKeyName}1`, `${imageKeyName}1_url`......\n\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  const [imagesList, setImagesList] = useState([]);\n\n  const [showUploadButton, setShowUploadButton] = useState(true);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n\n  const currentSelectedFileObj = useRef({});\n  const temporaryKeyRequestObj = useRef({});\n  const stsTemporaryObj = useRef({});\n\n  useEffect(() => {\n    // 初始化图片列表\n    const imgList = createImageList(oldObj, maxImagesNum, imageKeyName);\n    console.log(imgList);\n    setImagesList(imgList);\n  }, [oldObj, maxImagesNum, imageKeyName]);\n\n  useEffect(() => {\n    // 图片列表改变后，触发 onChange 事件 和是否显示上传按钮\n    setShowUploadButton(imagesList.length < maxImagesNum);  // 是否显示上传按钮\n    onChange(createImagesObj(imagesList, maxImagesNum, imageKeyName));  // 触发事件\n  }, [imagesList, maxImagesNum]);\n\n  const uploadFileProps = {\n    accept: '.jpg,.jpeg,.png,.bmp',\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      // console.log(file);\n      currentSelectedFileObj.current = file;\n      setIsUploading(true);\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  const createColumnKey = () => {\n    // 生成新的column_key\n    const maxIndex = imagesList.length + 1;\n    return imageKeyName + maxIndex;\n  }\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后操作\n    // console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      setIsUploading(false);\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject({\n      ...cosConfig,\n      Key: respObj.image_cos_name,              /* 必须 */\n      Body: currentSelectedFileObj.current,            // 上传文件对象\n      onProgress: function (progressData) {\n        console.log(JSON.stringify(progressData));\n      }\n    }, function (err, data) {\n      setIsUploading(false);\n      console.log(err || data);\n      if (data) {\n        // 更新fileList\n        const uploadedImageObj = {\n          column_key: createColumnKey(),\n          url: respObj.image_cos_name_url,\n          cos_name: respObj.image_cos_name,\n          file_name: currentSelectedFileObj.current.name,\n        };\n        const deepcopyFileList = [].concat(imagesList);\n        deepcopyFileList.push(uploadedImageObj)\n        setImagesList(deepcopyFileList);\n        message.success('文件上传成功!');\n      } else {\n        // deleteCurrentImage();  //上传失败删除图片\n        message.error('文件上传失败...');\n      }\n    });\n  };\n\n  return (\n    <div>\n      <ImagesListHandle imagesList={imagesList} setImagesList={setImagesList}></ImagesListHandle>\n      <Upload {...uploadFileProps}>\n        {(showUploadButton && !isUploading) ? (<Button><UploadOutlined />上传图片</Button>) : null}\n      </Upload>\n      <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n        reqObject={temporaryKeyRequestObj.current}\n        responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n    </div>\n  )\n};\n\nStsUploadImagesList.defaultProps = {\n  onChange: (imagesObj) => { console.log(imagesObj) },  // imagesList= {cosNameKey: cosName, ...}\n  oldObj: {handleCount: 0},\n  maxImagesNum: 1,\n  imageKeyName: '',\n  cleanImagesCount: 0\n};\n\nconst StsUploadVideo = ({ onChange, oldObj, videoKeyName }) => {\n  // 上传视频组件\n  const [isUploading, setIsUploading] = useState(false);\n  const [showUploadButton, setShowUploadButton] = useState(false)\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoCosKey, setVideoCosKey] = useState('');\n  const stsTemporaryObj = useRef({});\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n  const temporaryKeyRequestObj = useRef({});\n\n  const currentSelectedFileObj = useRef({});\n\n  useEffect(() => {\n    // 更新视频url\n    if (Object.keys(oldObj).length > 0 && videoKeyName.length > 0) {\n      // console.log(oldObj);\n      const coskey_convert_urlkey = videoKeyName + '_url';\n      // console.log(coskey_convert_urlkey);\n      const currentVideoUrl = oldObj[coskey_convert_urlkey] ? oldObj[coskey_convert_urlkey] : '';\n      setVideoUrl(currentVideoUrl);\n      const currentVideoCosName = oldObj[videoKeyName] ? oldObj[videoKeyName] : '';\n      setVideoCosKey(currentVideoCosName);\n    }\n\n  }, [oldObj, videoKeyName])\n\n  useEffect(() => {\n    // video url 改变后返回给父组件\n    console.log(videoKeyName);\n    if (videoKeyName.length > 0) {\n      const newVideoObj = {[videoKeyName]: videoCosKey};\n      console.log(newVideoObj);\n      onChange(newVideoObj);\n    }\n    // 是否显示上传按钮\n    setShowUploadButton(videoCosKey.length === 0);\n  }, [videoCosKey, videoKeyName])\n\n  const delVideoHandle = () => {\n    //删除当前视频\n    setVideoUrl('');\n    setVideoCosKey('');\n  }\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后 上传视频文件到腾讯云cos\n    console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      setIsUploading(false);\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject(\n      {\n        ...cosConfig,\n        Key: respObj.image_cos_name,              /* 必须 */\n        Body: currentSelectedFileObj.current,            // 上传文件对象\n        onProgress: function (progressData) {\n          console.log(JSON.stringify(progressData));\n        }\n      }, \n      function (err, data) {\n        setIsUploading(false);\n        console.log(err || data);\n        if (data) {\n          // 更新视频文件 cos name 和 url\n          setVideoUrl(respObj.image_cos_name_url);\n          setVideoCosKey(respObj.image_cos_name);\n          message.success('视频上传成功!');\n        } else {\n          // deleteCurrentImage();  //上传失败删除图片\n          message.error('视频上传失败...');\n        }\n      }\n    );\n  }\n\n  const uploadFileProps = {\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    accept: '.mp4,.mov,.3gp',\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      if (isUploading) {\n        // 正在上传的时候不能重复上传\n        return null;\n      }\n      console.log(file);\n      currentSelectedFileObj.current = file;\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <Space direction=\"vertical\">\n        {videoUrl.length > 0 ? <video width=\"320\" height=\"240\" controls src={videoUrl}></video> : null}\n        {(showUploadButton) ? null : <Button onClick={delVideoHandle}>删除视频</Button>}\n        <Upload {...uploadFileProps}>\n          {(showUploadButton) \n            ? isUploading ? <Spin></Spin> : <Button><UploadOutlined />上传视频</Button>\n            : null}\n        </Upload>\n        \n        <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n          reqObject={temporaryKeyRequestObj.current}\n          responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n      </Space>\n    </div>\n  );\n}\nStsUploadVideo.defaultProps = {\n  onChange: obj => console.log(obj),\n  oldObj: {},\n  videoKeyName: ''\n}\n\nexport { StsUploadFilesList, StsUploadImagesList, StsUploadVideo };\n"],"sourceRoot":""}