{"version":3,"sources":["webpack:///./src/components/wx_store/categories/categories_columns_label_config.js","webpack:///./src/components/wx_store/categories/custom_select_requests.js","webpack:///./src/components/wx_store/categories/categories_requests.js","webpack:///./src/components/wx_store/categories/create_categories.js","webpack:///./src/components/wx_store/categories/categories_query_form.js","webpack:///./src/components/wx_store/categories/update_categories.js","webpack:///./src/components/wx_store/categories/categories_list.js","webpack:///./src/components/wx_store/categories/categories_query_params_display.js","webpack:///./src/components/wx_store/categories/index.js","webpack:///./src/pages/wxcategory.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./src/components/base_components/form_component.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack:///./src/components/base_components/select_component.js"],"names":["formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectChannels","value","onChange","e","console","log","useState","channelOptions","setChannelOptions","useEffect","Promise","resolve","reject","sendAxiosRequest","then","respObj","catch","err","channelsList","results","updateOptions","index","length","element","push","id","label","name","error","options","formKeySelectComponentsObj","formGetRequestParamsKeys","formInitialObj","imageKeyNames","apiLists","ItemRendererComponent","item","itemDetailClick","listsIndex","url","icon_url","productTitle","category_name","productEffects","explains","salePrice","clickDetailHandle","CategoriesRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","defaultProps","CategoriesRequestPost","concat","CategoriesRequestPut","CategoriesRequestDelete","CreateCategories","visible","setVisible","reloadListCount","setReloadListCount","categoriesImageObj","useRef","oldObj","createCount","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","closeModal","current","title","closable","footer","style","width","height","textAlign","maxImagesNum","imageKeyName","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","onFinish","values","upObj","cancelHandle","showDeleteButton","Object","keys","includes","code","message","val","booleanVal","CategoriesQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdateCategories","setOldCategoriesHomeImages","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","initImgAndForm","categoriesHomeImgs","currentCosNameKey","currentUrlKey","currentCosName","currentUrl","cosNameKey","cosName","urlKey","deleteHandle","updateFormObj","success","judgeHasMore","resp","next","CategoriesList","requestParams","hasMore","hasMorestate","setHasMoreState","loading","setLoading","requesting","setRequesting","page","categoriesData","setCategoriesData","categoriesRequestGetCount","setCategoriesRequestGetCount","updateCategoriesVisible","setUpdateCategoriesVisible","selectedObj","setSelectedObj","reloadListsHandle","loadMore","current_page","Number","isInteger","selObj","productsData","addedNum","CategoriesQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","currentFactor","padding","CategoriesComponent","drawerVisible","setDrawerVisible","createCategoriesVisible","setCreateCategoriesVisible","span","onClick","shape","icon","ReloadOutlined","SearchOutlined","float","type","currentRequestParams","CategoryManagePage","$export","S","isObject","floor","Math","module","exports","it","isFinite","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","FormItem","formKey","rulesObj","passwordKeys","showLabelName","disabled","currentLabel","currentInputValue","Item","initialValue","rules","Password","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","clickMethod","CustomForm","form","Form","useForm","buttonIsLoading","setButtonIsLoading","setFieldsValue","layout","map","key","toString","htmlType","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","wrapperCol","props","ref","AntdIcon","assign","displayName","Option","Select","CustomSelect","mode","allowClear","obj","selectComponentWidth"],"mappings":"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","file":"component---src-pages-wxcategory-js-41fb1ef2550d2a1ee8ba.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { DatePicker } from 'antd';\nimport { CustomSelect } from '../../base_components/select_component';\nimport ListsItem from '../../base_components/list_item';\nimport { channelsRequestGet } from './custom_select_requests'\n\n// Categories 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n  \"id\", \"channel\", \"category_name\", \"icon\", \"img\", \"keywords\", \"p_height\",\n  \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\n  \"id\", \"icon\", \"img\", \"handle_staff_id\", \"add_time\", \"update_time\"\n];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n  \"icon\", \"img\"\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n  \"id\": \"ID\", \"channel\": \"频道ID\", \"category_name\": \"分类名\", \"icon\": \"图标\", \"img\": \"背景图\", \"keywords\": \"关键词\", \"p_height\": \"背景图高\",\n  \"handle_staff_id\": \"操作员ID\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectChannels = ({ value = '', onChange = e => console.log(e) }) => {\n  const [channelOptions, setChannelOptions] = useState([]);\n  useEffect(() => {\n    channelsRequestGet()\n      .then(respObj => {\n        const channelsList = respObj.results;\n        let updateOptions = [];\n        for (let index = 0; index < channelsList.length; index++) {\n          const element = channelsList[index];\n          updateOptions.push({\n            value: element.id,\n            label: element.name\n          })\n        }\n        setChannelOptions(updateOptions);\n      })\n      .catch(error => {\n        console.log(error);\n        setChannelOptions([]);\n      });\n  }, []);\n  return (<CustomSelect options={channelOptions} value={value} onChange={onChange}></CustomSelect>)\n};\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\n// const SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]} />);\nconst formKeySelectComponentsObj = {\n  // 'end_time': SelectEndTime,\n  // exampleColumn: SelectBoolean,\n  'channel': <SelectChannels />,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [\"icon\", \"img\"];\n\n//  ~~~~~~ 表单get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\"category_name\"];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n  \"id\": 0, \"channel\": 1, \"category_name\": \"\", \"icon\": \"\", \"img\": \"\", \"keywords\": \"\", \"p_height\": 155,\n  \"handle_staff_id\": 0, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"\n}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyNames = [\"icon\", \"img\"];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 1;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['category-admin/v1/category', ];\n\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst ItemRendererComponent = ({ item, index, itemDetailClick }) => {\n  // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n  console.log(item);\n  return (<div>\n    <ListsItem\n      listsIndex={index}\n      url={item.icon_url}\n      productTitle={item.category_name}\n      productEffects={`分类说明: ${item.explains}`}\n      salePrice={0}\n      clickDetailHandle={itemDetailClick}\n    ></ListsItem>\n  </div>);\n};\n\nexport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n  apiLists,\n  ItemRendererComponent\n};\n","import React from 'react';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\n// 自定义 Select 组件的request请求, ～～～～～～ 根据需要重写 ～～～～～～\n\nconst channelsRequestGet = () => {\n  // 频道 Get 请求\n  return new Promise(function (resolve, reject) {\n    const api = 'channel/v1/channels';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nconst categoryRequestGet = () => {\n  // 分类 Get请求\n  return new Promise(function (resolve, reject) {\n    const api = 'category-admin/v1/category';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n}\n\nexport {\n  channelsRequestGet,\n  categoryRequestGet\n}\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './categories_columns_label_config';\n\n// Categories 的request请求\n\nconst CategoriesRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Categories Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nCategoriesRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst CategoriesRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Categories post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nCategoriesRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst CategoriesRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Categories put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nCategoriesRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst CategoriesRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Categories delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nCategoriesRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  CategoriesRequestGet,\n  CategoriesRequestPost,\n  CategoriesRequestPut,\n  CategoriesRequestDelete\n};\n","import React, { useRef, useState } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { CategoriesRequestPost } from './categories_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './categories_columns_label_config';\n\n// 新建 Modal\n\nconst CreateCategories = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n  const categoriesImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    categoriesImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const categoriesImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    categoriesImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...categoriesImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"Categories 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            maxImagesNum={maxImagesNum}\n            imageKeyName={imageKeyNames[0]}\n            onChange={categoriesImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <CategoriesRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></CategoriesRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreateCategories.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateCategories;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formGetRequestParamsKeys,\n  formInitialObj\n} from './categories_columns_label_config';\n// 列表查询 form\n\nconst CategoriesQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <Drawer\n      title=\"销售记录查询\"\n      width=\"100%\"\n      height=\"400px\"\n      placement=\"top\"\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={null}\n    >\n      <CustomForm\n        columns={formGetRequestParamsKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={false}\n        formInitialObj={formInitialObj}\n        initFormCount={initFormCount}\n      ></CustomForm>\n    </Drawer>\n  );\n};\n\nCategoriesQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default CategoriesQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { CategoriesRequestPut, CategoriesRequestDelete  } from './categories_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './categories_columns_label_config';\n\n// 编辑 Categories\n\nconst UpdateCategories = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n  const [oldCategoriesHomeImages, setOldCategoriesHomeImages] = useState([]);\n  const categoriesImageObj = useRef({});\n\n  const [oldCategoriesImageUrl, setOldCategoriesImageUrl] = useState('');\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(false);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deleteCategories = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    let categoriesHomeImgs = [];\n    const imgKey = imageKeyNames[0];\n    const currentCosNameKey = imgKey;\n    const currentUrlKey = currentCosNameKey + '_url';\n    const currentCosName = oldObj[currentCosNameKey];\n    const currentUrl = oldObj[currentUrlKey];\n    categoriesHomeImgs.push({\n      cosNameKey: currentCosNameKey,\n      cosName: currentCosName,\n      urlKey: currentUrlKey,\n      url: currentUrl\n    });\n    // for (let index = 1; index < 10; index++) {\n    //   const currentCosNameKey = imgKey + index;\n    //   const currentUrlKey = currentCosNameKey + '_url';\n    //   const currentCosName = oldObj[currentCosNameKey];\n    //   const currentUrl = oldObj[currentUrlKey];\n    //   if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n    //     categoriesHomeImgs.push({\n    //       cosNameKey: currentCosNameKey,\n    //       cosName: currentCosName,\n    //       urlKey: currentUrlKey,\n    //       url: currentUrl\n    //     });\n    //   }\n    // }\n    // console.log(categoriesHomeImgs);\n    setOldCategoriesHomeImages(categoriesHomeImgs);   // 更新图片列表\n  }\n\n  const categoriesImageUploaded = (imagesObj) => {\n    // 轮播图上传后操作\n    categoriesImageObj.current = imagesObj;\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...categoriesImageObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible}\n      title=\"Categories\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[0]}\n          oldObj={oldObj}\n          onChange={categoriesImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deleteCategories}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <CategoriesRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></CategoriesRequestPut>\n      <CategoriesRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></CategoriesRequestDelete>\n    </Modal>\n  )\n}\n\nUpdateCategories.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdateCategories;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ProductsList from '../../base_components/products_list';\nimport { CategoriesRequestGet } from './categories_requests';\n// import CreateCategories from './create_categories';\nimport UpdateCategories from './update_categories';\nimport { ItemRendererComponent } from './categories_columns_label_config';\n\nconst judgeHasMore = resp => {\n  if (Object.keys(resp).includes('next')\n    && typeof resp.next === 'string'\n    && resp.next.length > 5) {\n    return true;\n  }\n  return false;\n};\n\n// 列表编辑 页面\n\nconst CategoriesList = ({ reloadListCount, setReloadListCount, requestParams }) => {\n  const hasMore = useRef(true);\n  const [hasMorestate, setHasMoreState] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [requesting, setRequesting] = useState(false);\n  const reqParams = useRef({ page: 0 });\n\n  const [categoriesData, setCategoriesData] = useState([]);\n  const [categoriesRequestGetCount, setCategoriesRequestGetCount] = useState(0);\n\n  // const [createCategoriesVisible, setCreateCategoriesVisible] = useState(false);\n  const [updateCategoriesVisible, setUpdateCategoriesVisible] = useState(false);\n  const [selectedObj, setSelectedObj] = useState({});\n\n  useEffect(() => {\n    // 加载、更新或创建数据后 重新读取列表\n    reqParams.current = { ...requestParams };\n    reloadListsHandle();\n  }, [reloadListCount]);\n\n  useEffect(() => {\n    // useState才可以读取更多\n    setHasMoreState(hasMore.current);\n  }, [hasMore.current])\n\n  useEffect(() => {\n    // 读取更多 useEffect解决异步\n    if (requesting) {\n      setRequesting(false);\n      loadMore();\n    }\n  }, [requesting])\n\n  const loadMore = () => {\n    // 读取更多列表\n    if (hasMore.current && !loading) {\n      const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n      reqParams.current = { ...reqParams.current, page: current_page };\n      console.log(reqParams.current);\n      setCategoriesRequestGetCount(categoriesRequestGetCount + 1);\n      setLoading(true);\n    } else {\n      console.log('Error state: hasMore is ', hasMore.current, ', loading is ', loading);\n    }\n  };\n\n  const reloadListsHandle = () => {\n    // 重新读取数据\n    reqParams.current = { ...reqParams.current, page: 0 };\n    // console.log(reqParams.current);\n    setCategoriesData([]);\n    // setHasMore(true);\n    hasMore.current = true;\n    setHasMoreState(true);\n    setLoading(false);\n    setRequesting(true);  // 读取列表 使用 useEffect 解决异步问题\n  };\n\n  const categoriesGetResponse = resp => {\n    console.log('resp process...');\n    setLoading(false);\n    if (Object.keys(resp).includes('code')\n      && resp.code === 1000\n      && Object.keys(resp).includes('results')) {\n      setCategoriesData(categoriesData.concat(resp.results));\n      // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n      hasMore.current = judgeHasMore(resp);\n      setHasMoreState(judgeHasMore(resp));\n    } else {\n      console.log('Error: get data...');\n    }\n  };\n\n  const itemDetailClick = (index) => {\n    // 打开详情编辑窗口\n    // console.log(categoriesData[index]);\n    let selObj = { ...categoriesData[index] };\n    console.log(selObj);\n    // 日期转 moment 时间\n    // selObj.end_time = moment(dateFormat(selObj.end_time), 'YYYY-MM-DD HH:mm:ss');\n    setSelectedObj(selObj);\n    setUpdateCategoriesVisible(true);\n  };\n\n  const CurrentItemRendererComponent = ({ item, index }) => {\n    // 每一行渲染 的组件\n    return (\n      <ItemRendererComponent item={item} index={index} itemDetailClick={itemDetailClick} />\n    )\n  }\n\n  return (\n    <div>\n      <CategoriesRequestGet requestCount={categoriesRequestGetCount}\n        reqParams={reqParams.current}\n        responseDataHandle={categoriesGetResponse}></CategoriesRequestGet>\n      <ProductsList\n        productsData={categoriesData}\n        loadMore={loadMore}\n        hasMore={hasMorestate}\n        ItemRendererComponent={CurrentItemRendererComponent}></ProductsList>\n\n      <UpdateCategories\n        visible={updateCategoriesVisible}\n        setVisible={setUpdateCategoriesVisible}\n        oldObj={selectedObj}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></UpdateCategories>\n    </div>\n  );\n}\n\nCategoriesList.defaultProps = {\n  reloadListCount: 1,\n  setReloadListCount: (addedNum) => { console.log(addedNum); },\n  requestParams: { page: 0 }\n}\n\nexport default CategoriesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './categories_columns_label_config';\n\n// 显示查询条件组件\n\nconst CategoriesQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default CategoriesQueryParams;\n","import React, { useState, useRef } from 'react';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreateCategories from './create_categories';\nimport CategoriesQueryDrawerForm from './categories_query_form';\nimport CategoriesList from './categories_list';\nimport CategoriesQueryParams from './categories_query_params_display';\n// Categories 入口组件\n\nconst CategoriesComponent = () => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createCategoriesVisible, setCreateCategoriesVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            <h4>Categories 商品分类(热搜词)</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateCategoriesVisible(true)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><CategoriesQueryParams paramsObj={reqParams.current}></CategoriesQueryParams></Col>\n      </Row>\n      <CategoriesQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></CategoriesQueryDrawerForm>\n\n      <CategoriesList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n      ></CategoriesList>\n\n      <CreateCategories\n        visible={createCategoriesVisible}\n        setVisible={setCreateCategoriesVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateCategories>\n    </div>\n  )\n};\n\nexport default CategoriesComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport CategoriesComponent from '../components/wx_store/categories';\n\nconst CategoryManagePage = () => (\n  <SiteLayout>\n    <SEO title=\"WX Category\" />\n    <CategoriesComponent></CategoriesComponent>\n  </SiteLayout>\n)\n\nexport default CategoryManagePage;\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default React.forwardRef(ReloadOutlined);","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange, mode }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value} mode={mode} allowClear>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n  mode: null,\n}\n\nexport { CustomSelect };\n"],"sourceRoot":""}