{"version":3,"sources":["webpack://zwglass-purchase-records/./src/components/base_components/load_more_button_conpoment.jsx","webpack://zwglass-purchase-records/./src/components/base_components/scroll_handle/goback_origin_scroll.js","webpack://zwglass-purchase-records/./src/components/base_components/select_component.js","webpack://zwglass-purchase-records/./src/components/modals/goods_opt.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/goods_columns_label_config.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/custom_select_requests.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/goods_requests.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/create_goods.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/goods_query_form.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/update_goods.jsx","webpack://zwglass-purchase-records/./src/components/base_components/goods_category/goods_category_requests.jsx","webpack://zwglass-purchase-records/./src/components/base_components/goods_category/goods_category_select.jsx","webpack://zwglass-purchase-records/./src/components/modals/goods_category_opt.jsx","webpack://zwglass-purchase-records/./src/components/modals/goods_color_price_opt.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/goods_list.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/goods_query_params_display.jsx","webpack://zwglass-purchase-records/./src/components/wx_store/goods/index.jsx"],"names":["LoadMoreButton","tips","hasMore","onClick","loading","style","width","height","margin","textAlign","type","shape","icon","document","sourceScrollTop","documentElement","scrollTop","body","clientHeight","addEventListener","toSourceScrollTopHandle","currentScrollTop","scrollTo","removeEventListener","console","log","toSourceScrollTop","size","defaultProps","ScrollGoBack","visible","useState","setCurrentScrollTop","useEffect","currentTop","topSize","window","setTimeout","top","parseInt","behavior","Option","Select","CustomSelect","options","value","onChange","mode","allowClear","map","obj","index","key","toString","label","customConfig","GoodsOptModal","setVisible","visibleNum","selectHandle","title","closable","footer","maxHeight","overflow","selectButtonOnClick","closeVisibleNum","goodsObj","colorObj","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectChannels","e","channelOptions","setChannelOptions","Promise","resolve","reject","sendAxiosRequest","then","respObj","catch","err","channelsList","results","updateOptions","length","element","push","id","name","error","SelectCategories","setOptions","category_name","SelectHasDown","SelectBoolean","formKeySelectComponentsObj","formKeysHandleButtonObj","setOptModalState","goods_id","buttonTips","clickMethod","formGetRequestParamsKeys","formInitialObj","formRulesList","required","message","imageKeyNames","videoKeyName","apiLists","actionButtons","item","setSelectedObj","btnList","renderItem","textsContent","is_on_sale","sell_volume","explains","moment","add_time","format","update_time","updateItemObj","actions","img","home_pic1_url","avatar","description","goods_brief","content","customRanderItem","GoodsRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","GoodsRequestPost","concat","GoodsRequestPut","GoodsRequestDelete","createFormNotShowKeys","CreateGoods","reloadListCount","setReloadListCount","goodsImageObj","useRef","videoObj","oldObj","handleCount","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","current","optModalState","updateFormObj","setUpdateFormObj","closeModal","uploadedVideoObj","maxImagesNum","imageKeyName","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","formKeysItemButtonObj","onFinish","values","upObj","cancelHandle","showDeleteButton","rulesObj","modalState","setModalState","Object","keys","includes","code","val","booleanVal","GoodsQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","queryId","booleanValue","queryParamsObj","UpdateGoods","updatedHandle","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","endTimeStamp","end_time","endTimeMoment","deleteHandle","del_handle","updatedObj","GoodsCategorySelect","selector","setSelector","categories","split","splice","selectors","GoodsCategoryModal","updateCategory","categorySelectors","setCategorySelectors","mask","centered","direction","selectedCategories","ColorPriceEditOptModal","state","goodsobj","location","setLocation","setVisibleNum","GoodsList","requestParams","hasMoreState","setHasMoreState","setLoading","requesting","setRequesting","page","goodsData","setGoodsData","goodsRequestGetCount","setGoodsRequestGetCount","goodsRequestPutCount","setGoodsRequestPutCount","goodsPutObj","setGoodsPutObj","selectedObj","selectColorHandle","loadMore","reloadListsHandle","current_page","Number","isInteger","updatedGoodsHandle","resp","originGoodsData","updateObj","copyGoodsData","updateGoodsId","updateGoodsData","header","listData","randerItem","setSelectedItem","selectorCategories","updateGoodsCategoryObj","join","next","judgeHasMore","addedNum","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","currentFactor","padding","drawerVisible","setDrawerVisible","createGoodsVisible","setCreateGoodsVisible","span","ReloadOutlined","SearchOutlined","float","currentRequestParams"],"mappings":"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","file":"010fc29384fb3c14f7fa93bbc3b5c0b98507982b-523a6421d7040da6c587.js","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\n\nconst toSourceScrollTop = (sourceScrollTop, clientHeight) => {\n    // 数据加载，滚动条回到原来位置\n    if (typeof document !== 'undefined') {\n        // const sourceScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n        // const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n\n        const toSourceScrollTopHandle = () => {\n            const currentScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n\n            if (sourceScrollTop + clientHeight < currentScrollTop) {\n                if (document.documentElement.scrollTop) {\n                    document.documentElement.scrollTo(0, sourceScrollTop);\n                    document.removeEventListener('scroll', toSourceScrollTopHandle, false);\n                }else if(document.body.scrollTop){\n                    document.body.scrollTo(0, sourceScrollTop);\n                    document.removeEventListener('scroll', toSourceScrollTopHandle, false);\n                }\n                console.log(currentScrollTop, currentScrollTop - clientHeight);\n            }\n        }\n        document.addEventListener('scroll', toSourceScrollTopHandle, false);\n    }\n}\n\nconst LoadMoreButton = ({hasMore, onClick, loading}) => {\n    // 读取更多按钮\n\n    const loadMoreHandle = () => {\n        if (typeof document !== 'undefined') {\n            const sourceScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n            const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n            onClick();\n            toSourceScrollTop(sourceScrollTop, clientHeight);\n        }else {\n            onClick();\n        }\n    }\n\n    const loadingOrNoMoreTips = () => {\n        const tips = loading ? '加载中...' : '没有更多了...';\n        return (<p>{tips}</p>);\n    }\n    return (\n        <div style={{width: '100%', height: 'auto', margin: '1rem 1rem 1rem 0.1rem', textAlign: 'center'}}>\n            {hasMore \n                ? (<Button\n                        type=\"default\"\n                        shape=\"round\"\n                        icon={<DownOutlined />}\n                        style={{width: '80%'}}\n                        onClick={loadMoreHandle}\n                        size=\"large\"\n                    >更多结果</Button>)\n                : loadingOrNoMoreTips()}\n        </div>\n    )\n}\n\nLoadMoreButton.defaultProps = {\n    hasMore: false,\n    onClick: () => console.log('Load more button'),\n    loading: false,\n}\n\nexport { LoadMoreButton };\n","import React, { useEffect, useState } from 'react';\n// 滚动条记住当前位置，并回到当前位置\n\nconst computeCurrentScrollTop = () => {\n    // 计算当前滚动条高度\n    if (typeof document !== 'undefined') {\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n        // const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n        // const pageHeight = document.body.scrollHeight || document.documentElement.scrollHeight || document.documentElement.offsetHeight; // 文档的总高度\n        return scrollTop;\n    }\n    return 0\n}\n\nconst scrollToTopSize = (topSize) => {\n    // 滚动条滚动到指定位置\n    if (typeof window !== 'undefined') {\n        setTimeout(() => {\n            // console.log(topSize);\n            // console.log('body');\n            window.scrollTo({ \n                top: parseInt(topSize), \n                behavior: \"smooth\" \n            });\n        }, 500)\n    }\n}\n\nconst ScrollGoBack = ({visible}) => {\n    // visible > 0 滚动条记住当前位置，visible == 0 返回当前位置\n    const [currentScrollTop, setCurrentScrollTop] = useState(0);\n\n    useEffect(() => {\n        if (visible > 0) {\n            // 保存当前位置\n            const currentTop = computeCurrentScrollTop();\n            // console.log(currentTop);\n            setCurrentScrollTop(currentTop);\n        }\n        if (visible === 0) {\n            // 滚动条回到原来位置\n            scrollToTopSize(currentScrollTop);\n        }\n    }, [visible])\n    return <></>\n}\nScrollGoBack.defaultProps = {\n    visible: 0\n}\n\nexport { ScrollGoBack };","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange, mode }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value} mode={mode} allowClear>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n  mode: null,\n}\n\nexport { CustomSelect };\n","import React from 'react';\nimport { Button, Modal } from 'antd';\n// import CustomerList from '../customer_list';\nimport GoodsComponent from '../wx_store/goods';\n\n// 选择商品及商品颜色 模态框(不包括 数量)\n\nconst GoodsOptModal = ({ visible, setVisible, visibleNum, selectHandle }) => {\n    // 选择商品 modal\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"选择商品\"\n                closable={false}\n                footer={[\n                    <Button key=\"back\" onClick={() => { setVisible(0); }}>取消</Button>\n                ]}\n            >\n                <div style={{width: '100%', maxHeight: '40rem', overflow: 'auto'}}>\n                    <GoodsComponent selectButtonOnClick={selectHandle}></GoodsComponent>\n                </div>\n            </Modal>\n        </>\n    );\n}\nGoodsOptModal.defaultProps = {\n    visible: 0,\n    setVisible: (closeVisibleNum) => console.log(closeVisibleNum),\n    visibleNum: 1,\n    selectHandle: (goodsObj, colorObj) => console.log(goodsObj, colorObj),\n};\n\nexport { GoodsOptModal };\n","import React, { useState, useEffect } from 'react';\nimport { navigate } from 'gatsby';\nimport { Button, DatePicker } from 'antd';\n\nimport moment from 'moment';\nimport { CustomSelect } from '../../base_components/select_component';\n// import { GoodsCategoryModal } from '../../modals/goods_category_opt';\nimport { customRanderItem } from '../../base_components/lists/custom_list';\nimport { channelsRequestGet, categoryRequestGet } from './custom_select_requests';\n\n// Goods 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n    \"id\", \"name\", \"channel_id\", \"categories\", \"sort_order\", \"freight_template_id\",\n    \"freight_type\", \"goods_brief\", \"goods_number\", \"goods_unit\", \"has_done\", \"has_gallery\",\n    \"is_delete\", \"is_index\", \"is_new\", \"is_on_sale\", \"keywords\", \"cost_price\",\n    \"min_cost_price\", \"min_retail_price\", \"retail_price\", \"sell_volume\", \"https_pic\",\n    \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\", \"home_pic4\",\n    \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\",\n    \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\n    \"id\", \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\",\n    \"home_pic4\", \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\",\n    \"handle_staff_id\", \"add_time\", \"update_time\"\n];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n    \"categories\", \"sort_order\", \"freight_template_id\", \"freight_type\", \"goods_number\", \"cost_price\", \"min_cost_price\", \"min_retail_price\", \"retail_price\",\n    \"goods_video\", \"handle_staff_id\", \"is_index\", \"is_delete\", \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\",\n    \"home_pic4\", \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"add_time\", \"update_time\",\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n    \"id\": \"ID\", \"name\": \"品名\", \"channel_id\": \"频道\", \"categories\": \"分类\", \"sort_order\": \"排序顺序\", \"freight_template_id\": \"快递模版ID\",\n    \"freight_type\": \"快递类别\", \"goods_brief\": \"商品简介\", \"goods_number\": \"商品数量\", \"goods_unit\": \"单位\", \"has_done\": \"有现货\", \"has_gallery\": \"已推广\",\n    \"is_delete\": \"已下架\", \"is_index\": \"在序列\", \"is_new\": \"是新品\", \"is_on_sale\": \"已上架\", \"keywords\": \"关键词\", \"cost_price\": \"成本价\",\n    \"min_cost_price\": \"最低成本价\", \"min_retail_price\": \"最低零售价\", \"retail_price\": \"零售价\", \"sell_volume\": \"销售数量\", \"https_pic\": \"链接图\",\n    \"goods_desc\": \"详情页\", \"list_pic\": \"主图\", \"home_pic1\": \"主图1\", \"home_pic2\": \"主图2\", \"home_pic3\": \"主图3\", \"home_pic4\": \"主图4\",\n    \"home_pic5\": \"主图5\", \"home_pic6\": \"主图6\", \"home_pic7\": \"主图7\", \"home_pic8\": \"主图8\", \"home_pic9\": \"主图9\", \"goods_video\": \"商品视频\",\n    \"handle_staff_id\": \"操作员ID\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectChannels = ({ value = '', onChange = e => console.log(e) }) => {\n    const [channelOptions, setChannelOptions] = useState([]);\n    useEffect(() => {\n        channelsRequestGet()\n            .then(respObj => {\n                const channelsList = respObj.results;\n                let updateOptions = [];\n                for (let index = 0; index < channelsList.length; index++) {\n                    const element = channelsList[index];\n                    updateOptions.push({\n                        value: element.id,\n                        label: element.name\n                    })\n                }\n                setChannelOptions(updateOptions);\n            })\n            .catch(error => {\n                console.log(error);\n                setChannelOptions([]);\n            });\n    }, []);\n    return (<CustomSelect options={channelOptions} value={value} onChange={onChange}></CustomSelect>)\n};\nconst SelectCategories = ({ value = '', onChange = e => console.log(e) }) => {\n    const [options, setOptions] = useState([]);\n    useEffect(() => {\n        categoryRequestGet()\n            .then(respObj => {\n                const channelsList = respObj.results;\n                let updateOptions = [];\n                for (let index = 0; index < channelsList.length; index++) {\n                    const element = channelsList[index];\n                    updateOptions.push({\n                        value: element.id,\n                        label: element.category_name\n                    })\n                }\n                setOptions(updateOptions);\n            })\n            .catch(error => {\n                console.log(error);\n                setOptions([]);\n            });\n    }, []);\n    return (<CustomSelect options={options} value={value} onChange={onChange}></CustomSelect>)\n};\nconst SelectHasDown = (<CustomSelect options={[{ value: 0, label: '定制' }, { value: 1, label: '现货' }]}></CustomSelect>);\nconst SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]}></CustomSelect>);\nconst formKeySelectComponentsObj = {\n    // exampleColumn: SelectExample,\n    // 'end_time': SelectEndTime,\n    'channel_id': <SelectChannels />,\n    'categories': <SelectCategories />,\n    'has_done': SelectHasDown,\n    'has_gallery' : SelectBoolean,\n    'is_delete': SelectBoolean,\n    'is_index': SelectBoolean,\n    'is_new': SelectBoolean,\n    'is_on_sale': SelectBoolean,\n};\n\n// ~~~~~~ 表单自定义操作按钮, 根据实际添加 ~~~~~~\nconst formKeysHandleButtonObj = (setOptModalState) => {\n    return {\n        goods_id: {buttonTips: '选择商品', clickMethod: () => setOptModalState(1)},\n    };\n};\n\n// ~~~~~~ 表单是图片列, 根据实际添加(废弃, 改用 imageKeyNames) ~~~~~~\n// const formKeysIsImages = [\n//     \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\", \"home_pic4\",\n//     \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\"\n// ];\n\n// ~~~~~~ 查询表单 get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\n    \"id\", \"name\", \"channel_id\", \"categories\", \"is_on_sale\",\n];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n    \"id\": 0, \"name\": \"\", \"channel_id\": 1, \"categories\": \"\", \"sort_order\": 0, \"freight_template_id\": 0,\n    \"freight_type\": 1, \"goods_brief\": \"\", \"goods_number\": 0, \"goods_unit\": \"副\", \"has_done\": 1, \"has_gallery\": 1,\n    \"is_delete\": 0, \"is_index\": 1, \"is_new\": 0, \"is_on_sale\": 1, \"keywords\": \"\", \"cost_price\": 0,\n    \"min_cost_price\": 0, \"min_retail_price\": 0, \"retail_price\": 0, \"sell_volume\": 0, \"https_pic\": \"\",\n    \"goods_desc\": \"\", \"list_pic\": \"\", \"home_pic1\": \"\", \"home_pic2\": \"\", \"home_pic3\": \"\", \"home_pic4\": \"\",\n    \"home_pic5\": \"\", \"home_pic6\": \"\", \"home_pic7\": \"\", \"home_pic8\": \"\", \"home_pic9\": \"\", \"goods_video\": \"\",\n    \"handle_staff_id\": 0, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"  \n}\n\n// ~~~~~~ 表单值规则, 根据实际添加 ~~~~~~\n// formRulesList = {formKey: [{require: true, message: 'Please input Password!',}, ]};\nconst formRulesList = {\"password\": [{required: true, message: 'Please input Password!',}, ], }\n\n// ~~~~~~ 图片列名称, 根据实际修改(多张图片去掉最后序号数字) ~~~~~~\nconst imageKeyNames = ['home_pic'];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 9;\n\n// ~~~~~~ 视频列名称 ~~~~~~\nconst videoKeyName = 'goods_video';\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['goods-admin/v1/goods', ];\n\nconst actionButtons = (item, setVisible, setSelectedObj, selectButtonOnClick) => {\n    const onClickInfo = () => {\n        setSelectedObj(item);\n        setVisible(2);\n    };\n    const gotoColorPricePage = () => {\n        // 跳转到 颜色价格页面 传商品id\n        // navigate(\"/wxcolorprice\", { state: { goodsobj: item } });\n        setSelectedObj(item);\n        setVisible(4);\n    }\n    const goodsCategoryhandle = () => {\n        // 商品分类(热搜词)操作\n        setSelectedObj(item);\n        setVisible(3);\n    }\n    const btnList = [\n        <Button onClick={onClickInfo} type=\"link\">详情</Button>,\n        <Button onClick={gotoColorPricePage} type=\"link\">颜色价格</Button>,\n        <Button onClick={goodsCategoryhandle} type=\"link\">商品分类(热搜词)</Button>,\n    ];\n    if (selectButtonOnClick) {\n        btnList.push(<Button onClick={() => selectButtonOnClick(item)} type=\"link\">选择</Button>)\n    }\n    return btnList;\n}\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst renderItem = (item, setSelectedObj, selectButtonOnClick, setVisible, visible) => {\n    // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n    const textsContent = (\n        <div>\n            <p>{`商品ID: ${item.id}`}</p>\n            <p>{`已上架: ${item.is_on_sale > 0 ? '是' : '否'}`}</p>\n            <p>{`总销量: ${item.sell_volume}`}</p>\n            <p>{`说明: ${item.explains}`}</p>\n            <p>{`上架时间: ${moment(item.add_time).format('YYYY-MM-DD HH:mm:ss')}`}</p>\n            <p>{`更新时间: ${moment(item.update_time).format('YYYY-MM-DD HH:mm:ss')}`}</p>\n        </div>\n    )\n    const updateItemObj = {\n        id: item.id,\n        actions: actionButtons(item, setVisible, setSelectedObj, selectButtonOnClick),\n        img: item.home_pic1_url,\n        avatar: '',\n        title: item.name,\n        description: `商品简介: ${item.goods_brief}`,\n        content: textsContent,\n    };\n    return customRanderItem(updateItemObj, 120);\n};\n\nconst judgeHasMore = (resp) => {\n    if (Object.keys(resp).includes('next')\n        && typeof resp.next === 'string'\n        && resp.next.length > 5) {\n        return true;\n    }\n    return false;\n};\n\nexport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formKeysIsImages,\n    formGetRequestParamsKeys,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName,\n    apiLists,\n    renderItem,\n    judgeHasMore\n};\n","import React from 'react';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\n// 自定义 Select 组件的request请求, ～～～～～～ 根据需要重写 ～～～～～～\n\nconst channelsRequestGet = () => {\n  // 频道 Get 请求\n  return new Promise(function (resolve, reject) {\n    const api = 'channel/v1/channels';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nconst categoryRequestGet = () => {\n  // 分类 Get请求\n  return new Promise(function (resolve, reject) {\n    const api = 'category-admin/v1/category';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n}\n\nexport {\n  channelsRequestGet,\n  categoryRequestGet\n}\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './goods_columns_label_config';\n\n// Goods 的request请求\n\nconst GoodsRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Goods Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst GoodsRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Goods post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst GoodsRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Goods put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst GoodsRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Goods delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  GoodsRequestGet,\n  GoodsRequestPost,\n  GoodsRequestPut,\n  GoodsRequestDelete\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n// import moment from 'moment';\n\nimport { StsUploadImagesList, StsUploadVideo } from '../../upload_files/sts_upload_files_list';\nimport { GoodsRequestPost } from './goods_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName\n} from './goods_columns_label_config';\n\nconst createFormNotShowKeys = ['id'].concat(formNotShowKeys);\n\n// 新建 Modal\n\nconst CreateGoods = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n    const goodsImageObj = useRef({});\n    const videoObj = useRef({});\n    const oldObj = useRef({handleCount: 0});\n\n    const [initFormCount, setInitFormCount] = useState(0);\n\n    const [postRequestCount, setPostRequestCount] = useState(0);\n    const reqObject = useRef({});\n\n    useEffect(() => {\n        if (visible === 1) {\n            // 显示创建modal 初始化表格, 初始化图片\n            setInitFormCount(initFormCount + 1);  // 初始化表格\n            oldObj.current = {handleCount: oldObj.current.handleCount + 1};  // 初始化图片\n        }\n    }, [visible]);\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    const postResponseDataHandle = (respObj) => {\n        // 表单提交后的操作\n        if (\n            Object.keys(respObj).includes('code')\n            && respObj.code === 1000\n        ){\n            closeModal();\n            setReloadListCount(reloadListCount + 1)\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const closeModal = () => {\n        // 关闭Modal\n        setVisible(0);\n    }\n\n    const goodsImageUploaded = (imagesObj) => {\n        // 图片上传后操作\n        goodsImageObj.current = { ...imagesObj };\n        console.log(imagesObj);\n    }\n\n    const uploadedVideo = (uploadedVideoObj) => {\n        // 视频上传后操作\n        videoObj.current = {...uploadedVideoObj};\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...goodsImageObj.current, ...videoObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        // upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        // console.log(upObj.end_time);\n        reqObject.current = upObj;\n        setPostRequestCount(postRequestCount + 1);\n    }\n\n    return (<>\n        <Modal visible={visible === 1}\n            title=\"Goods 新建\"\n            closable={false}\n            footer={null}\n        >\n            <StsUploadVideo\n                onChange={uploadedVideo}\n                oldObj={oldObj.current}\n                videoKeyName={videoKeyName}\n            ></StsUploadVideo>\n            <Divider />\n            <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n                <StsUploadImagesList\n                    oldObj={oldObj.current}\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    onChange={goodsImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={createFormNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={closeModal}\n                showDeleteButton={false}\n                formInitialObj={formInitialObj}\n                initFormCount={initFormCount}\n                rulesObj={formRulesList}\n                updateFormObj={updateFormObj}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <GoodsRequestPost\n                requestCount={postRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={postResponseDataHandle}\n            ></GoodsRequestPost>\n        </Modal>\n    </>)\n}\n\nCreateGoods.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateGoods;\n","import React, { useEffect, useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formGetRequestParamsKeys,\n    formInitialObj\n} from './goods_columns_label_config';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\n// 列表查询 form\n\nconst GoodsQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n    const [initFormCount, setInitFormCount] = useState(0);\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n\n    useEffect(() => {\n        // 显示查询抽屉时初始化表格\n        if (visible) {\n            setInitFormCount(initFormCount + 1);\n        }\n    }, [visible]);\n\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    const closeDrawer = () => {\n        // 关闭查询抽屉\n        setVisible(false);\n    };\n\n    const onFinish = (formObj) => {\n        // 提交查询 根据具体情况更新 fromObj\n        // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n        let copyFormObj = { ...formObj };\n        const queryId = copyFormObj.id ? parseInt(copyFormObj.id) : 0;\n        if (queryId > 0) {\n            queryHandle({id: queryId});\n        }else {\n            delete copyFormObj.id;\n            console.log(copyFormObj);\n            queryHandle(copyFormObj);\n        }\n        setTimeout(() => {\n            closeDrawer();\n        }, 50);\n    };\n\n    return (\n        <>\n            <Drawer\n                title=\"Goods查询\"\n                width=\"100%\"\n                height=\"400px\"\n                placement=\"top\"\n                onClose={closeDrawer}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={null}\n            >\n                <CustomForm\n                    columns={formGetRequestParamsKeys}\n                    formKeyLabelObj={formKeysLabelsObj}\n                    formKeySelectComponentsObj={formKeySelectComponentsObj}\n                    formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                    onFinish={onFinish}\n                    cancelHandle={() => setVisible(0)}\n                    showDeleteButton={false}\n                    formInitialObj={formInitialObj}\n                    initFormCount={initFormCount}\n                    updateFormObj={updateFormObj}\n                ></CustomForm>\n            </Drawer>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n        </>\n    );\n};\n\nGoodsQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default GoodsQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\nimport moment from 'moment';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList, StsUploadVideo } from '../../upload_files/sts_upload_files_list';\nimport { GoodsRequestPut, GoodsRequestDelete  } from './goods_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName\n} from './goods_columns_label_config';\n\n// 编辑 Goods\n\nconst UpdateGoods = ({ visible, setVisible, oldObj, updatedHandle }) => {\n\n    const goodsImageObj = useRef({});\n    const videoObj = useRef({});\n    const [putRequestCount, setPutRequestCount] = useState(0);\n    const reqObject = useRef({});\n    const putResponseDataHandle = (respObj) => {\n        if (Object.keys(respObj).includes('code') && respObj.code === 1000) {\n            message.success('修改成功');\n            updatedHandle(respObj);\n            setVisible(0);\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n    const deleteGoods = () => {\n        // 删除当前对象\n        setDeleteRequestCount(deleteRequestCount + 1);\n        updatedHandle({id: oldObj.id, del_handle: true});\n    };\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    useEffect(() => {\n        if (visible > 0) {\n            console.log(oldObj);\n            setUpdateFormObj({id: -1});\n            let endTimeStamp = oldObj.end_time ? parseInt(oldObj.end_time) : 0;\n            if (endTimeStamp < 10000000000) {\n                endTimeStamp = parseInt(endTimeStamp * 1000);\n            }\n            const endTimeMoment = moment(endTimeStamp);\n            setUpdateFormObj({ ...oldObj, end_time: endTimeMoment });  // 给表格赋值\n        }\n    }, [visible, oldObj]);\n\n    const goodsImageUploaded = (imagesObj) => {\n        // 轮播图上传后操作\n        goodsImageObj.current = imagesObj;\n        // console.log(imagesObj);\n    }\n\n    const uploadedVideo = (uploadedVideoObj) => {\n        // 视频上传后操作\n        videoObj.current = {...uploadedVideoObj};\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...goodsImageObj.current, ...videoObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        // upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        console.log(upObj);\n        reqObject.current = upObj;\n        setPutRequestCount(putRequestCount + 1);\n    }\n\n    return (\n        <Modal visible={visible === 2}\n            title=\"Goods\"\n            closable={false}\n            footer={null}\n        >\n            <StsUploadVideo onChange={uploadedVideo} oldObj={oldObj} videoKeyName={videoKeyName}></StsUploadVideo>\n            <Divider />\n            <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n                <StsUploadImagesList\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    oldObj={oldObj}\n                    onChange={goodsImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={formNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={() => setVisible(0)}\n                showDeleteButton={true}\n                deleteHandle={deleteGoods}\n                updateFormObj={updateFormObj}\n                rulesObj={formRulesList}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <GoodsRequestPut\n                requestCount={putRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={putResponseDataHandle}\n                id={oldObj.id}></GoodsRequestPut>\n            <GoodsRequestDelete\n                requestCount={deleteRequestCount}\n                responseDataHandle={(respObj) => setVisible(0)}\n                id={oldObj.id}></GoodsRequestDelete>\n        </Modal>\n    )\n}\n\nUpdateGoods.defaultProps = {\n    visible: false,\n    setVisible: (val) => console.log(val),\n    oldObj: {},\n    updatedHandle: updatedObj => console.log(updatedObj),\n}\n\nexport default UpdateGoods;\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\nconst  apiLists = ['category-admin/v1/category', ];\n\n// goods category requests\nconst ComponentCategoryRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n    // Deliver Get请求\n    const api = [].concat(apiLists)[0];\n    const method = 'get';\n    const reqObject = {};\n  \n    return (\n      <AxiosRequest\n        responseDataHandle={responseDataHandle} api={api} method={method}\n        reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n      ></AxiosRequest>\n    );\n};\nComponentCategoryRequestGet.defaultProps = {\n    requestCount: 0,\n    reqParams: {},\n    responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst categoryRequestGet = () => {\n    // 分类 Get请求\n    return new Promise(function (resolve, reject) {\n        const api = apiLists[0];\n        const method = 'get';\n        const reqParams = {};\n        const reqObject = {};\n        sendAxiosRequest(api, method, reqParams, reqObject)\n            .then(respObj => {\n            resolve(respObj);\n            })\n            .catch(err => {\n            console.log(err);\n            reject(err);\n            });\n    });\n}\n\nexport { ComponentCategoryRequestGet, categoryRequestGet };","import React, { useEffect, useState } from 'react';\nimport { Select } from 'antd';\n// mode=\"multiple\"\n// import { CustomSelect } from '../select_component';\nimport { categoryRequestGet } from './goods_category_requests';\n\n\n// 商品分类(热搜词)编辑\nconst GoodsCategorySelect = ({visible, goodsObj, onChange}) => {\n    const [options, setOptions] = useState([]);\n\n    const [selector, setSelector] = useState([]);\n\n    useEffect(() => {\n        // 初始化分类选择\n        categoryRequestGet().then(respObj => {\n            const channelsList = respObj.results;\n            let updateOptions = [];\n            for (let index = 0; index < channelsList.length; index++) {\n                const element = channelsList[index];\n                updateOptions.push({\n                    value: element.id,\n                    label: element.category_name\n                })\n            }\n            setOptions(updateOptions);\n        }).catch(error => {\n            console.log(error);\n            setOptions([]);\n        });\n    }, []);\n\n    useEffect(() => {\n        // 商品更改后给选择框赋值\n        if (visible < 1) {\n            return;\n        }\n        console.log(goodsObj);\n        let categories = goodsObj.categories ? goodsObj.categories : '';\n        categories = categories.split('-');\n        for (let index = categories.length - 1; index > -1; index--) {\n            // 删除空值\n            if (categories[index] === '') {\n                categories.splice(index, 1)\n            }else{\n                categories[index] = parseInt(categories[index]);\n            }\n        }\n        console.log(categories);\n        setSelector(categories);\n    }, [visible]);\n\n    const selecteHandle = (values) => {\n        console.log(`selected ${values}`);\n        setSelector(values);\n        onChange(values);\n    }\n\n    return (<Select\n            style={{ width: '100%' }}\n            options={options}\n            value={selector}\n            onChange={selecteHandle}\n            mode=\"multiple\"\n        ></Select>)\n}\nGoodsCategorySelect.defaultProps = {\n    visible: 0,\n    goodsObj: {},\n    onChange: (selectors) => console.log(selectors),\n}\n\nexport { GoodsCategorySelect };\n","import React, { useState } from 'react';\nimport { Button, Modal, Space } from 'antd';\n\nimport { GoodsCategorySelect } from '../base_components/goods_category/goods_category_select';\n\nconst GoodsCategoryModal = ({visible, setVisible, visibleNum, goodsObj, updateCategory}) => {\n    // 商品分类选择对话框\n    const [categorySelectors, setCategorySelectors] = useState('');\n\n    const confirmSelect = () => {\n        // 确认选择分类(热搜词)\n        updateCategory(categorySelectors);\n        setVisible(0);\n    }\n\n    const categorySelectorsChange = (selectedCategories) => {\n        // 选择框更新后操作\n        setCategorySelectors(selectedCategories);\n    }\n\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"选择分类(热搜词)\"\n                mask={true}\n                closable={true}\n                centered={true}\n                footer={[\n                    <Button key=\"categoryConfirm\" onClick={confirmSelect}>确认</Button>,\n                    <Button key=\"categoryCancle\" onClick={() => { setVisible(0); }}>取消</Button>\n                ]}\n            >\n                <Space direction=\"vertical\">\n                    <p>商品: {goodsObj.name}</p>\n                    <GoodsCategorySelect\n                        visible={visible}\n                        onChange={categorySelectorsChange}\n                        goodsObj={goodsObj}\n                    ></GoodsCategorySelect>\n                </Space>\n            </Modal>\n        </>\n    );\n}\nGoodsCategoryModal.defaultProps = {\n    visible: 0,\n    setVisible: visibleNum => console.log(visibleNum),\n    visibleNum: 1,\n    goodsObj: {},\n    updateCategory: categorySelectors => console.log(categorySelectors),\n}\n\nexport { GoodsCategoryModal };\n","import React, { useEffect, useState } from 'react';\nimport { Button, Modal } from 'antd';\n// import CustomerList from '../customer_list';\nimport ColorPriceComponent from '../wx_store/color_price';\n\n// 颜色,数量 模态框\n\nconst ColorPriceEditOptModal = ({ visible, setVisible, visibleNum, goodsObj, selectHandle }) => {\n    // 选择商品 modal\n    const [location, setLocation] = useState({state: {\n        goodsobj: {},\n        selectHandle: selectHandle,\n        setVisible: setVisible,\n    }});\n\n    useEffect(() => {\n        // 显示的时候更新商品对象\n        if (visible === visibleNum) {\n            const state = {\n                goodsobj: goodsObj,\n                selectHandle: selectHandle,\n                setVisible: setVisible,\n            };\n            setLocation({state: state});\n        }\n    }, [visible, visibleNum, goodsObj])\n\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"颜色价格\"\n                closable={false}\n                footer={[\n                    <Button key=\"unvisible\" onClick={() => { setVisible(0); }}>确定</Button>\n                ]}\n            >\n                <div style={{width: '100%', maxHeight: '30rem', overflow: 'auto'}}>\n                    <ColorPriceComponent location={location}></ColorPriceComponent>\n                </div>\n            </Modal>\n        </>\n    );\n}\nColorPriceEditOptModal.defaultProps = {\n    visible: 0,\n    setVisible: (setVisibleNum) => console.log(setVisibleNum),\n    visibleNum: 1,\n    goodsObj: {},\n    selectHandle: null,\n}\n\nexport { ColorPriceEditOptModal };\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { CustomList } from '../../base_components/lists/custom_list';\nimport { GoodsRequestGet, GoodsRequestPut } from './goods_requests';\nimport UpdateGoods from './update_goods';\nimport { renderItem, judgeHasMore } from './goods_columns_label_config';\nimport { LoadMoreButton } from '../../base_components/load_more_button_conpoment';\nimport { GoodsCategoryModal } from '../../modals/goods_category_opt';\nimport { ColorPriceEditOptModal } from '../../modals/goods_color_price_opt';\nimport { ScrollGoBack } from '../../base_components/scroll_handle/goback_origin_scroll';\n// 列表编辑 页面\n\nconst updateGoodsData = (originGoodsData, updateObj) => {\n    // 更新更新过的商品\n    const copyGoodsData = [].concat(originGoodsData)\n    const updateGoodsId = updateObj.id\n    for (let index = 0; index < copyGoodsData.length; index++) {\n        const element = copyGoodsData[index];\n        if (element.id === updateGoodsId) {\n            if (Object.keys(updateObj).includes('del_handle') && updateObj.del_handle) {\n                // 删除操作\n                copyGoodsData.splice(index, 1);\n            } else {\n                copyGoodsData[index] = updateObj\n            }\n            return copyGoodsData\n        }\n    }\n    return copyGoodsData\n}\n\nconst GoodsList = ({ reloadListCount, setReloadListCount, requestParams, selectButtonOnClick }) => {\n\n    const [visible, setVisible] = useState(0);\n\n    const [hasMoreState, setHasMoreState] = useState(true);\n    const [loading, setLoading] = useState(false);\n    // 设置为true 开始request请求, 解决useState异步\n    const [requesting, setRequesting] = useState(false);\n    const reqParams = useRef({ page: 0 });\n\n    const [goodsData, setGoodsData] = useState([]);\n    const [goodsRequestGetCount, setGoodsRequestGetCount] = useState(0);\n\n    const [goodsRequestPutCount, setGoodsRequestPutCount] = useState(0);\n    const [goodsPutObj, setGoodsPutObj] = useState({});\n\n    const [selectedObj, setSelectedObj] = useState({});\n\n    const [selectColorHandle, setSelectColorHandle] = useState(null);\n\n    useEffect(() => {\n        if (hasMoreState && !loading && requesting) {\n            // 使用useEffect 触发request 解决 useState 异步\n            loadMore();\n            setRequesting(false);\n        }\n    }, [requesting, hasMoreState, loading])\n\n    useEffect(() => {\n        // 加载、更新或创建数据后 重新读取列表\n        reqParams.current = { ...requestParams };\n        reloadListsHandle();\n    }, [reloadListCount]);\n\n    useEffect(() => {\n        // goodsPutObj 更新后判断是否发送更新分类的请求\n        if (Object.keys(goodsPutObj).includes('categories')) {\n            setGoodsRequestPutCount(goodsRequestPutCount + 1)\n        }\n    }, [goodsPutObj]);\n\n    // useEffect(() => {\n    //     if (typeof selectButtonOnClick === 'function') {\n    //         setSelectColorHandle((colorObj) => {\n    //             // 重新包装选择商品方法(包括选择颜色)\n    //             setVisible(0);\n    //             selectButtonOnClick(selectedObj, colorObj);\n    //         });\n    //     }\n    // }, [selectButtonOnClick])\n\n    const loadMore = () => {\n        // 读取更多列表\n        if (hasMoreState && !loading) {\n            setLoading(true);\n            setHasMoreState(false);\n            const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n            reqParams.current = { ...reqParams.current, page: current_page };\n            console.log(reqParams.current);\n            setGoodsRequestGetCount(goodsRequestGetCount + 1);\n        } else {\n            console.log('Error state: hasMore is ', hasMoreState, ', loading is ', loading);\n        }\n    };\n\n    const reloadListsHandle = () => {\n        // 重新读取数据\n        reqParams.current = { ...reqParams.current, page: 0 };\n        // console.log(reqParams.current);\n        setGoodsData([]);\n        setHasMoreState(true);\n        setLoading(false);\n        setRequesting(true);    // useEffect 触发request请求，解决useState异步\n    };\n\n    const goodsGetResponse = (resp) => {\n        // console.log('resp process...');\n        setLoading(false);\n        if (Object.keys(resp).includes('code')\n            && resp.code === 1000\n            && Object.keys(resp).includes('results')\n        ) {\n            setGoodsData(goodsData.concat(resp.results));\n            setHasMoreState(judgeHasMore(resp));   // 判断是否还有更多\n        } else {\n            console.log('Error: get data...');\n        }\n    };\n\n    const updateGoodsCategory = (selectorCategories) => {\n        // 更新商品分类\n        console.log(selectorCategories);\n        const updateGoodsCategoryObj = {categories: selectorCategories.join('-')}\n        setGoodsPutObj(updateGoodsCategoryObj); // goodsPutObj 更新后触发 useEffect\n    }\n\n    const updatedGoodsHandle = (resp) => {\n        // 更新结果\n        console.log(resp);\n        setGoodsData(updateGoodsData(goodsData, resp))\n    }\n\n    return (\n        <div>\n            <ScrollGoBack visible={visible}></ScrollGoBack>\n\n            <CustomList\n                header=\"Goods List\"\n                listData={goodsData}\n                visible={visible}\n                setVisible={setVisible}\n                randerItem={renderItem}\n                setSelectedItem={setSelectedObj}\n                selectButtonOnClick={selectButtonOnClick}\n            ></CustomList>\n\n            <UpdateGoods\n                visible={visible}\n                setVisible={setVisible}\n                oldObj={selectedObj}\n                reloadListCount={reloadListCount}\n                setReloadListCount={setReloadListCount}\n                updatedHandle={updatedGoodsHandle}\n            ></UpdateGoods>\n\n            <GoodsCategoryModal\n                visible={visible}\n                setVisible={setVisible}\n                visibleNum={3}\n                goodsObj={selectedObj}\n                updateCategory={updateGoodsCategory}\n            ></GoodsCategoryModal>\n\n            <ColorPriceEditOptModal\n                visible={visible}\n                setVisible={setVisible}\n                visibleNum={4}\n                goodsObj={selectedObj}\n                selectHandle={selectColorHandle}\n            ></ColorPriceEditOptModal>\n\n            <GoodsRequestPut\n                requestCount={goodsRequestPutCount}\n                reqObject={goodsPutObj}\n                responseDataHandle={updatedGoodsHandle}\n                id={selectedObj.id}\n            ></GoodsRequestPut>\n\n            <GoodsRequestGet requestCount={goodsRequestGetCount}\n                reqParams={reqParams.current}\n                responseDataHandle={goodsGetResponse}></GoodsRequestGet>\n\n            <LoadMoreButton hasMore={hasMoreState} onClick={loadMore}></LoadMoreButton>\n        </div>\n    );\n}\n\nGoodsList.defaultProps = {\n    reloadListCount: 1,\n    setReloadListCount: (addedNum) => { console.log(addedNum); },\n    requestParams: { page: 0 },\n    selectButtonOnClick: null,\n}\n\nexport default GoodsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './goods_columns_label_config';\n\n// 显示查询条件组件\n\nconst GoodsQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default GoodsQueryParams;\n","import React, { useState, useRef } from 'react';\n// import { navigate, Link } from 'gatsby';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreateGoods from './create_goods';\nimport GoodsQueryDrawerForm from './goods_query_form';\nimport GoodsList from './goods_list';\nimport GoodsQueryParams from './goods_query_params_display';\n// Goods 入口组件\n\nconst GoodsComponent = ({ selectButtonOnClick = null }) => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createGoodsVisible, setCreateGoodsVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    // console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            {/* <Tooltip title=\"返回\">\n              <Link to=\"/logistic\"><LeftOutlined /></Link>\n            </Tooltip> */}\n            <h4>Goods</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            {/* <Button style={{ float: 'right' }} type=\"link\" onClick={() => navigate('/sendexpressaccount')}>快递帐号设置</Button> */}\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateGoodsVisible(1)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><GoodsQueryParams paramsObj={reqParams.current}></GoodsQueryParams></Col>\n      </Row>\n      <GoodsQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></GoodsQueryDrawerForm>\n\n      <GoodsList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n        selectButtonOnClick={selectButtonOnClick}\n      ></GoodsList>\n\n      <CreateGoods\n        visible={createGoodsVisible}\n        setVisible={setCreateGoodsVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateGoods>\n    </div>\n  )\n};\n\nexport default GoodsComponent;\n"],"sourceRoot":""}