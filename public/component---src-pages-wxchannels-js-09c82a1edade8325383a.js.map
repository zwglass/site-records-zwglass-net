{"version":3,"file":"component---src-pages-wxchannels-js-09c82a1edade8325383a.js","mappings":"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","sources":["webpack://client_admin_v102/./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack://client_admin_v102/./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack://client_admin_v102/./src/components/base_components/form_component.js","webpack://client_admin_v102/./src/components/base_components/select_component.js","webpack://client_admin_v102/./src/components/wx_store/channels/channels_columns_label_config.js","webpack://client_admin_v102/./src/components/wx_store/channels/channels_requests.js","webpack://client_admin_v102/./src/components/wx_store/channels/create_channels.js","webpack://client_admin_v102/./src/components/wx_store/channels/channels_query_form.js","webpack://client_admin_v102/./src/components/wx_store/channels/update_channels.js","webpack://client_admin_v102/./src/components/wx_store/channels/channels_list.js","webpack://client_admin_v102/./src/components/wx_store/channels/channels_query_params_display.js","webpack://client_admin_v102/./src/components/wx_store/channels/index.js","webpack://client_admin_v102/./src/pages/wxchannels.js"],"sourcesContent":["// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\"; // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange, mode }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value} mode={mode} allowClear>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n  mode: null,\n}\n\nexport { CustomSelect };\n","import React from 'react';\n// import { DatePicker } from 'antd';\nimport { CustomSelect } from '../../base_components/select_component';\nimport ListsItem from '../../base_components/list_item';\n\n// Channels 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n  \"id\", \"name\", \"front_desc\", \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\", \"is_show\",\n  \"keywords\", \"level\", \"p_height\", \"parent_id\", \"show_index\", \"sort_order\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\"id\", \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\", \"level\"];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n  \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\",\n  \"level\", \"show_index\", \"parent_id\"\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n  \"id\": \"ID\", \"name\": \"名称\", \"front_desc\": \"频道简介\", \"front_name\": \"频道名称\", \"icon\": \"图标\", \"img\": \"背景图片\", \"is_category\": \"是分类\",\n  \"is_channel\": \"是频道\", \"is_show\": \"显示\", \"keywords\": \"关键词\", \"level\": \"级别\", \"p_height\": \"背景图高\", \"parent_id\": \"上级ID\",\n  \"show_index\": \"显示序号\", \"sort_order\": \"排序序号\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\nconst SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]} />);\nconst formKeySelectComponentsObj = {\n  // exampleColumn: SelectExample,\n  'is_show': SelectBoolean,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [\"icon\", \"img\"];\n\n//  ~~~~~~ 表单get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\"name\"];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n  \"id\": 0, \"name\": \"\", \"front_desc\": \"\", \"front_name\": \"\", \"icon\": \"\", \"img\": \"\", \"is_category\": 0,\n  \"is_channel\": 1, \"is_show\": 1, \"keywords\": \"\", \"level\": \"L1\", \"p_height\": \"155\", \"parent_id\": 0,\n  \"show_index\": 0, \"sort_order\": 1, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"\n}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyNames = ['icon', 'img'];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 1;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['channel-admin/v1/channels'];\n\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst ItemRendererComponent = ({ item, index, itemDetailClick }) => {\n  // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n  console.log(item);\n  return (<div>\n    <ListsItem\n      listsIndex={index}\n      url={item.icon_url}\n      productTitle={item.name}\n      productEffects={`频道简介: ${item.front_desc}`}\n      salePrice={0}\n      clickDetailHandle={itemDetailClick}\n    ></ListsItem>\n  </div>);\n};\n\nexport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n  apiLists,\n  ItemRendererComponent\n};\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './channels_columns_label_config';\n\n// Channels 的request请求\n\nconst ChannelsRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Channels Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst ChannelsRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Channels post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst ChannelsRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Channels put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst ChannelsRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Channels delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  ChannelsRequestGet,\n  ChannelsRequestPost,\n  ChannelsRequestPut,\n  ChannelsRequestDelete\n};\n","import React, { useRef, useState } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ChannelsRequestPost } from './channels_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './channels_columns_label_config';\n\n// 新建 Modal\n\nconst CreateChannels = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n  const channelsImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    channelsImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const channelsImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    channelsImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...channelsImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"Channels 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            maxImagesNum={maxImagesNum}\n            imageKeyName={imageKeyNames[0]}\n            onChange={channelsImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <ChannelsRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></ChannelsRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreateChannels.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateChannels;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formGetRequestParamsKeys,\n  formInitialObj\n} from './channels_columns_label_config';\n// 列表查询 form\n\nconst ChannelsQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <Drawer\n      title=\"销售记录查询\"\n      width=\"100%\"\n      height=\"400px\"\n      placement=\"top\"\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={null}\n    >\n      <CustomForm\n        columns={formGetRequestParamsKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={false}\n        formInitialObj={formInitialObj}\n        initFormCount={initFormCount}\n      ></CustomForm>\n    </Drawer>\n  );\n};\n\nChannelsQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default ChannelsQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ChannelsRequestPut, ChannelsRequestDelete  } from './channels_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n} from './channels_columns_label_config';\n\n// 编辑 Channels\n\nconst UpdateChannels = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n\n  const channelsImageObj = useRef({});\n  const backgroundImgObj = useRef({});\n\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(false);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deleteChannels = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    // let channelsHomeImgs = [];\n    // const logoImgKey = imageKeyNames[0];\n    // const backgroundImgKey = imageKeyNames[1];\n\n    // for (let index = 1; index < 10; index++) {\n    //   const currentCosNameKey = imgKey + index;\n    //   const currentUrlKey = currentCosNameKey + '_url';\n    //   const currentCosName = oldObj[currentCosNameKey];\n    //   const currentUrl = oldObj[currentUrlKey];\n    //   if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n    //     channelsHomeImgs.push({\n    //       cosNameKey: currentCosNameKey,\n    //       cosName: currentCosName,\n    //       urlKey: currentUrlKey,\n    //       url: currentUrl\n    //     });\n    //   }\n    // }\n    // // console.log(channelsHomeImgs);\n    // setOldChannelsHomeImages(channelsHomeImgs);   // 更新图片列表\n  }\n\n  const channelsLogoImageUploaded = (imagesObj) => {\n    // logo图上传后操作\n    channelsImageObj.current = imagesObj;\n  }\n\n  const channelsBackgroundImageUploaded = (imagesObj) => {\n    // logo图上传后操作\n    backgroundImgObj.current = imagesObj;\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...channelsImageObj.current, ...backgroundImgObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible}\n      title=\"Channels\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <h4>Logo</h4>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[0]}\n          oldObj={oldObj}\n          onChange={channelsLogoImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n      <h4>背景图片</h4>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[1]}\n          oldObj={oldObj}\n          onChange={channelsBackgroundImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deleteChannels}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <ChannelsRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></ChannelsRequestPut>\n      <ChannelsRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></ChannelsRequestDelete>\n    </Modal>\n  )\n}\n\nUpdateChannels.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdateChannels;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ProductsList from '../../base_components/products_list';\nimport { ChannelsRequestGet } from './channels_requests';\n// import CreateChannels from './create_channels';\nimport UpdateChannels from './update_channels';\nimport { ItemRendererComponent } from './channels_columns_label_config';\n\n// 列表编辑 页面\n\nconst ChannelsList = ({ reloadListCount, setReloadListCount, requestParams }) => {\n  const hasMore = useRef(true);\n  const [hasMorestate, setHasMoreState] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const reqParams = useRef({ page: 0 });\n\n  const [channelsData, setChannelsData] = useState([]);\n  const [channelsRequestGetCount, setChannelsRequestGetCount] = useState(0);\n\n  // const [createChannelsVisible, setCreateChannelsVisible] = useState(false);\n  const [updateChannelsVisible, setUpdateChannelsVisible] = useState(false);\n  const [selectedObj, setSelectedObj] = useState({});\n\n  useEffect(() => {\n    // 加载、更新或创建数据后 重新读取列表\n    reqParams.current = { ...requestParams };\n    reloadListsHandle();\n  }, [reloadListCount]);\n\n  useEffect(() => {\n    // useState才可以读取更多\n    setHasMoreState(hasMore.current);\n  }, [hasMore.current])\n\n  const loadMore = () => {\n    // 读取更多列表\n    if (hasMore.current && !loading) {\n      const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n      reqParams.current = { ...reqParams.current, page: current_page };\n      console.log(reqParams.current);\n      setChannelsRequestGetCount(channelsRequestGetCount + 1);\n      setLoading(true);\n    } else {\n      console.log('Error state: hasMore is ', hasMore.current, ', loading is ', loading);\n    }\n  };\n\n  const reloadListsHandle = () => {\n    // 重新读取数据\n    reqParams.current = { ...reqParams.current, page: 0 };\n    // console.log(reqParams.current);\n    setChannelsData([]);\n    // setHasMore(true);\n    hasMore.current = true;\n    setLoading(false);\n    setTimeout(() => {\n      loadMore();\n      console.log('end loadMore...');\n    }, 100);\n  };\n\n  const judgeHasMore = resp => {\n    if (Object.keys(resp).includes('next')\n      && typeof resp.next === 'string'\n      && resp.next.length > 5) {\n      return true;\n    }\n    return false;\n  };\n\n  const channelsGetResponse = resp => {\n    console.log('resp process...');\n    setLoading(false);\n    if (Object.keys(resp).includes('code')\n      && resp.code === 1000\n      && Object.keys(resp).includes('results')) {\n      setChannelsData(channelsData.concat(resp.results));\n      // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n      hasMore.current = judgeHasMore(resp);\n    } else {\n      console.log('Error: get data...');\n    }\n  };\n\n  const itemDetailClick = (index) => {\n    // 打开详情编辑窗口\n    // console.log(channelsData[index]);\n    let selObj = { ...channelsData[index] };\n    console.log(selObj);\n    // 日期转 moment 时间\n    // selObj.end_time = moment(dateFormat(selObj.end_time), 'YYYY-MM-DD HH:mm:ss');\n    setSelectedObj(selObj);\n    setUpdateChannelsVisible(true);\n  };\n\n  const CurrentItemRendererComponent = ({ item, index }) => {\n    // 每一行渲染 的组件\n    return (\n      <ItemRendererComponent item={item} index={index} itemDetailClick={itemDetailClick} />\n    )\n  }\n\n  return (\n    <div>\n      <ChannelsRequestGet requestCount={channelsRequestGetCount}\n        reqParams={reqParams.current}\n        responseDataHandle={channelsGetResponse}></ChannelsRequestGet>\n      <ProductsList\n        productsData={channelsData}\n        loadMore={loadMore}\n        hasMore={hasMorestate}\n        ItemRendererComponent={CurrentItemRendererComponent}></ProductsList>\n\n      <UpdateChannels\n        visible={updateChannelsVisible}\n        setVisible={setUpdateChannelsVisible}\n        oldObj={selectedObj}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></UpdateChannels>\n    </div>\n  );\n}\n\nChannelsList.defaultProps = {\n  reloadListCount: 1,\n  setReloadListCount: (addedNum) => { console.log(addedNum); },\n  requestParams: { page: 0 }\n}\n\nexport default ChannelsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './channels_columns_label_config';\n\n// 显示查询条件组件\n\nconst ChannelsQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default ChannelsQueryParams;\n","import React, { useState, useRef } from 'react';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreateChannels from './create_channels';\nimport ChannelsQueryDrawerForm from './channels_query_form';\nimport ChannelsList from './channels_list';\nimport ChannelsQueryParams from './channels_query_params_display';\n// Channels 入口组件\n\nconst ChannelsComponent = () => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createChannelsVisible, setCreateChannelsVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            <h4>Channels</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateChannelsVisible(true)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><ChannelsQueryParams paramsObj={reqParams.current}></ChannelsQueryParams></Col>\n      </Row>\n      <ChannelsQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></ChannelsQueryDrawerForm>\n\n      <ChannelsList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n      ></ChannelsList>\n\n      <CreateChannels\n        visible={createChannelsVisible}\n        setVisible={setCreateChannelsVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateChannels>\n    </div>\n  )\n};\n\nexport default ChannelsComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport ChannelsComponent from '../components/wx_store/channels';\n\nconst ChannelsManagePage = () => (\n  <SiteLayout>\n    <SEO title=\"WX Channels\" />\n    <ChannelsComponent></ChannelsComponent>\n  </SiteLayout>\n)\n\nexport default ChannelsManagePage;\n"],"names":["props","ref","AntdIcon","icon","displayName","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","width","FormItem","formKey","formKeyLabelObj","disabledKeys","updateFormObj","rulesObj","formKeySelectComponentsObj","passwordKeys","showLabelName","disabled","includes","currentLabel","currentInputValue","name","label","initialValue","rules","Object","keys","style","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","type","onClick","e","console","log","clickMethod","err","CustomForm","columns","notShowKeys","onFinish","cancelHandle","deleteHandle","showDeleteButton","formInitialObj","initFormCount","form","Form","useState","buttonIsLoading","setButtonIsLoading","useEffect","setFieldsValue","layout","values","map","index","key","toString","loading","htmlType","defaultProps","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","span","wrapperCol","Option","Select","CustomSelect","options","value","onChange","mode","allowClear","obj","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","formGetRequestParamsKeys","imageKeyNames","apiLists","ItemRendererComponent","item","itemDetailClick","listsIndex","url","icon_url","productTitle","productEffects","front_desc","salePrice","clickDetailHandle","ChannelsRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","respObj","ChannelsRequestPost","concat","ChannelsRequestPut","id","ChannelsRequestDelete","CreateChannels","visible","setVisible","reloadListCount","setReloadListCount","channelsImageObj","useRef","oldObj","createCount","setInitFormCount","postRequestCount","setPostRequestCount","closeModal","current","title","closable","footer","height","textAlign","maxImagesNum","imageKeyName","imagesObj","upObj","code","message","val","booleanVal","ChannelsQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdateChannels","backgroundImgObj","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","initImgAndForm","ChannelsList","requestParams","hasMore","hasMorestate","setHasMoreState","setLoading","page","channelsData","setChannelsData","channelsRequestGetCount","setChannelsRequestGetCount","updateChannelsVisible","setUpdateChannelsVisible","selectedObj","setSelectedObj","reloadListsHandle","loadMore","current_page","Number","isInteger","selObj","resp","results","next","length","judgeHasMore","productsData","addedNum","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","element","currentFactor","padding","drawerVisible","setDrawerVisible","createChannelsVisible","setCreateChannelsVisible","shape","ReloadOutlined","SearchOutlined","float","currentRequestParams"],"sourceRoot":""}