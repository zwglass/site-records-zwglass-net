{"version":3,"sources":["webpack:///./src/components/base_components/scroll_handle/goback_origin_scroll.js","webpack:///./src/components/modals/goods_opt.jsx","webpack:///./src/components/base_components/load_more_button_conpoment.jsx","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./src/components/wx_store/goods/goods_columns_label_config.jsx","webpack:///./src/components/wx_store/goods/custom_select_requests.jsx","webpack:///./src/components/wx_store/goods/goods_requests.jsx","webpack:///./src/components/wx_store/goods/create_goods.jsx","webpack:///./src/components/wx_store/goods/goods_query_form.jsx","webpack:///./src/components/wx_store/goods/update_goods.jsx","webpack:///./src/components/base_components/goods_category/goods_category_requests.jsx","webpack:///./src/components/base_components/goods_category/goods_category_select.jsx","webpack:///./src/components/modals/goods_category_opt.jsx","webpack:///./src/components/modals/goods_color_price_opt.jsx","webpack:///./src/components/wx_store/goods/goods_list.jsx","webpack:///./src/components/wx_store/goods/goods_query_params_display.jsx","webpack:///./src/components/wx_store/goods/index.jsx","webpack:///./src/components/base_components/select_component.js"],"names":["ScrollGoBack","visible","useState","currentScrollTop","setCurrentScrollTop","useEffect","currentTop","document","documentElement","scrollTop","body","topSize","window","setTimeout","scrollTo","top","parseInt","behavior","defaultProps","GoodsOptModal","setVisible","visibleNum","selectHandle","title","closable","footer","key","onClick","style","width","maxHeight","overflow","selectButtonOnClick","closeVisibleNum","console","log","goodsObj","colorObj","LoadMoreButton","tips","hasMore","loading","height","margin","textAlign","type","shape","icon","sourceScrollTop","clientHeight","addEventListener","toSourceScrollTopHandle","removeEventListener","toSourceScrollTop","size","$export","S","isInteger","isObject","floor","Math","module","exports","it","isFinite","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectChannels","value","onChange","e","channelOptions","setChannelOptions","Promise","resolve","reject","sendAxiosRequest","then","respObj","catch","err","channelsList","results","updateOptions","index","length","element","push","id","label","name","error","options","SelectCategories","setOptions","category_name","SelectHasDown","SelectBoolean","formKeySelectComponentsObj","formKeysHandleButtonObj","setOptModalState","goods_id","buttonTips","clickMethod","formGetRequestParamsKeys","formInitialObj","formRulesList","required","message","imageKeyNames","apiLists","actionButtons","item","setSelectedObj","btnList","renderItem","textsContent","is_on_sale","sell_volume","explains","moment","add_time","format","update_time","updateItemObj","actions","img","home_pic1_url","avatar","description","goods_brief","content","customRanderItem","GoodsRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","GoodsRequestPost","concat","GoodsRequestPut","GoodsRequestDelete","createFormNotShowKeys","CreateGoods","reloadListCount","setReloadListCount","goodsImageObj","useRef","videoObj","oldObj","handleCount","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","current","optModalState","updateFormObj","setUpdateFormObj","closeModal","uploadedVideoObj","videoKeyName","maxImagesNum","imageKeyName","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","formKeysItemButtonObj","onFinish","values","upObj","cancelHandle","showDeleteButton","rulesObj","modalState","setModalState","Object","keys","includes","code","val","booleanVal","GoodsQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","queryId","booleanValue","queryParamsObj","UpdateGoods","updatedHandle","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","endTimeStamp","end_time","endTimeMoment","deleteHandle","del_handle","success","updatedObj","GoodsCategorySelect","selector","setSelector","categories","split","splice","mode","selectors","GoodsCategoryModal","updateCategory","categorySelectors","setCategorySelectors","mask","centered","direction","selectedCategories","ColorPriceEditOptModal","state","goodsobj","location","setLocation","setVisibleNum","GoodsList","requestParams","hasMoreState","setHasMoreState","setLoading","requesting","setRequesting","page","goodsData","setGoodsData","goodsRequestGetCount","setGoodsRequestGetCount","goodsRequestPutCount","setGoodsRequestPutCount","goodsPutObj","setGoodsPutObj","selectedObj","selectColorHandle","loadMore","reloadListsHandle","current_page","Number","updatedGoodsHandle","resp","originGoodsData","updateObj","copyGoodsData","updateGoodsId","updateGoodsData","header","listData","randerItem","setSelectedItem","selectorCategories","updateGoodsCategoryObj","join","next","judgeHasMore","addedNum","GoodsQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","currentFactor","padding","GoodsComponent","drawerVisible","setDrawerVisible","createGoodsVisible","setCreateGoodsVisible","span","ReloadOutlined","SearchOutlined","float","currentRequestParams","Option","Select","CustomSelect","allowClear","map","obj","toString","customConfig","selectComponentWidth"],"mappings":"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","file":"010fc29384fb3c14f7fa93bbc3b5c0b98507982b-40de5381d05d8b1df02a.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n// 滚动条记住当前位置，并回到当前位置\n\nconst computeCurrentScrollTop = () => {\n    // 计算当前滚动条高度\n    if (typeof document !== 'undefined') {\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n        // const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n        // const pageHeight = document.body.scrollHeight || document.documentElement.scrollHeight || document.documentElement.offsetHeight; // 文档的总高度\n        return scrollTop;\n    }\n    return 0\n}\n\nconst scrollToTopSize = (topSize) => {\n    // 滚动条滚动到指定位置\n    if (typeof window !== 'undefined') {\n        setTimeout(() => {\n            // console.log(topSize);\n            // console.log('body');\n            window.scrollTo({ \n                top: parseInt(topSize), \n                behavior: \"smooth\" \n            });\n        }, 500)\n    }\n}\n\nconst ScrollGoBack = ({visible}) => {\n    // visible > 0 滚动条记住当前位置，visible == 0 返回当前位置\n    const [currentScrollTop, setCurrentScrollTop] = useState(0);\n\n    useEffect(() => {\n        if (visible > 0) {\n            // 保存当前位置\n            const currentTop = computeCurrentScrollTop();\n            // console.log(currentTop);\n            setCurrentScrollTop(currentTop);\n        }\n        if (visible === 0) {\n            // 滚动条回到原来位置\n            scrollToTopSize(currentScrollTop);\n        }\n    }, [visible])\n    return <></>\n}\nScrollGoBack.defaultProps = {\n    visible: 0\n}\n\nexport { ScrollGoBack };","import React from 'react';\nimport { Button, Modal } from 'antd';\n// import CustomerList from '../customer_list';\nimport GoodsComponent from '../wx_store/goods';\n\n// 选择商品及商品颜色 模态框(不包括 数量)\n\nconst GoodsOptModal = ({ visible, setVisible, visibleNum, selectHandle }) => {\n    // 选择商品 modal\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"选择商品\"\n                closable={false}\n                footer={[\n                    <Button key=\"back\" onClick={() => { setVisible(0); }}>取消</Button>\n                ]}\n            >\n                <div style={{width: '100%', maxHeight: '40rem', overflow: 'auto'}}>\n                    <GoodsComponent selectButtonOnClick={selectHandle}></GoodsComponent>\n                </div>\n            </Modal>\n        </>\n    );\n}\nGoodsOptModal.defaultProps = {\n    visible: 0,\n    setVisible: (closeVisibleNum) => console.log(closeVisibleNum),\n    visibleNum: 1,\n    selectHandle: (goodsObj, colorObj) => console.log(goodsObj, colorObj),\n};\n\nexport { GoodsOptModal };\n","import React from 'react';\nimport { Button } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\n\nconst toSourceScrollTop = (sourceScrollTop, clientHeight) => {\n    // 数据加载，滚动条回到原来位置\n    if (typeof document !== 'undefined') {\n        // const sourceScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n        // const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n\n        const toSourceScrollTopHandle = () => {\n            const currentScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n\n            if (sourceScrollTop + clientHeight < currentScrollTop) {\n                if (document.documentElement.scrollTop) {\n                    document.documentElement.scrollTo(0, sourceScrollTop);\n                    document.removeEventListener('scroll', toSourceScrollTopHandle, false);\n                }else if(document.body.scrollTop){\n                    document.body.scrollTo(0, sourceScrollTop);\n                    document.removeEventListener('scroll', toSourceScrollTopHandle, false);\n                }\n                console.log(currentScrollTop, currentScrollTop - clientHeight);\n            }\n        }\n        document.addEventListener('scroll', toSourceScrollTopHandle, false);\n    }\n}\n\nconst LoadMoreButton = ({hasMore, onClick, loading}) => {\n    // 读取更多按钮\n\n    const loadMoreHandle = () => {\n        if (typeof document !== 'undefined') {\n            const sourceScrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动的高度;\n            const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 浏览器视口的高度;\n            onClick();\n            toSourceScrollTop(sourceScrollTop, clientHeight);\n        }else {\n            onClick();\n        }\n    }\n\n    const loadingOrNoMoreTips = () => {\n        const tips = loading ? '加载中...' : '没有更多了...';\n        return (<p>{tips}</p>);\n    }\n    return (\n        <div style={{width: '100%', height: 'auto', margin: '1rem 1rem 1rem 0.1rem', textAlign: 'center'}}>\n            {hasMore \n                ? (<Button\n                        type=\"default\"\n                        shape=\"round\"\n                        icon={<DownOutlined />}\n                        style={{width: '80%'}}\n                        onClick={loadMoreHandle}\n                        size=\"large\"\n                    >更多结果</Button>)\n                : loadingOrNoMoreTips()}\n        </div>\n    )\n}\n\nLoadMoreButton.defaultProps = {\n    hasMore: false,\n    onClick: () => console.log('Load more button'),\n    loading: false,\n}\n\nexport { LoadMoreButton };\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import React, { useState, useEffect } from 'react';\nimport { navigate } from 'gatsby';\nimport { Button, DatePicker } from 'antd';\n\nimport moment from 'moment';\nimport { CustomSelect } from '../../base_components/select_component';\n// import { GoodsCategoryModal } from '../../modals/goods_category_opt';\nimport { customRanderItem } from '../../base_components/lists/custom_list';\nimport { channelsRequestGet, categoryRequestGet } from './custom_select_requests';\n\n// Goods 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n    \"id\", \"name\", \"channel_id\", \"categories\", \"sort_order\", \"freight_template_id\",\n    \"freight_type\", \"goods_brief\", \"goods_number\", \"goods_unit\", \"has_done\", \"has_gallery\",\n    \"is_delete\", \"is_index\", \"is_new\", \"is_on_sale\", \"keywords\", \"cost_price\",\n    \"min_cost_price\", \"min_retail_price\", \"retail_price\", \"sell_volume\", \"https_pic\",\n    \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\", \"home_pic4\",\n    \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\",\n    \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\n    \"id\", \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\",\n    \"home_pic4\", \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\",\n    \"handle_staff_id\", \"add_time\", \"update_time\"\n];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n    \"categories\", \"sort_order\", \"freight_template_id\", \"freight_type\", \"goods_number\", \"cost_price\", \"min_cost_price\", \"min_retail_price\", \"retail_price\",\n    \"goods_video\", \"handle_staff_id\", \"is_index\", \"is_delete\", \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\",\n    \"home_pic4\", \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"add_time\", \"update_time\",\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n    \"id\": \"ID\", \"name\": \"品名\", \"channel_id\": \"频道\", \"categories\": \"分类\", \"sort_order\": \"排序顺序\", \"freight_template_id\": \"快递模版ID\",\n    \"freight_type\": \"快递类别\", \"goods_brief\": \"商品简介\", \"goods_number\": \"商品数量\", \"goods_unit\": \"单位\", \"has_done\": \"有现货\", \"has_gallery\": \"已推广\",\n    \"is_delete\": \"已下架\", \"is_index\": \"在序列\", \"is_new\": \"是新品\", \"is_on_sale\": \"已上架\", \"keywords\": \"关键词\", \"cost_price\": \"成本价\",\n    \"min_cost_price\": \"最低成本价\", \"min_retail_price\": \"最低零售价\", \"retail_price\": \"零售价\", \"sell_volume\": \"销售数量\", \"https_pic\": \"链接图\",\n    \"goods_desc\": \"详情页\", \"list_pic\": \"主图\", \"home_pic1\": \"主图1\", \"home_pic2\": \"主图2\", \"home_pic3\": \"主图3\", \"home_pic4\": \"主图4\",\n    \"home_pic5\": \"主图5\", \"home_pic6\": \"主图6\", \"home_pic7\": \"主图7\", \"home_pic8\": \"主图8\", \"home_pic9\": \"主图9\", \"goods_video\": \"商品视频\",\n    \"handle_staff_id\": \"操作员ID\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectChannels = ({ value = '', onChange = e => console.log(e) }) => {\n    const [channelOptions, setChannelOptions] = useState([]);\n    useEffect(() => {\n        channelsRequestGet()\n            .then(respObj => {\n                const channelsList = respObj.results;\n                let updateOptions = [];\n                for (let index = 0; index < channelsList.length; index++) {\n                    const element = channelsList[index];\n                    updateOptions.push({\n                        value: element.id,\n                        label: element.name\n                    })\n                }\n                setChannelOptions(updateOptions);\n            })\n            .catch(error => {\n                console.log(error);\n                setChannelOptions([]);\n            });\n    }, []);\n    return (<CustomSelect options={channelOptions} value={value} onChange={onChange}></CustomSelect>)\n};\nconst SelectCategories = ({ value = '', onChange = e => console.log(e) }) => {\n    const [options, setOptions] = useState([]);\n    useEffect(() => {\n        categoryRequestGet()\n            .then(respObj => {\n                const channelsList = respObj.results;\n                let updateOptions = [];\n                for (let index = 0; index < channelsList.length; index++) {\n                    const element = channelsList[index];\n                    updateOptions.push({\n                        value: element.id,\n                        label: element.category_name\n                    })\n                }\n                setOptions(updateOptions);\n            })\n            .catch(error => {\n                console.log(error);\n                setOptions([]);\n            });\n    }, []);\n    return (<CustomSelect options={options} value={value} onChange={onChange}></CustomSelect>)\n};\nconst SelectHasDown = (<CustomSelect options={[{ value: 0, label: '定制' }, { value: 1, label: '现货' }]}></CustomSelect>);\nconst SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]}></CustomSelect>);\nconst formKeySelectComponentsObj = {\n    // exampleColumn: SelectExample,\n    // 'end_time': SelectEndTime,\n    'channel_id': <SelectChannels />,\n    'categories': <SelectCategories />,\n    'has_done': SelectHasDown,\n    'has_gallery' : SelectBoolean,\n    'is_delete': SelectBoolean,\n    'is_index': SelectBoolean,\n    'is_new': SelectBoolean,\n    'is_on_sale': SelectBoolean,\n};\n\n// ~~~~~~ 表单自定义操作按钮, 根据实际添加 ~~~~~~\nconst formKeysHandleButtonObj = (setOptModalState) => {\n    return {\n        goods_id: {buttonTips: '选择商品', clickMethod: () => setOptModalState(1)},\n    };\n};\n\n// ~~~~~~ 表单是图片列, 根据实际添加(废弃, 改用 imageKeyNames) ~~~~~~\n// const formKeysIsImages = [\n//     \"https_pic\", \"goods_desc\", \"list_pic\", \"home_pic1\", \"home_pic2\", \"home_pic3\", \"home_pic4\",\n//     \"home_pic5\", \"home_pic6\", \"home_pic7\", \"home_pic8\", \"home_pic9\", \"goods_video\"\n// ];\n\n// ~~~~~~ 查询表单 get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\n    \"id\", \"name\", \"channel_id\", \"categories\", \"is_on_sale\",\n];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n    \"id\": 0, \"name\": \"\", \"channel_id\": 1, \"categories\": \"\", \"sort_order\": 0, \"freight_template_id\": 0,\n    \"freight_type\": 1, \"goods_brief\": \"\", \"goods_number\": 0, \"goods_unit\": \"副\", \"has_done\": 1, \"has_gallery\": 1,\n    \"is_delete\": 0, \"is_index\": 1, \"is_new\": 0, \"is_on_sale\": 1, \"keywords\": \"\", \"cost_price\": 0,\n    \"min_cost_price\": 0, \"min_retail_price\": 0, \"retail_price\": 0, \"sell_volume\": 0, \"https_pic\": \"\",\n    \"goods_desc\": \"\", \"list_pic\": \"\", \"home_pic1\": \"\", \"home_pic2\": \"\", \"home_pic3\": \"\", \"home_pic4\": \"\",\n    \"home_pic5\": \"\", \"home_pic6\": \"\", \"home_pic7\": \"\", \"home_pic8\": \"\", \"home_pic9\": \"\", \"goods_video\": \"\",\n    \"handle_staff_id\": 0, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"  \n}\n\n// ~~~~~~ 表单值规则, 根据实际添加 ~~~~~~\n// formRulesList = {formKey: [{require: true, message: 'Please input Password!',}, ]};\nconst formRulesList = {\"password\": [{required: true, message: 'Please input Password!',}, ], }\n\n// ~~~~~~ 图片列名称, 根据实际修改(多张图片去掉最后序号数字) ~~~~~~\nconst imageKeyNames = ['home_pic'];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 9;\n\n// ~~~~~~ 视频列名称 ~~~~~~\nconst videoKeyName = 'goods_video';\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['goods-admin/v1/goods', ];\n\nconst actionButtons = (item, setVisible, setSelectedObj, selectButtonOnClick) => {\n    const onClickInfo = () => {\n        setSelectedObj(item);\n        setVisible(2);\n    };\n    const gotoColorPricePage = () => {\n        // 跳转到 颜色价格页面 传商品id\n        // navigate(\"/wxcolorprice\", { state: { goodsobj: item } });\n        setSelectedObj(item);\n        setVisible(4);\n    }\n    const goodsCategoryhandle = () => {\n        // 商品分类(热搜词)操作\n        setSelectedObj(item);\n        setVisible(3);\n    }\n    const btnList = [\n        <Button onClick={onClickInfo} type=\"link\">详情</Button>,\n        <Button onClick={gotoColorPricePage} type=\"link\">颜色价格</Button>,\n        <Button onClick={goodsCategoryhandle} type=\"link\">商品分类(热搜词)</Button>,\n    ];\n    if (selectButtonOnClick) {\n        btnList.push(<Button onClick={() => selectButtonOnClick(item)} type=\"link\">选择</Button>)\n    }\n    return btnList;\n}\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst renderItem = (item, setSelectedObj, selectButtonOnClick, setVisible, visible) => {\n    // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n    const textsContent = (\n        <div>\n            <p>{`商品ID: ${item.id}`}</p>\n            <p>{`已上架: ${item.is_on_sale > 0 ? '是' : '否'}`}</p>\n            <p>{`总销量: ${item.sell_volume}`}</p>\n            <p>{`说明: ${item.explains}`}</p>\n            <p>{`上架时间: ${moment(item.add_time).format('YYYY-MM-DD HH:mm:ss')}`}</p>\n            <p>{`更新时间: ${moment(item.update_time).format('YYYY-MM-DD HH:mm:ss')}`}</p>\n        </div>\n    )\n    const updateItemObj = {\n        id: item.id,\n        actions: actionButtons(item, setVisible, setSelectedObj, selectButtonOnClick),\n        img: item.home_pic1_url,\n        avatar: '',\n        title: item.name,\n        description: `商品简介: ${item.goods_brief}`,\n        content: textsContent,\n    };\n    return customRanderItem(updateItemObj, 120);\n};\n\nconst judgeHasMore = (resp) => {\n    if (Object.keys(resp).includes('next')\n        && typeof resp.next === 'string'\n        && resp.next.length > 5) {\n        return true;\n    }\n    return false;\n};\n\nexport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formKeysIsImages,\n    formGetRequestParamsKeys,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName,\n    apiLists,\n    renderItem,\n    judgeHasMore\n};\n","import React from 'react';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\n// 自定义 Select 组件的request请求, ～～～～～～ 根据需要重写 ～～～～～～\n\nconst channelsRequestGet = () => {\n  // 频道 Get 请求\n  return new Promise(function (resolve, reject) {\n    const api = 'channel/v1/channels';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nconst categoryRequestGet = () => {\n  // 分类 Get请求\n  return new Promise(function (resolve, reject) {\n    const api = 'category-admin/v1/category';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n}\n\nexport {\n  channelsRequestGet,\n  categoryRequestGet\n}\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './goods_columns_label_config';\n\n// Goods 的request请求\n\nconst GoodsRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Goods Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst GoodsRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Goods post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst GoodsRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Goods put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst GoodsRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Goods delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nGoodsRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  GoodsRequestGet,\n  GoodsRequestPost,\n  GoodsRequestPut,\n  GoodsRequestDelete\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n// import moment from 'moment';\n\nimport { StsUploadImagesList, StsUploadVideo } from '../../upload_files/sts_upload_files_list';\nimport { GoodsRequestPost } from './goods_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName\n} from './goods_columns_label_config';\n\nconst createFormNotShowKeys = ['id'].concat(formNotShowKeys);\n\n// 新建 Modal\n\nconst CreateGoods = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n    const goodsImageObj = useRef({});\n    const videoObj = useRef({});\n    const oldObj = useRef({handleCount: 0});\n\n    const [initFormCount, setInitFormCount] = useState(0);\n\n    const [postRequestCount, setPostRequestCount] = useState(0);\n    const reqObject = useRef({});\n\n    useEffect(() => {\n        if (visible === 1) {\n            // 显示创建modal 初始化表格, 初始化图片\n            setInitFormCount(initFormCount + 1);  // 初始化表格\n            oldObj.current = {handleCount: oldObj.current.handleCount + 1};  // 初始化图片\n        }\n    }, [visible]);\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    const postResponseDataHandle = (respObj) => {\n        // 表单提交后的操作\n        if (\n            Object.keys(respObj).includes('code')\n            && respObj.code === 1000\n        ){\n            closeModal();\n            setReloadListCount(reloadListCount + 1)\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const closeModal = () => {\n        // 关闭Modal\n        setVisible(0);\n    }\n\n    const goodsImageUploaded = (imagesObj) => {\n        // 图片上传后操作\n        goodsImageObj.current = { ...imagesObj };\n        console.log(imagesObj);\n    }\n\n    const uploadedVideo = (uploadedVideoObj) => {\n        // 视频上传后操作\n        videoObj.current = {...uploadedVideoObj};\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...goodsImageObj.current, ...videoObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        // upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        // console.log(upObj.end_time);\n        reqObject.current = upObj;\n        setPostRequestCount(postRequestCount + 1);\n    }\n\n    return (<>\n        <Modal visible={visible === 1}\n            title=\"Goods 新建\"\n            closable={false}\n            footer={null}\n        >\n            <StsUploadVideo\n                onChange={uploadedVideo}\n                oldObj={oldObj.current}\n                videoKeyName={videoKeyName}\n            ></StsUploadVideo>\n            <Divider />\n            <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n                <StsUploadImagesList\n                    oldObj={oldObj.current}\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    onChange={goodsImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={createFormNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={closeModal}\n                showDeleteButton={false}\n                formInitialObj={formInitialObj}\n                initFormCount={initFormCount}\n                rulesObj={formRulesList}\n                updateFormObj={updateFormObj}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <GoodsRequestPost\n                requestCount={postRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={postResponseDataHandle}\n            ></GoodsRequestPost>\n        </Modal>\n    </>)\n}\n\nCreateGoods.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateGoods;\n","import React, { useEffect, useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formGetRequestParamsKeys,\n    formInitialObj\n} from './goods_columns_label_config';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\n// 列表查询 form\n\nconst GoodsQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n    const [initFormCount, setInitFormCount] = useState(0);\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n\n    useEffect(() => {\n        // 显示查询抽屉时初始化表格\n        if (visible) {\n            setInitFormCount(initFormCount + 1);\n        }\n    }, [visible]);\n\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    const closeDrawer = () => {\n        // 关闭查询抽屉\n        setVisible(false);\n    };\n\n    const onFinish = (formObj) => {\n        // 提交查询 根据具体情况更新 fromObj\n        // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n        let copyFormObj = { ...formObj };\n        const queryId = copyFormObj.id ? parseInt(copyFormObj.id) : 0;\n        if (queryId > 0) {\n            queryHandle({id: queryId});\n        }else {\n            delete copyFormObj.id;\n            console.log(copyFormObj);\n            queryHandle(copyFormObj);\n        }\n        setTimeout(() => {\n            closeDrawer();\n        }, 50);\n    };\n\n    return (\n        <>\n            <Drawer\n                title=\"Goods查询\"\n                width=\"100%\"\n                height=\"400px\"\n                placement=\"top\"\n                onClose={closeDrawer}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={null}\n            >\n                <CustomForm\n                    columns={formGetRequestParamsKeys}\n                    formKeyLabelObj={formKeysLabelsObj}\n                    formKeySelectComponentsObj={formKeySelectComponentsObj}\n                    formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                    onFinish={onFinish}\n                    cancelHandle={() => setVisible(0)}\n                    showDeleteButton={false}\n                    formInitialObj={formInitialObj}\n                    initFormCount={initFormCount}\n                    updateFormObj={updateFormObj}\n                ></CustomForm>\n            </Drawer>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n        </>\n    );\n};\n\nGoodsQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default GoodsQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\nimport moment from 'moment';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList, StsUploadVideo } from '../../upload_files/sts_upload_files_list';\nimport { GoodsRequestPut, GoodsRequestDelete  } from './goods_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    videoKeyName\n} from './goods_columns_label_config';\n\n// 编辑 Goods\n\nconst UpdateGoods = ({ visible, setVisible, oldObj, updatedHandle }) => {\n\n    const goodsImageObj = useRef({});\n    const videoObj = useRef({});\n    const [putRequestCount, setPutRequestCount] = useState(0);\n    const reqObject = useRef({});\n    const putResponseDataHandle = (respObj) => {\n        if (Object.keys(respObj).includes('code') && respObj.code === 1000) {\n            message.success('修改成功');\n            updatedHandle(respObj);\n            setVisible(0);\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n    const deleteGoods = () => {\n        // 删除当前对象\n        setDeleteRequestCount(deleteRequestCount + 1);\n        updatedHandle({id: oldObj.id, del_handle: true});\n    };\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    useEffect(() => {\n        if (visible > 0) {\n            console.log(oldObj);\n            setUpdateFormObj({id: -1});\n            let endTimeStamp = oldObj.end_time ? parseInt(oldObj.end_time) : 0;\n            if (endTimeStamp < 10000000000) {\n                endTimeStamp = parseInt(endTimeStamp * 1000);\n            }\n            const endTimeMoment = moment(endTimeStamp);\n            setUpdateFormObj({ ...oldObj, end_time: endTimeMoment });  // 给表格赋值\n        }\n    }, [visible, oldObj]);\n\n    const goodsImageUploaded = (imagesObj) => {\n        // 轮播图上传后操作\n        goodsImageObj.current = imagesObj;\n        // console.log(imagesObj);\n    }\n\n    const uploadedVideo = (uploadedVideoObj) => {\n        // 视频上传后操作\n        videoObj.current = {...uploadedVideoObj};\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...goodsImageObj.current, ...videoObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        // upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        console.log(upObj);\n        reqObject.current = upObj;\n        setPutRequestCount(putRequestCount + 1);\n    }\n\n    return (\n        <Modal visible={visible === 2}\n            title=\"Goods\"\n            closable={false}\n            footer={null}\n        >\n            <StsUploadVideo onChange={uploadedVideo} oldObj={oldObj} videoKeyName={videoKeyName}></StsUploadVideo>\n            <Divider />\n            <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n                <StsUploadImagesList\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    oldObj={oldObj}\n                    onChange={goodsImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={formNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={() => setVisible(0)}\n                showDeleteButton={true}\n                deleteHandle={deleteGoods}\n                updateFormObj={updateFormObj}\n                rulesObj={formRulesList}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <GoodsRequestPut\n                requestCount={putRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={putResponseDataHandle}\n                id={oldObj.id}></GoodsRequestPut>\n            <GoodsRequestDelete\n                requestCount={deleteRequestCount}\n                responseDataHandle={(respObj) => setVisible(0)}\n                id={oldObj.id}></GoodsRequestDelete>\n        </Modal>\n    )\n}\n\nUpdateGoods.defaultProps = {\n    visible: false,\n    setVisible: (val) => console.log(val),\n    oldObj: {},\n    updatedHandle: updatedObj => console.log(updatedObj),\n}\n\nexport default UpdateGoods;\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\nconst  apiLists = ['category-admin/v1/category', ];\n\n// goods category requests\nconst ComponentCategoryRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n    // Deliver Get请求\n    const api = [].concat(apiLists)[0];\n    const method = 'get';\n    const reqObject = {};\n  \n    return (\n      <AxiosRequest\n        responseDataHandle={responseDataHandle} api={api} method={method}\n        reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n      ></AxiosRequest>\n    );\n};\nComponentCategoryRequestGet.defaultProps = {\n    requestCount: 0,\n    reqParams: {},\n    responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst categoryRequestGet = () => {\n    // 分类 Get请求\n    return new Promise(function (resolve, reject) {\n        const api = apiLists[0];\n        const method = 'get';\n        const reqParams = {};\n        const reqObject = {};\n        sendAxiosRequest(api, method, reqParams, reqObject)\n            .then(respObj => {\n            resolve(respObj);\n            })\n            .catch(err => {\n            console.log(err);\n            reject(err);\n            });\n    });\n}\n\nexport { ComponentCategoryRequestGet, categoryRequestGet };","import React, { useEffect, useState } from 'react';\nimport { Select } from 'antd';\n// mode=\"multiple\"\n// import { CustomSelect } from '../select_component';\nimport { categoryRequestGet } from './goods_category_requests';\n\n\n// 商品分类(热搜词)编辑\nconst GoodsCategorySelect = ({visible, goodsObj, onChange}) => {\n    const [options, setOptions] = useState([]);\n\n    const [selector, setSelector] = useState([]);\n\n    useEffect(() => {\n        // 初始化分类选择\n        categoryRequestGet().then(respObj => {\n            const channelsList = respObj.results;\n            let updateOptions = [];\n            for (let index = 0; index < channelsList.length; index++) {\n                const element = channelsList[index];\n                updateOptions.push({\n                    value: element.id,\n                    label: element.category_name\n                })\n            }\n            setOptions(updateOptions);\n        }).catch(error => {\n            console.log(error);\n            setOptions([]);\n        });\n    }, []);\n\n    useEffect(() => {\n        // 商品更改后给选择框赋值\n        if (visible < 1) {\n            return;\n        }\n        console.log(goodsObj);\n        let categories = goodsObj.categories ? goodsObj.categories : '';\n        categories = categories.split('-');\n        for (let index = categories.length - 1; index > -1; index--) {\n            // 删除空值\n            if (categories[index] === '') {\n                categories.splice(index, 1)\n            }else{\n                categories[index] = parseInt(categories[index]);\n            }\n        }\n        console.log(categories);\n        setSelector(categories);\n    }, [visible]);\n\n    const selecteHandle = (values) => {\n        console.log(`selected ${values}`);\n        setSelector(values);\n        onChange(values);\n    }\n\n    return (<Select\n            style={{ width: '100%' }}\n            options={options}\n            value={selector}\n            onChange={selecteHandle}\n            mode=\"multiple\"\n        ></Select>)\n}\nGoodsCategorySelect.defaultProps = {\n    visible: 0,\n    goodsObj: {},\n    onChange: (selectors) => console.log(selectors),\n}\n\nexport { GoodsCategorySelect };\n","import React, { useState } from 'react';\nimport { Button, Modal, Space } from 'antd';\n\nimport { GoodsCategorySelect } from '../base_components/goods_category/goods_category_select';\n\nconst GoodsCategoryModal = ({visible, setVisible, visibleNum, goodsObj, updateCategory}) => {\n    // 商品分类选择对话框\n    const [categorySelectors, setCategorySelectors] = useState('');\n\n    const confirmSelect = () => {\n        // 确认选择分类(热搜词)\n        updateCategory(categorySelectors);\n        setVisible(0);\n    }\n\n    const categorySelectorsChange = (selectedCategories) => {\n        // 选择框更新后操作\n        setCategorySelectors(selectedCategories);\n    }\n\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"选择分类(热搜词)\"\n                mask={true}\n                closable={true}\n                centered={true}\n                footer={[\n                    <Button key=\"categoryConfirm\" onClick={confirmSelect}>确认</Button>,\n                    <Button key=\"categoryCancle\" onClick={() => { setVisible(0); }}>取消</Button>\n                ]}\n            >\n                <Space direction=\"vertical\">\n                    <p>商品: {goodsObj.name}</p>\n                    <GoodsCategorySelect\n                        visible={visible}\n                        onChange={categorySelectorsChange}\n                        goodsObj={goodsObj}\n                    ></GoodsCategorySelect>\n                </Space>\n            </Modal>\n        </>\n    );\n}\nGoodsCategoryModal.defaultProps = {\n    visible: 0,\n    setVisible: visibleNum => console.log(visibleNum),\n    visibleNum: 1,\n    goodsObj: {},\n    updateCategory: categorySelectors => console.log(categorySelectors),\n}\n\nexport { GoodsCategoryModal };\n","import React, { useEffect, useState } from 'react';\nimport { Button, Modal } from 'antd';\n// import CustomerList from '../customer_list';\nimport ColorPriceComponent from '../wx_store/color_price';\n\n// 颜色,数量 模态框\n\nconst ColorPriceEditOptModal = ({ visible, setVisible, visibleNum, goodsObj, selectHandle }) => {\n    // 选择商品 modal\n    const [location, setLocation] = useState({state: {\n        goodsobj: {},\n        selectHandle: selectHandle,\n        setVisible: setVisible,\n    }});\n\n    useEffect(() => {\n        // 显示的时候更新商品对象\n        if (visible === visibleNum) {\n            const state = {\n                goodsobj: goodsObj,\n                selectHandle: selectHandle,\n                setVisible: setVisible,\n            };\n            setLocation({state: state});\n        }\n    }, [visible, visibleNum, goodsObj])\n\n    return (\n        <>\n            <Modal visible={visible === visibleNum}\n                title=\"颜色价格\"\n                closable={false}\n                footer={[\n                    <Button key=\"unvisible\" onClick={() => { setVisible(0); }}>确定</Button>\n                ]}\n            >\n                <div style={{width: '100%', maxHeight: '30rem', overflow: 'auto'}}>\n                    <ColorPriceComponent location={location}></ColorPriceComponent>\n                </div>\n            </Modal>\n        </>\n    );\n}\nColorPriceEditOptModal.defaultProps = {\n    visible: 0,\n    setVisible: (setVisibleNum) => console.log(setVisibleNum),\n    visibleNum: 1,\n    goodsObj: {},\n    selectHandle: null,\n}\n\nexport { ColorPriceEditOptModal };\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { CustomList } from '../../base_components/lists/custom_list';\nimport { GoodsRequestGet, GoodsRequestPut } from './goods_requests';\nimport UpdateGoods from './update_goods';\nimport { renderItem, judgeHasMore } from './goods_columns_label_config';\nimport { LoadMoreButton } from '../../base_components/load_more_button_conpoment';\nimport { GoodsCategoryModal } from '../../modals/goods_category_opt';\nimport { ColorPriceEditOptModal } from '../../modals/goods_color_price_opt';\nimport { ScrollGoBack } from '../../base_components/scroll_handle/goback_origin_scroll';\n// 列表编辑 页面\n\nconst updateGoodsData = (originGoodsData, updateObj) => {\n    // 更新更新过的商品\n    const copyGoodsData = [].concat(originGoodsData)\n    const updateGoodsId = updateObj.id\n    for (let index = 0; index < copyGoodsData.length; index++) {\n        const element = copyGoodsData[index];\n        if (element.id === updateGoodsId) {\n            if (Object.keys(updateObj).includes('del_handle') && updateObj.del_handle) {\n                // 删除操作\n                copyGoodsData.splice(index, 1);\n            } else {\n                copyGoodsData[index] = updateObj\n            }\n            return copyGoodsData\n        }\n    }\n    return copyGoodsData\n}\n\nconst GoodsList = ({ reloadListCount, setReloadListCount, requestParams, selectButtonOnClick }) => {\n\n    const [visible, setVisible] = useState(0);\n\n    const [hasMoreState, setHasMoreState] = useState(true);\n    const [loading, setLoading] = useState(false);\n    // 设置为true 开始request请求, 解决useState异步\n    const [requesting, setRequesting] = useState(false);\n    const reqParams = useRef({ page: 0 });\n\n    const [goodsData, setGoodsData] = useState([]);\n    const [goodsRequestGetCount, setGoodsRequestGetCount] = useState(0);\n\n    const [goodsRequestPutCount, setGoodsRequestPutCount] = useState(0);\n    const [goodsPutObj, setGoodsPutObj] = useState({});\n\n    const [selectedObj, setSelectedObj] = useState({});\n\n    const [selectColorHandle, setSelectColorHandle] = useState(null);\n\n    useEffect(() => {\n        if (hasMoreState && !loading && requesting) {\n            // 使用useEffect 触发request 解决 useState 异步\n            loadMore();\n            setRequesting(false);\n        }\n    }, [requesting, hasMoreState, loading])\n\n    useEffect(() => {\n        // 加载、更新或创建数据后 重新读取列表\n        reqParams.current = { ...requestParams };\n        reloadListsHandle();\n    }, [reloadListCount]);\n\n    useEffect(() => {\n        // goodsPutObj 更新后判断是否发送更新分类的请求\n        if (Object.keys(goodsPutObj).includes('categories')) {\n            setGoodsRequestPutCount(goodsRequestPutCount + 1)\n        }\n    }, [goodsPutObj]);\n\n    // useEffect(() => {\n    //     if (typeof selectButtonOnClick === 'function') {\n    //         setSelectColorHandle((colorObj) => {\n    //             // 重新包装选择商品方法(包括选择颜色)\n    //             setVisible(0);\n    //             selectButtonOnClick(selectedObj, colorObj);\n    //         });\n    //     }\n    // }, [selectButtonOnClick])\n\n    const loadMore = () => {\n        // 读取更多列表\n        if (hasMoreState && !loading) {\n            setLoading(true);\n            setHasMoreState(false);\n            const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n            reqParams.current = { ...reqParams.current, page: current_page };\n            console.log(reqParams.current);\n            setGoodsRequestGetCount(goodsRequestGetCount + 1);\n        } else {\n            console.log('Error state: hasMore is ', hasMoreState, ', loading is ', loading);\n        }\n    };\n\n    const reloadListsHandle = () => {\n        // 重新读取数据\n        reqParams.current = { ...reqParams.current, page: 0 };\n        // console.log(reqParams.current);\n        setGoodsData([]);\n        setHasMoreState(true);\n        setLoading(false);\n        setRequesting(true);    // useEffect 触发request请求，解决useState异步\n    };\n\n    const goodsGetResponse = (resp) => {\n        // console.log('resp process...');\n        setLoading(false);\n        if (Object.keys(resp).includes('code')\n            && resp.code === 1000\n            && Object.keys(resp).includes('results')\n        ) {\n            setGoodsData(goodsData.concat(resp.results));\n            setHasMoreState(judgeHasMore(resp));   // 判断是否还有更多\n        } else {\n            console.log('Error: get data...');\n        }\n    };\n\n    const updateGoodsCategory = (selectorCategories) => {\n        // 更新商品分类\n        console.log(selectorCategories);\n        const updateGoodsCategoryObj = {categories: selectorCategories.join('-')}\n        setGoodsPutObj(updateGoodsCategoryObj); // goodsPutObj 更新后触发 useEffect\n    }\n\n    const updatedGoodsHandle = (resp) => {\n        // 更新结果\n        console.log(resp);\n        setGoodsData(updateGoodsData(goodsData, resp))\n    }\n\n    return (\n        <div>\n            <ScrollGoBack visible={visible}></ScrollGoBack>\n\n            <CustomList\n                header=\"Goods List\"\n                listData={goodsData}\n                visible={visible}\n                setVisible={setVisible}\n                randerItem={renderItem}\n                setSelectedItem={setSelectedObj}\n                selectButtonOnClick={selectButtonOnClick}\n            ></CustomList>\n\n            <UpdateGoods\n                visible={visible}\n                setVisible={setVisible}\n                oldObj={selectedObj}\n                reloadListCount={reloadListCount}\n                setReloadListCount={setReloadListCount}\n                updatedHandle={updatedGoodsHandle}\n            ></UpdateGoods>\n\n            <GoodsCategoryModal\n                visible={visible}\n                setVisible={setVisible}\n                visibleNum={3}\n                goodsObj={selectedObj}\n                updateCategory={updateGoodsCategory}\n            ></GoodsCategoryModal>\n\n            <ColorPriceEditOptModal\n                visible={visible}\n                setVisible={setVisible}\n                visibleNum={4}\n                goodsObj={selectedObj}\n                selectHandle={selectColorHandle}\n            ></ColorPriceEditOptModal>\n\n            <GoodsRequestPut\n                requestCount={goodsRequestPutCount}\n                reqObject={goodsPutObj}\n                responseDataHandle={updatedGoodsHandle}\n                id={selectedObj.id}\n            ></GoodsRequestPut>\n\n            <GoodsRequestGet requestCount={goodsRequestGetCount}\n                reqParams={reqParams.current}\n                responseDataHandle={goodsGetResponse}></GoodsRequestGet>\n\n            <LoadMoreButton hasMore={hasMoreState} onClick={loadMore}></LoadMoreButton>\n        </div>\n    );\n}\n\nGoodsList.defaultProps = {\n    reloadListCount: 1,\n    setReloadListCount: (addedNum) => { console.log(addedNum); },\n    requestParams: { page: 0 },\n    selectButtonOnClick: null,\n}\n\nexport default GoodsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './goods_columns_label_config';\n\n// 显示查询条件组件\n\nconst GoodsQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default GoodsQueryParams;\n","import React, { useState, useRef } from 'react';\n// import { navigate, Link } from 'gatsby';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreateGoods from './create_goods';\nimport GoodsQueryDrawerForm from './goods_query_form';\nimport GoodsList from './goods_list';\nimport GoodsQueryParams from './goods_query_params_display';\n// Goods 入口组件\n\nconst GoodsComponent = ({ selectButtonOnClick = null }) => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createGoodsVisible, setCreateGoodsVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    // console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            {/* <Tooltip title=\"返回\">\n              <Link to=\"/logistic\"><LeftOutlined /></Link>\n            </Tooltip> */}\n            <h4>Goods</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            {/* <Button style={{ float: 'right' }} type=\"link\" onClick={() => navigate('/sendexpressaccount')}>快递帐号设置</Button> */}\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateGoodsVisible(1)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><GoodsQueryParams paramsObj={reqParams.current}></GoodsQueryParams></Col>\n      </Row>\n      <GoodsQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></GoodsQueryDrawerForm>\n\n      <GoodsList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n        selectButtonOnClick={selectButtonOnClick}\n      ></GoodsList>\n\n      <CreateGoods\n        visible={createGoodsVisible}\n        setVisible={setCreateGoodsVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateGoods>\n    </div>\n  )\n};\n\nexport default GoodsComponent;\n","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange, mode }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value} mode={mode} allowClear>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n  mode: null,\n}\n\nexport { CustomSelect };\n"],"sourceRoot":""}