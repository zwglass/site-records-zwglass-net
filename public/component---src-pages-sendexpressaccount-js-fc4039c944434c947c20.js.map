{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LeftOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/LeftOutlined.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./src/components/send_express_account/send_express_account_columns_label_config.js","webpack:///./src/components/send_express_account/custom_select_requests.js","webpack:///./src/components/send_express_account/send_express_account_requests.js","webpack:///./src/components/send_express_account/create_send_express_account.js","webpack:///./src/components/send_express_account/send_express_account_query_form.js","webpack:///./src/components/send_express_account/update_send_express_account.js","webpack:///./src/components/send_express_account/send_express_account_list.js","webpack:///./src/components/send_express_account/send_express_account_query_params_display.js","webpack:///./src/components/send_express_account/index.js","webpack:///./src/pages/sendexpressaccount.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./src/components/base_components/form_component.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack:///./src/components/base_components/select_component.js"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","$export","S","isInteger","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectExpressCompany","value","onChange","e","console","log","useState","selectOptions","setSelectOptions","useEffect","Promise","resolve","reject","sendAxiosRequest","then","respObj","catch","err","resList","results","updateOptions","index","length","element","push","express_company_code","label","express_company_name","error","options","formKeySelectComponentsObj","formGetRequestParamsKeys","formInitialObj","imageKeyNames","apiLists","ItemRendererComponent","item","itemDetailClick","listsIndex","productTitle","productEffects","account_code","salePrice","clickDetailHandle","SendExpressAccountRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","defaultProps","SendExpressAccountRequestPost","concat","SendExpressAccountRequestPut","id","SendExpressAccountRequestDelete","CreateSendExpressAccount","visible","setVisible","reloadListCount","setReloadListCount","sendExpressAccountImageObj","useRef","oldObj","createCount","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","closeModal","current","title","closable","footer","style","width","height","textAlign","maxImagesNum","imageKeyName","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","onFinish","values","upObj","cancelHandle","showDeleteButton","keys","includes","code","message","val","booleanVal","SendExpressAccountQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdateSendExpressAccount","setOldSendExpressAccountHomeImages","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","initImgAndForm","sendExpressAccountHomeImgs","imgKey","currentCosNameKey","currentUrlKey","currentCosName","currentUrl","cosNameKey","cosName","urlKey","url","deleteHandle","updateFormObj","success","SendExpressAccountList","requestParams","hasMore","hasMorestate","setHasMoreState","loading","setLoading","page","sendExpressAccountData","setSendExpressAccountData","sendExpressAccountRequestGetCount","setSendExpressAccountRequestGetCount","updateSendExpressAccountVisible","setUpdateSendExpressAccountVisible","selectedObj","setSelectedObj","reloadListsHandle","loadMore","current_page","Number","selObj","resp","next","judgeHasMore","productsData","addedNum","SendExpressAccountQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","currentFactor","padding","SendExpressAccountComponent","drawerVisible","setDrawerVisible","createSendExpressAccountVisible","setCreateSendExpressAccountVisible","span","to","LeftOutlined","onClick","shape","ReloadOutlined","SearchOutlined","float","type","currentRequestParams","SendExpressAccountPage","isObject","floor","Math","module","exports","it","isFinite","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","FormItem","formKey","rulesObj","passwordKeys","showLabelName","disabled","currentLabel","currentInputValue","Item","name","initialValue","rules","Password","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","clickMethod","CustomForm","form","Form","useForm","buttonIsLoading","setButtonIsLoading","setFieldsValue","layout","map","key","toString","htmlType","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","wrapperCol","Option","Select","CustomSelect","obj","selectComponentWidth"],"mappings":"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","file":"component---src-pages-sendexpressaccount-js-fc4039c944434c947c20.js","sourcesContent":["// This icon file is generated automatically.\nvar LeftOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\"\n      }\n    }]\n  },\n  \"name\": \"left\",\n  \"theme\": \"outlined\"\n};\nexport default LeftOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftOutlined = function LeftOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LeftOutlinedSvg\n  }));\n};\n\nLeftOutlined.displayName = 'LeftOutlined';\nexport default React.forwardRef(LeftOutlined);","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","import React, { useState, useEffect } from 'react';\n// import { DatePicker } from 'antd';\nimport { CustomSelect } from '../base_components/select_component';\nimport ListsItem from '../base_components/list_item';\nimport { expressCompanyRequestGet } from './custom_select_requests';\n\n// SendExpressAccount 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\"id\", \"express_company_code\", \"account_code\", \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\"id\", \"handle_staff_id\", \"add_time\", \"update_time\"];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\"id\", \"handle_staff_id\", \"add_time\", \"update_time\"];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n  \"id\": \"ID\", \"express_company_code\": \"快递公司\", \"account_code\": \"发货账号\",\n  \"handle_staff_id\": \"编辑人员\", \"add_time\": \"新建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectExpressCompany = ({ value = '', onChange = e => console.log(e) }) => {\n  const [selectOptions, setSelectOptions] = useState([]);\n  useEffect(() => {\n    expressCompanyRequestGet().then(respObj => {\n        const resList = respObj.results;\n        let updateOptions = [];\n        for (let index = 0; index < resList.length; index++) {\n          const element = resList[index];\n          updateOptions.push({\n            value: element.express_company_code,\n            label: element.express_company_name\n          })\n        }\n        setSelectOptions(updateOptions);\n      }).catch(error => {\n        console.log(error);\n        setSelectOptions([]);\n      });\n  }, []);\n  return (<CustomSelect options={selectOptions} value={value} onChange={onChange}></CustomSelect>)\n};\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\n// const SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]} />);\nconst formKeySelectComponentsObj = {\n  'express_company_code': <SelectExpressCompany />,\n  // exampleColumn: SelectBoolean,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [];\n\n//  ~~~~~~ 表单get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\"id\": 0, \"express_company_code\": '', \"account_code\": '', \"handle_staff_id\": 0, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyNames = [];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 0;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['kdniao-admin/v1/expressaccountinfo', ];\n\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst ItemRendererComponent = ({ item, index, itemDetailClick }) => {\n  // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n  console.log(item);\n  return (<div>\n    <ListsItem\n      listsIndex={index}\n      productTitle={item.express_company_code}\n      productEffects={`发货账号: ${item.account_code}`}\n      salePrice={0}\n      clickDetailHandle={itemDetailClick}\n    ></ListsItem>\n  </div>);\n};\n\nexport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n  apiLists,\n  ItemRendererComponent\n};\n","import React from 'react';\nimport { sendAxiosRequest } from '../apis/sendRequest';\n\n// 自定义 Select 组件的request请求, ～～～～～～ 根据需要重写 ～～～～～～\n\nconst expressCompanyRequestGet = () => {\n  // 频道 Get 请求\n  return new Promise(function (resolve, reject) {\n    const api = 'kdniao-admin/v1/kdniaoexpresscompanycodes';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nconst categoryRequestGet = () => {\n  // 分类 Get请求\n  return new Promise(function (resolve, reject) {\n    const api = 'category-admin/v1/category';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nexport {\n  expressCompanyRequestGet,\n  categoryRequestGet\n}\n","import React from 'react';\n\nimport AxiosRequest from '../apis';\nimport { apiLists } from './send_express_account_columns_label_config';\n\n// SendExpressAccount 的request请求\n\nconst SendExpressAccountRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // SendExpressAccount Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nSendExpressAccountRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst SendExpressAccountRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // SendExpressAccount post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nSendExpressAccountRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst SendExpressAccountRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // SendExpressAccount put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nSendExpressAccountRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst SendExpressAccountRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // SendExpressAccount delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nSendExpressAccountRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  SendExpressAccountRequestGet,\n  SendExpressAccountRequestPost,\n  SendExpressAccountRequestPut,\n  SendExpressAccountRequestDelete\n};\n","import React, { useRef, useState } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../upload_files/sts_upload_files_list';\nimport { SendExpressAccountRequestPost } from './send_express_account_requests';\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './send_express_account_columns_label_config';\n\n// 新建 Modal\n\nconst CreateSendExpressAccount = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n  const sendExpressAccountImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    sendExpressAccountImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const sendExpressAccountImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    sendExpressAccountImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...sendExpressAccountImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"SendExpressAccount 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            maxImagesNum={maxImagesNum}\n            imageKeyName={imageKeyNames[0]}\n            onChange={sendExpressAccountImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <SendExpressAccountRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></SendExpressAccountRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreateSendExpressAccount.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateSendExpressAccount;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formGetRequestParamsKeys,\n  formInitialObj\n} from './send_express_account_columns_label_config';\n// 列表查询 form\n\nconst SendExpressAccountQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <Drawer\n      title=\"销售记录查询\"\n      width=\"100%\"\n      height=\"400px\"\n      placement=\"top\"\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={null}\n    >\n      <CustomForm\n        columns={formGetRequestParamsKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={false}\n        formInitialObj={formInitialObj}\n        initFormCount={initFormCount}\n      ></CustomForm>\n    </Drawer>\n  );\n};\n\nSendExpressAccountQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default SendExpressAccountQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../upload_files/sts_upload_files_list';\nimport { SendExpressAccountRequestPut, SendExpressAccountRequestDelete  } from './send_express_account_requests';\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './send_express_account_columns_label_config';\n\n// 编辑 SendExpressAccount\n\nconst UpdateSendExpressAccount = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n  const [oldSendExpressAccountHomeImages, setOldSendExpressAccountHomeImages] = useState([]);\n  const sendExpressAccountImageObj = useRef({});\n\n  const [oldSendExpressAccountImageUrl, setOldSendExpressAccountImageUrl] = useState('');\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(false);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deleteSendExpressAccount = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    let sendExpressAccountHomeImgs = [];\n    const imgKey = imageKeyNames[0];\n    for (let index = 1; index < 10; index++) {\n      const currentCosNameKey = imgKey + index;\n      const currentUrlKey = currentCosNameKey + '_url';\n      const currentCosName = oldObj[currentCosNameKey];\n      const currentUrl = oldObj[currentUrlKey];\n      if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n        sendExpressAccountHomeImgs.push({\n          cosNameKey: currentCosNameKey,\n          cosName: currentCosName,\n          urlKey: currentUrlKey,\n          url: currentUrl\n        });\n      }\n    }\n    // console.log(sendExpressAccountHomeImgs);\n    setOldSendExpressAccountHomeImages(sendExpressAccountHomeImgs);   // 更新图片列表\n  }\n\n  const sendExpressAccountImageUploaded = (imagesObj) => {\n    // 轮播图上传后操作\n    sendExpressAccountImageObj.current = imagesObj;\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...sendExpressAccountImageObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible}\n      title=\"SendExpressAccount\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[0]}\n          oldObj={oldObj}\n          onChange={sendExpressAccountImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deleteSendExpressAccount}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <SendExpressAccountRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></SendExpressAccountRequestPut>\n      <SendExpressAccountRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></SendExpressAccountRequestDelete>\n    </Modal>\n  )\n}\n\nUpdateSendExpressAccount.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdateSendExpressAccount;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ProductsList from '../base_components/products_list';\nimport { SendExpressAccountRequestGet } from './send_express_account_requests';\n// import CreateSendExpressAccount from './create_send_express_account';\nimport UpdateSendExpressAccount from './update_send_express_account';\nimport { ItemRendererComponent } from './send_express_account_columns_label_config';\n\n// 列表编辑 页面\n\nconst SendExpressAccountList = ({ reloadListCount, setReloadListCount, requestParams }) => {\n  const hasMore = useRef(true);\n  const [hasMorestate, setHasMoreState] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const reqParams = useRef({ page: 0 });\n\n  const [sendExpressAccountData, setSendExpressAccountData] = useState([]);\n  const [sendExpressAccountRequestGetCount, setSendExpressAccountRequestGetCount] = useState(0);\n\n  // const [createSendExpressAccountVisible, setCreateSendExpressAccountVisible] = useState(false);\n  const [updateSendExpressAccountVisible, setUpdateSendExpressAccountVisible] = useState(false);\n  const [selectedObj, setSelectedObj] = useState({});\n\n  useEffect(() => {\n    // 加载、更新或创建数据后 重新读取列表\n    reqParams.current = { ...requestParams };\n    reloadListsHandle();\n  }, [reloadListCount]);\n\n  useEffect(() => {\n    // useState才可以读取更多\n    setHasMoreState(hasMore.current);\n  }, [hasMore.current])\n\n  const loadMore = () => {\n    // 读取更多列表\n    if (hasMore.current && !loading) {\n      const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n      reqParams.current = { ...reqParams.current, page: current_page };\n      console.log(reqParams.current);\n      setSendExpressAccountRequestGetCount(sendExpressAccountRequestGetCount + 1);\n      setLoading(true);\n    } else {\n      console.log('Error state: hasMore is ', hasMore.current, ', loading is ', loading);\n    }\n  };\n\n  const reloadListsHandle = () => {\n    // 重新读取数据\n    reqParams.current = { ...reqParams.current, page: 0 };\n    // console.log(reqParams.current);\n    setSendExpressAccountData([]);\n    // setHasMore(true);\n    hasMore.current = true;\n    setLoading(false);\n    setTimeout(() => {\n      loadMore();\n      console.log('end loadMore...');\n    }, 100);\n  };\n\n  const judgeHasMore = resp => {\n    if (Object.keys(resp).includes('next')\n      && typeof resp.next === 'string'\n      && resp.next.length > 5) {\n      return true;\n    }\n    return false;\n  };\n\n  const sendExpressAccountGetResponse = resp => {\n    console.log('resp process...');\n    setLoading(false);\n    if (Object.keys(resp).includes('code')\n      && resp.code === 1000\n      && Object.keys(resp).includes('results')) {\n      setSendExpressAccountData(sendExpressAccountData.concat(resp.results));\n      // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n      hasMore.current = judgeHasMore(resp);\n    } else {\n      console.log('Error: get data...');\n    }\n  };\n\n  const itemDetailClick = (index) => {\n    // 打开详情编辑窗口\n    // console.log(sendExpressAccountData[index]);\n    let selObj = { ...sendExpressAccountData[index] };\n    console.log(selObj);\n    // 日期转 moment 时间\n    // selObj.end_time = moment(dateFormat(selObj.end_time), 'YYYY-MM-DD HH:mm:ss');\n    setSelectedObj(selObj);\n    setUpdateSendExpressAccountVisible(true);\n  };\n\n  const CurrentItemRendererComponent = ({ item, index }) => {\n    // 每一行渲染 的组件\n    return (\n      <ItemRendererComponent item={item} index={index} itemDetailClick={itemDetailClick} />\n    )\n  }\n\n  return (\n    <div>\n      <SendExpressAccountRequestGet requestCount={sendExpressAccountRequestGetCount}\n        reqParams={reqParams.current}\n        responseDataHandle={sendExpressAccountGetResponse}></SendExpressAccountRequestGet>\n      <ProductsList\n        productsData={sendExpressAccountData}\n        loadMore={loadMore}\n        hasMore={hasMorestate}\n        ItemRendererComponent={CurrentItemRendererComponent}></ProductsList>\n\n      <UpdateSendExpressAccount\n        visible={updateSendExpressAccountVisible}\n        setVisible={setUpdateSendExpressAccountVisible}\n        oldObj={selectedObj}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></UpdateSendExpressAccount>\n    </div>\n  );\n}\n\nSendExpressAccountList.defaultProps = {\n  reloadListCount: 1,\n  setReloadListCount: (addedNum) => { console.log(addedNum); },\n  requestParams: { page: 0 }\n}\n\nexport default SendExpressAccountList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './send_express_account_columns_label_config';\n\n// 显示查询条件组件\n\nconst SendExpressAccountQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default SendExpressAccountQueryParams;\n","import React, { useState, useRef } from 'react';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Link } from 'gatsby';\n\nimport CreateSendExpressAccount from './create_send_express_account';\nimport SendExpressAccountQueryDrawerForm from './send_express_account_query_form';\nimport SendExpressAccountList from './send_express_account_list';\nimport SendExpressAccountQueryParams from './send_express_account_query_params_display';\n// SendExpressAccount 入口组件\n\nconst SendExpressAccountComponent = () => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createSendExpressAccountVisible, setCreateSendExpressAccountVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            <Tooltip title=\"返回\">\n              <Link to=\"/logistic\"><LeftOutlined /></Link>\n            </Tooltip>\n            <h4>快递账号</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateSendExpressAccountVisible(true)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><SendExpressAccountQueryParams paramsObj={reqParams.current}></SendExpressAccountQueryParams></Col>\n      </Row>\n      <SendExpressAccountQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></SendExpressAccountQueryDrawerForm>\n\n      <SendExpressAccountList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n      ></SendExpressAccountList>\n\n      <CreateSendExpressAccount\n        visible={createSendExpressAccountVisible}\n        setVisible={setCreateSendExpressAccountVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateSendExpressAccount>\n    </div>\n  )\n};\n\nexport default SendExpressAccountComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport SendExpressAccountComponent from '../components/send_express_account';\n\nconst SendExpressAccountPage = () => (\n  <SiteLayout>\n    <SEO title=\"ExpressAccount\" />\n    <SendExpressAccountComponent></SendExpressAccountComponent>\n  </SiteLayout>\n)\n\nexport default SendExpressAccountPage;\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default React.forwardRef(ReloadOutlined);","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value}>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n}\n\nexport { CustomSelect };\n"],"sourceRoot":""}