{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./src/components/wx_store/channels/channels_columns_label_config.js","webpack:///./src/components/wx_store/channels/channels_requests.js","webpack:///./src/components/wx_store/channels/create_channels.js","webpack:///./src/components/wx_store/channels/channels_query_form.js","webpack:///./src/components/wx_store/channels/update_channels.js","webpack:///./src/components/wx_store/channels/channels_list.js","webpack:///./src/components/wx_store/channels/channels_query_params_display.js","webpack:///./src/components/wx_store/channels/index.js","webpack:///./src/pages/wxchannels.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./src/components/base_components/form_component.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack:///./src/components/base_components/select_component.js"],"names":["$export","S","isInteger","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","formKeySelectComponentsObj","options","value","label","formGetRequestParamsKeys","formInitialObj","imageKeyNames","apiLists","ItemRendererComponent","item","index","itemDetailClick","console","log","listsIndex","url","icon_url","productTitle","name","productEffects","front_desc","salePrice","clickDetailHandle","ChannelsRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","defaultProps","respObj","ChannelsRequestPost","concat","ChannelsRequestPut","id","ChannelsRequestDelete","CreateChannels","visible","setVisible","reloadListCount","setReloadListCount","channelsImageObj","useRef","oldObj","createCount","useState","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","closeModal","current","title","closable","footer","style","width","height","textAlign","maxImagesNum","imageKeyName","onChange","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","onFinish","values","upObj","cancelHandle","showDeleteButton","Object","keys","includes","code","message","error","val","booleanVal","ChannelsQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdateChannels","backgroundImgObj","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","useEffect","initImgAndForm","deleteHandle","updateFormObj","success","ChannelsList","requestParams","hasMore","hasMorestate","setHasMoreState","loading","setLoading","page","channelsData","setChannelsData","channelsRequestGetCount","setChannelsRequestGetCount","updateChannelsVisible","setUpdateChannelsVisible","selectedObj","setSelectedObj","reloadListsHandle","loadMore","current_page","Number","selObj","resp","results","next","length","judgeHasMore","productsData","addedNum","ChannelsQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","element","currentFactor","padding","ChannelsComponent","drawerVisible","setDrawerVisible","createChannelsVisible","setCreateChannelsVisible","span","onClick","shape","icon","ReloadOutlined","SearchOutlined","float","type","currentRequestParams","ChannelsManagePage","isObject","floor","Math","module","exports","it","isFinite","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","FormItem","formKey","rulesObj","passwordKeys","showLabelName","disabled","currentLabel","currentInputValue","Item","initialValue","rules","Password","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","e","clickMethod","err","CustomForm","form","Form","useForm","buttonIsLoading","setButtonIsLoading","setFieldsValue","layout","map","key","toString","htmlType","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","wrapperCol","props","ref","AntdIcon","assign","displayName","Option","Select","CustomSelect","obj","selectComponentWidth"],"mappings":"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","file":"component---src-pages-wxchannels-js-aeb71ca9f8aea854afd3.js","sourcesContent":["// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","import React from 'react';\n// import { DatePicker } from 'antd';\nimport { CustomSelect } from '../../base_components/select_component';\nimport ListsItem from '../../base_components/list_item';\n\n// Channels 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n  \"id\", \"name\", \"front_desc\", \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\", \"is_show\",\n  \"keywords\", \"level\", \"p_height\", \"parent_id\", \"show_index\", \"sort_order\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\"id\", \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\", \"level\"];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n  \"front_name\", \"icon\", \"img\", \"is_category\", \"is_channel\",\n  \"level\", \"show_index\", \"parent_id\"\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n  \"id\": \"ID\", \"name\": \"名称\", \"front_desc\": \"频道简介\", \"front_name\": \"频道名称\", \"icon\": \"图标\", \"img\": \"背景图片\", \"is_category\": \"是分类\",\n  \"is_channel\": \"是频道\", \"is_show\": \"显示\", \"keywords\": \"关键词\", \"level\": \"级别\", \"p_height\": \"背景图高\", \"parent_id\": \"上级ID\",\n  \"show_index\": \"显示序号\", \"sort_order\": \"排序序号\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\nconst SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]} />);\nconst formKeySelectComponentsObj = {\n  // exampleColumn: SelectExample,\n  'is_show': SelectBoolean,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [\"icon\", \"img\"];\n\n//  ~~~~~~ 表单get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\"name\"];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n  \"id\": 0, \"name\": \"\", \"front_desc\": \"\", \"front_name\": \"\", \"icon\": \"\", \"img\": \"\", \"is_category\": 0,\n  \"is_channel\": 1, \"is_show\": 1, \"keywords\": \"\", \"level\": \"L1\", \"p_height\": \"155\", \"parent_id\": 0,\n  \"show_index\": 0, \"sort_order\": 1, \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"\n}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyNames = ['icon', 'img'];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 1;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['channel-admin/v1/channels'];\n\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst ItemRendererComponent = ({ item, index, itemDetailClick }) => {\n  // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n  console.log(item);\n  return (<div>\n    <ListsItem\n      listsIndex={index}\n      url={item.icon_url}\n      productTitle={item.name}\n      productEffects={`频道简介: ${item.front_desc}`}\n      salePrice={0}\n      clickDetailHandle={itemDetailClick}\n    ></ListsItem>\n  </div>);\n};\n\nexport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n  apiLists,\n  ItemRendererComponent\n};\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './channels_columns_label_config';\n\n// Channels 的request请求\n\nconst ChannelsRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Channels Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst ChannelsRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Channels post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst ChannelsRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Channels put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst ChannelsRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Channels delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nChannelsRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  ChannelsRequestGet,\n  ChannelsRequestPost,\n  ChannelsRequestPut,\n  ChannelsRequestDelete\n};\n","import React, { useRef, useState } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ChannelsRequestPost } from './channels_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './channels_columns_label_config';\n\n// 新建 Modal\n\nconst CreateChannels = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n  const channelsImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    channelsImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const channelsImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    channelsImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...channelsImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"Channels 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            maxImagesNum={maxImagesNum}\n            imageKeyName={imageKeyNames[0]}\n            onChange={channelsImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <ChannelsRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></ChannelsRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreateChannels.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateChannels;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formGetRequestParamsKeys,\n  formInitialObj\n} from './channels_columns_label_config';\n// 列表查询 form\n\nconst ChannelsQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <Drawer\n      title=\"销售记录查询\"\n      width=\"100%\"\n      height=\"400px\"\n      placement=\"top\"\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={null}\n    >\n      <CustomForm\n        columns={formGetRequestParamsKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={false}\n        formInitialObj={formInitialObj}\n        initFormCount={initFormCount}\n      ></CustomForm>\n    </Drawer>\n  );\n};\n\nChannelsQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default ChannelsQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ChannelsRequestPut, ChannelsRequestDelete  } from './channels_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n} from './channels_columns_label_config';\n\n// 编辑 Channels\n\nconst UpdateChannels = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n\n  const channelsImageObj = useRef({});\n  const backgroundImgObj = useRef({});\n\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(false);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deleteChannels = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    // let channelsHomeImgs = [];\n    // const logoImgKey = imageKeyNames[0];\n    // const backgroundImgKey = imageKeyNames[1];\n\n    // for (let index = 1; index < 10; index++) {\n    //   const currentCosNameKey = imgKey + index;\n    //   const currentUrlKey = currentCosNameKey + '_url';\n    //   const currentCosName = oldObj[currentCosNameKey];\n    //   const currentUrl = oldObj[currentUrlKey];\n    //   if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n    //     channelsHomeImgs.push({\n    //       cosNameKey: currentCosNameKey,\n    //       cosName: currentCosName,\n    //       urlKey: currentUrlKey,\n    //       url: currentUrl\n    //     });\n    //   }\n    // }\n    // // console.log(channelsHomeImgs);\n    // setOldChannelsHomeImages(channelsHomeImgs);   // 更新图片列表\n  }\n\n  const channelsLogoImageUploaded = (imagesObj) => {\n    // logo图上传后操作\n    channelsImageObj.current = imagesObj;\n  }\n\n  const channelsBackgroundImageUploaded = (imagesObj) => {\n    // logo图上传后操作\n    backgroundImgObj.current = imagesObj;\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...channelsImageObj.current, ...backgroundImgObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible}\n      title=\"Channels\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <h4>Logo</h4>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[0]}\n          oldObj={oldObj}\n          onChange={channelsLogoImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n      <h4>背景图片</h4>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[1]}\n          oldObj={oldObj}\n          onChange={channelsBackgroundImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deleteChannels}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <ChannelsRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></ChannelsRequestPut>\n      <ChannelsRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></ChannelsRequestDelete>\n    </Modal>\n  )\n}\n\nUpdateChannels.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdateChannels;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ProductsList from '../../base_components/products_list';\nimport { ChannelsRequestGet } from './channels_requests';\n// import CreateChannels from './create_channels';\nimport UpdateChannels from './update_channels';\nimport { ItemRendererComponent } from './channels_columns_label_config';\n\n// 列表编辑 页面\n\nconst ChannelsList = ({ reloadListCount, setReloadListCount, requestParams }) => {\n  const hasMore = useRef(true);\n  const [hasMorestate, setHasMoreState] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const reqParams = useRef({ page: 0 });\n\n  const [channelsData, setChannelsData] = useState([]);\n  const [channelsRequestGetCount, setChannelsRequestGetCount] = useState(0);\n\n  // const [createChannelsVisible, setCreateChannelsVisible] = useState(false);\n  const [updateChannelsVisible, setUpdateChannelsVisible] = useState(false);\n  const [selectedObj, setSelectedObj] = useState({});\n\n  useEffect(() => {\n    // 加载、更新或创建数据后 重新读取列表\n    reqParams.current = { ...requestParams };\n    reloadListsHandle();\n  }, [reloadListCount]);\n\n  useEffect(() => {\n    // useState才可以读取更多\n    setHasMoreState(hasMore.current);\n  }, [hasMore.current])\n\n  const loadMore = () => {\n    // 读取更多列表\n    if (hasMore.current && !loading) {\n      const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n      reqParams.current = { ...reqParams.current, page: current_page };\n      console.log(reqParams.current);\n      setChannelsRequestGetCount(channelsRequestGetCount + 1);\n      setLoading(true);\n    } else {\n      console.log('Error state: hasMore is ', hasMore.current, ', loading is ', loading);\n    }\n  };\n\n  const reloadListsHandle = () => {\n    // 重新读取数据\n    reqParams.current = { ...reqParams.current, page: 0 };\n    // console.log(reqParams.current);\n    setChannelsData([]);\n    // setHasMore(true);\n    hasMore.current = true;\n    setLoading(false);\n    setTimeout(() => {\n      loadMore();\n      console.log('end loadMore...');\n    }, 100);\n  };\n\n  const judgeHasMore = resp => {\n    if (Object.keys(resp).includes('next')\n      && typeof resp.next === 'string'\n      && resp.next.length > 5) {\n      return true;\n    }\n    return false;\n  };\n\n  const channelsGetResponse = resp => {\n    console.log('resp process...');\n    setLoading(false);\n    if (Object.keys(resp).includes('code')\n      && resp.code === 1000\n      && Object.keys(resp).includes('results')) {\n      setChannelsData(channelsData.concat(resp.results));\n      // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n      hasMore.current = judgeHasMore(resp);\n    } else {\n      console.log('Error: get data...');\n    }\n  };\n\n  const itemDetailClick = (index) => {\n    // 打开详情编辑窗口\n    // console.log(channelsData[index]);\n    let selObj = { ...channelsData[index] };\n    console.log(selObj);\n    // 日期转 moment 时间\n    // selObj.end_time = moment(dateFormat(selObj.end_time), 'YYYY-MM-DD HH:mm:ss');\n    setSelectedObj(selObj);\n    setUpdateChannelsVisible(true);\n  };\n\n  const CurrentItemRendererComponent = ({ item, index }) => {\n    // 每一行渲染 的组件\n    return (\n      <ItemRendererComponent item={item} index={index} itemDetailClick={itemDetailClick} />\n    )\n  }\n\n  return (\n    <div>\n      <ChannelsRequestGet requestCount={channelsRequestGetCount}\n        reqParams={reqParams.current}\n        responseDataHandle={channelsGetResponse}></ChannelsRequestGet>\n      <ProductsList\n        productsData={channelsData}\n        loadMore={loadMore}\n        hasMore={hasMorestate}\n        ItemRendererComponent={CurrentItemRendererComponent}></ProductsList>\n\n      <UpdateChannels\n        visible={updateChannelsVisible}\n        setVisible={setUpdateChannelsVisible}\n        oldObj={selectedObj}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></UpdateChannels>\n    </div>\n  );\n}\n\nChannelsList.defaultProps = {\n  reloadListCount: 1,\n  setReloadListCount: (addedNum) => { console.log(addedNum); },\n  requestParams: { page: 0 }\n}\n\nexport default ChannelsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './channels_columns_label_config';\n\n// 显示查询条件组件\n\nconst ChannelsQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default ChannelsQueryParams;\n","import React, { useState, useRef } from 'react';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreateChannels from './create_channels';\nimport ChannelsQueryDrawerForm from './channels_query_form';\nimport ChannelsList from './channels_list';\nimport ChannelsQueryParams from './channels_query_params_display';\n// Channels 入口组件\n\nconst ChannelsComponent = () => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createChannelsVisible, setCreateChannelsVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            <h4>Channels</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateChannelsVisible(true)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><ChannelsQueryParams paramsObj={reqParams.current}></ChannelsQueryParams></Col>\n      </Row>\n      <ChannelsQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></ChannelsQueryDrawerForm>\n\n      <ChannelsList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n      ></ChannelsList>\n\n      <CreateChannels\n        visible={createChannelsVisible}\n        setVisible={setCreateChannelsVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateChannels>\n    </div>\n  )\n};\n\nexport default ChannelsComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport ChannelsComponent from '../components/wx_store/channels';\n\nconst ChannelsManagePage = () => (\n  <SiteLayout>\n    <SEO title=\"WX Channels\" />\n    <ChannelsComponent></ChannelsComponent>\n  </SiteLayout>\n)\n\nexport default ChannelsManagePage;\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default React.forwardRef(ReloadOutlined);","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value}>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n}\n\nexport { CustomSelect };\n"],"sourceRoot":""}