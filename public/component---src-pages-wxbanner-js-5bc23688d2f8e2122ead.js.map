{"version":3,"sources":["webpack:///./src/components/wx_store/banners/banners_columns_label_config.jsx","webpack:///./src/components/wx_store/banners/banners_requests.jsx","webpack:///./src/components/wx_store/banners/create_banners.jsx","webpack:///./src/components/wx_store/banners/banners_query_form.jsx","webpack:///./src/components/wx_store/banners/update_banners.jsx","webpack:///./src/components/wx_store/banners/banners_list.jsx","webpack:///./src/components/wx_store/banners/banners_query_params_display.jsx","webpack:///./src/components/wx_store/banners/index.jsx","webpack:///./src/pages/wxbanner.js"],"names":["formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectBannerEnabled","options","value","label","SelectBannerLinkType","SelectIsDelete","formKeySelectComponentsObj","enabled","end_time","showTime","format","is_delete","link_type","formKeysHandleButtonObj","setOptModalState","goods_id","buttonTips","clickMethod","formGetRequestParamsKeys","formInitialObj","formRulesList","required","message","imageKeyNames","apiLists","actionButtons","item","setVisible","setSelectedObj","selectButtonOnClick","btnList","onClick","type","push","renderItem","visible","updateItemObj","id","actions","img","image_url","avatar","title","description","moment","unix","content","explains","customRanderItem","BannersRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","defaultProps","respObj","console","log","BannersRequestPost","concat","BannersRequestPut","BannersRequestDelete","CreateBanners","reloadListCount","setReloadListCount","bannersImageObj","useRef","oldObj","handleCount","useState","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","useEffect","optModalState","updateFormObj","setUpdateFormObj","closeModal","current","closable","footer","style","width","height","textAlign","maxImagesNum","imageKeyName","onChange","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","formKeysItemButtonObj","onFinish","values","upObj","parseInt","cancelHandle","showDeleteButton","rulesObj","modalState","setModalState","selectHandle","goodsObj","Object","keys","includes","code","error","val","booleanVal","BannersQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdateBanners","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","endTimeStamp","endTimeMoment","deleteHandle","success","BannersList","requestParams","hasMoreState","setHasMoreState","loading","setLoading","requesting","setRequesting","page","bannersData","setBannersData","bannersRequestGetCount","setBannersRequestGetCount","selectedObj","loadMore","reloadListsHandle","current_page","Number","isInteger","resp","results","next","length","judgeHasMore","header","listData","randerItem","setSelectedItem","hasMore","addedNum","BannersQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","element","currentFactor","padding","BannersComponent","drawerVisible","setDrawerVisible","createBannersVisible","setCreateBannersVisible","span","shape","icon","ReloadOutlined","SearchOutlined","float","currentRequestParams","StoreManagePage"],"mappings":"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","file":"component---src-pages-wxbanner-js-5bc23688d2f8e2122ead.js","sourcesContent":["import React from 'react';\nimport { Button, DatePicker } from 'antd';\nimport moment from 'moment';\nimport { CustomSelect } from '../../base_components/select_component';\n// import { expressCompanyRequestGet } from './custom_select_requests';\nimport { customRanderItem } from '../../base_components/lists/custom_list';\n\n// Banners 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n    \"id\", \"enabled\", \"end_time\", \"goods_id\", \"image\", \"is_delete\",\n    \"link\", \"link_type\", \"sort_order\", \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\n    \"id\", \"image\", \"goods_id\", \"handle_staff_id\", \"add_time\", \"update_time\"\n];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\n    \"image\", \"enabled\", \"link\", \"link_type\", \"handle_staff_id\"\n];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n    \"id\": \"ID\", \"enabled\": \"可编辑\", \"end_time\": \"结束时间\", \"goods_id\": \"商品ID\",\n    \"image\": \"图片\", \"is_delete\": \"不显示\", \"link\": \"链接\", \"link_type\": \"链接类型\", \"sort_order\": \"排序次序\", \n    \"handle_staff_id\": \"编辑人员\", \"explains\": \"说明\", \"add_time\": \"创建日期\", \"update_time\": \"更新日期\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectBannerEnabled = (<CustomSelect\n    options={[{ value: 0, label: '不可编辑' }, { value: 1, label: '可编辑' }]} />);\nconst SelectBannerLinkType = (<CustomSelect\n    options={[{ value: 0, label: '无效' }, { value: 1, label: '有效' }]} />);\nconst SelectIsDelete = (<CustomSelect \n    options={[{ value: 0, label: '否'}, { value: 1, label: '是'}]} />)\nconst SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\nconst formKeySelectComponentsObj = {\n    enabled: SelectBannerEnabled,\n    end_time: SelectEndTime,\n    is_delete: SelectIsDelete,\n    link_type: SelectBannerLinkType,\n};\n\n// ~~~~~~ 表单自定义操作按钮, 根据实际添加 ~~~~~~\nconst formKeysHandleButtonObj = (setOptModalState) => {\n    return {\n        goods_id: {buttonTips: '选择商品', clickMethod: () => setOptModalState(1)},\n    };\n};\n\n// ~~~~~~ 表单是图片列, 根据实际添加(废弃, 改用 imageKeyNames) ~~~~~~\n// const formKeysIsImages = [];\n\n// ~~~~~~ 表单 get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n    \"id\": 0, \"enabled\": 0, \"goods_id\": 0, \"end_time\": \"\", \"is_delete\": 0, \"link\": \"\", \"link_type\": 0,\n    \"sort_order\": 0, \"explains\": \"\", \"add_time\": \"\", \"update_time\": \"\"\n}\n\n// ~~~~~~ 表单值规则, 根据实际添加 ~~~~~~\n// formRulesList = {formKey: [{require: true, message: 'Please input Password!',}, ]};\nconst formRulesList = {\"password\": [{required: true, message: 'Please input Password!',}, ], }\n\n// ~~~~~~ 图片列名称, 根据实际修改(多张图片去掉最后序号数字) ~~~~~~\nconst imageKeyNames = ['image'];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 1;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['banner-admin/v1/banners', ];\n\nconst actionButtons = (item, setVisible, setSelectedObj, selectButtonOnClick) => {\n    const onClickInfo = () => {\n        setSelectedObj(item);\n        setVisible(2);\n    }\n    const btnList = [\n        <Button onClick={onClickInfo} type=\"link\">详情</Button>,\n    ];\n    if (selectButtonOnClick) {\n        btnList.push(<Button onClick={() => selectButtonOnClick(item)} type=\"link\">选择</Button>)\n    }\n    return btnList;\n}\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst renderItem = (item, setSelectedObj, selectButtonOnClick, setVisible, visible) => {\n    // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n    const updateItemObj = {\n        id: item.id,\n        actions: actionButtons(item, setVisible, setSelectedObj, selectButtonOnClick),\n        img: item.image_url,\n        avatar: '',\n        title: `商品ID: ${item.goods_id}`,\n        description: `结束时间: ${moment.unix(item.end_time).format('YYYY-MM-DD HH:mm:ss')}`,\n        content: item.explains,\n    };\n    return customRanderItem(updateItemObj, 180);\n};\n\nconst judgeHasMore = (resp) => {\n    if (Object.keys(resp).includes('next')\n        && typeof resp.next === 'string'\n        && resp.next.length > 5) {\n        return true;\n    }\n    return false;\n};\n\nexport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formKeysIsImages,\n    formGetRequestParamsKeys,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum,\n    apiLists,\n    renderItem,\n    judgeHasMore\n};\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { apiLists } from './banners_columns_label_config';\n\n// Banners 的request请求\n\nconst BannersRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // Banners Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nBannersRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst BannersRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // Banners post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nBannersRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst BannersRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // Banners put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nBannersRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst BannersRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // Banners delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nBannersRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  BannersRequestGet,\n  BannersRequestPost,\n  BannersRequestPut,\n  BannersRequestDelete\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\nimport moment from 'moment';\n\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { BannersRequestPost } from './banners_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum\n} from './banners_columns_label_config';\n\n// 新建 Modal\n\nconst CreateBanners = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n    const bannersImageObj = useRef({});\n    const oldObj = useRef({handleCount: 0});\n\n    const [initFormCount, setInitFormCount] = useState(0);\n\n    const [postRequestCount, setPostRequestCount] = useState(0);\n    const reqObject = useRef({});\n\n    useEffect(() => {\n        setInitFormCount(initFormCount + 1);  // 初始化表格\n    }, [visible]);\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    const postResponseDataHandle = (respObj) => {\n        // 表单提交后的操作\n        if (\n            Object.keys(respObj).includes('code')\n            && respObj.code === 1000\n        ){\n            closeModal();\n            setReloadListCount(reloadListCount + 1)\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const closeModal = () => {\n        // 初始化表格和图片 并关闭Modal\n        oldObj.current = {handleCount: oldObj.current.handleCount + 1};  // 初始化图片\n        setVisible(0);\n    }\n\n    const bannersImageUploaded = (imagesObj) => {\n        // 图片上传后操作\n        bannersImageObj.current = { ...imagesObj };\n        console.log(imagesObj);\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...bannersImageObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        console.log(upObj.end_time);\n        reqObject.current = upObj;\n        setPostRequestCount(postRequestCount + 1);\n    }\n\n    return (<>\n        <Modal visible={visible === 1}\n            title=\"Banners 新建\"\n            closable={false}\n            footer={null}\n        >\n            <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n                <StsUploadImagesList\n                    oldObj={oldObj.current}\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    onChange={bannersImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={formNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={closeModal}\n                showDeleteButton={false}\n                formInitialObj={formInitialObj}\n                initFormCount={initFormCount}\n                rulesObj={formRulesList}\n                updateFormObj={updateFormObj}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <BannersRequestPost\n                requestCount={postRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={postResponseDataHandle}\n            ></BannersRequestPost>\n        </Modal>\n    </>)\n}\n\nCreateBanners.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreateBanners;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    formGetRequestParamsKeys,\n    formInitialObj\n} from './banners_columns_label_config';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\n// 列表查询 form\n\nconst BannersQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  // 选择 modal\n  const [optModalState, setOptModalState] = useState(0);\n  const [updateFormObj, setUpdateFormObj] = useState({});\n  const selectGoodsHandle = (goodsObj) => {\n      // 选择商品操作\n      console.log(goodsObj);\n      setUpdateFormObj({\n          goods_id: goodsObj.id,\n      });\n      setOptModalState(0);\n  };\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <>\n      <Drawer\n        title=\"Banners查询\"\n        width=\"100%\"\n        height=\"400px\"\n        placement=\"top\"\n        onClose={closeDrawer}\n        visible={visible}\n        bodyStyle={{ paddingBottom: 80 }}\n        footer={null}\n      >\n        <CustomForm\n          columns={formGetRequestParamsKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n          onFinish={onFinish}\n          cancelHandle={() => setVisible(0)}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n          updateFormObj={updateFormObj}\n        ></CustomForm>\n      </Drawer>\n\n      <GoodsOptModal\n          modalState={optModalState === 1}\n          setModalState={setOptModalState}\n          selectHandle={selectGoodsHandle}\n      ></GoodsOptModal>\n    </>\n  );\n};\n\nBannersQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default BannersQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\nimport moment from 'moment';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { BannersRequestPut, BannersRequestDelete  } from './banners_requests';\nimport { CustomForm } from '../../base_components/form_component';\nimport { GoodsOptModal } from '../../modals/goods_opt';\n\nimport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysHandleButtonObj,\n    // formInitialObj,\n    formRulesList,\n    imageKeyNames,\n    maxImagesNum\n} from './banners_columns_label_config';\n\n// 编辑 Banners\n\nconst UpdateBanners = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n\n    const bannersImageObj = useRef({});\n\n    const [putRequestCount, setPutRequestCount] = useState(0);\n    const reqObject = useRef({});\n    const putResponseDataHandle = (respObj) => {\n        if (Object.keys(respObj).includes('code') && respObj.code === 1000) {\n            message.success('修改成功');\n            setReloadListCount(reloadListCount + 1);\n            setVisible(0);\n        } else {\n            message.error('网络错误...');\n        }\n    }\n\n    const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n    const deleteBanners = () => {\n        // 删除当前对象\n        setDeleteRequestCount(deleteRequestCount + 1);\n        setReloadListCount(reloadListCount + 1);\n    };\n\n    // 选择 modal\n    const [optModalState, setOptModalState] = useState(0);\n    const [updateFormObj, setUpdateFormObj] = useState({});\n    const selectGoodsHandle = (goodsObj) => {\n        // 选择商品操作\n        console.log(goodsObj);\n        setUpdateFormObj({\n            goods_id: goodsObj.id,\n        });\n        setOptModalState(0);\n    };\n\n    useEffect(() => {\n        if (visible > 0) {\n            console.log(oldObj);\n            setUpdateFormObj({id: -1});\n            let endTimeStamp = oldObj.end_time ? parseInt(oldObj.end_time) : 0;\n            if (endTimeStamp < 10000000000) {\n                endTimeStamp = parseInt(endTimeStamp * 1000);\n            }\n            const endTimeMoment = moment(endTimeStamp);\n            setUpdateFormObj({ ...oldObj, end_time: endTimeMoment });  // 给表格赋值\n        }\n    }, [visible, oldObj]);\n\n    const bannersImageUploaded = (imagesObj) => {\n        // 轮播图上传后操作\n        bannersImageObj.current = imagesObj;\n        console.log(imagesObj);\n    }\n\n    const onFinish = (values) => {\n        // 提交表单\n        let upObj = { ...values, ...bannersImageObj.current };\n        console.log(upObj);\n        // 时间转时间戳\n        upObj.end_time = parseInt(moment.unix(upObj.end_time).unix() / 1000);  // 时间转时间戳\n        console.log(upObj.end_time);\n        reqObject.current = upObj;\n        setPutRequestCount(putRequestCount + 1);\n    }\n\n    return (\n        <Modal visible={visible === 2}\n            title=\"Banners\"\n            closable={false}\n            footer={null}\n        >\n            <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n                <StsUploadImagesList\n                    maxImagesNum={maxImagesNum}\n                    imageKeyName={imageKeyNames[0]}\n                    oldObj={oldObj}\n                    onChange={bannersImageUploaded}\n                ></StsUploadImagesList>\n            </div>\n            <Divider></Divider>\n\n            <CustomForm\n                columns={formKeys}\n                disabledKeys={formDisabledKeys}\n                notShowKeys={formNotShowKeys}\n                formKeyLabelObj={formKeysLabelsObj}\n                formKeySelectComponentsObj={formKeySelectComponentsObj}\n                formKeysItemButtonObj={formKeysHandleButtonObj(setOptModalState)}\n                onFinish={onFinish}\n                cancelHandle={() => setVisible(0)}\n                showDeleteButton={true}\n                deleteHandle={deleteBanners}\n                updateFormObj={updateFormObj}\n                rulesObj={formRulesList}\n            ></CustomForm>\n\n            <GoodsOptModal\n                modalState={optModalState === 1}\n                setModalState={setOptModalState}\n                selectHandle={selectGoodsHandle}\n            ></GoodsOptModal>\n\n            <BannersRequestPut\n                requestCount={putRequestCount}\n                reqObject={reqObject.current}\n                responseDataHandle={putResponseDataHandle}\n                id={oldObj.id}></BannersRequestPut>\n            <BannersRequestDelete\n                requestCount={deleteRequestCount}\n                responseDataHandle={(respObj) => setVisible(0)}\n                id={oldObj.id}></BannersRequestDelete>\n        </Modal>\n    )\n}\n\nUpdateBanners.defaultProps = {\n    visible: false,\n    setVisible: (val) => console.log(val),\n    oldObj: {}\n}\n\nexport default UpdateBanners;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { CustomList } from '../../base_components/lists/custom_list';\nimport { BannersRequestGet } from './banners_requests';\nimport UpdateBanners from './update_banners';\nimport { renderItem, judgeHasMore } from './banners_columns_label_config';\nimport { LoadMoreButton } from '../../base_components/load_more_button_conpoment';\n\n// 列表编辑 页面\n\nconst BannersList = ({ reloadListCount, setReloadListCount, requestParams, selectButtonOnClick }) => {\n\n    const [visible, setVisible] = useState(0);\n\n    const [hasMoreState, setHasMoreState] = useState(true);\n    const [loading, setLoading] = useState(false);\n    // 设置为true 开始request请求, 解决useState异步\n    const [requesting, setRequesting] = useState(false);\n    const reqParams = useRef({ page: 0 });\n\n    const [bannersData, setBannersData] = useState([]);\n    const [bannersRequestGetCount, setBannersRequestGetCount] = useState(0);\n\n    const [selectedObj, setSelectedObj] = useState({});\n\n    useEffect(() => {\n        if (hasMoreState && !loading && requesting) {\n            // 使用useEffect 触发request 解决 useState 异步\n            loadMore();\n            setRequesting(false);\n        }\n    }, [requesting, hasMoreState, loading])\n\n    useEffect(() => {\n        // 加载、更新或创建数据后 重新读取列表\n        reqParams.current = { ...requestParams };\n        reloadListsHandle();\n    }, [reloadListCount]);\n\n    const loadMore = () => {\n        // 读取更多列表\n        if (hasMoreState && !loading) {\n            setLoading(true);\n            setHasMoreState(false);\n            const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n            reqParams.current = { ...reqParams.current, page: current_page };\n            console.log(reqParams.current);\n            setBannersRequestGetCount(bannersRequestGetCount + 1);\n        } else {\n            console.log('Error state: hasMore is ', hasMoreState, ', loading is ', loading);\n        }\n    };\n\n    const reloadListsHandle = () => {\n        // 重新读取数据\n        reqParams.current = { ...reqParams.current, page: 0 };\n        // console.log(reqParams.current);\n        setBannersData([]);\n        setHasMoreState(true);\n        setLoading(false);\n        setRequesting(true);    // useEffect 触发request请求，解决useState异步\n    };\n\n    const bannersGetResponse = (resp) => {\n        // console.log('resp process...');\n        setLoading(false);\n        if (Object.keys(resp).includes('code')\n            && resp.code === 1000\n            && Object.keys(resp).includes('results')\n        ) {\n            setBannersData(bannersData.concat(resp.results));\n            setHasMoreState(judgeHasMore(resp));   // 判断是否还有更多\n        } else {\n            console.log('Error: get data...');\n        }\n    };\n\n    return (\n        <div>\n            <BannersRequestGet requestCount={bannersRequestGetCount}\n                reqParams={reqParams.current}\n                responseDataHandle={bannersGetResponse}></BannersRequestGet>\n            <CustomList\n                header=\"Banners List\"\n                listData={bannersData}\n                visible={visible}\n                setVisible={setVisible}\n                randerItem={renderItem}\n                setSelectedItem={setSelectedObj}\n                selectButtonOnClick={selectButtonOnClick}\n            ></CustomList>\n\n            <UpdateBanners\n                visible={visible}\n                setVisible={setVisible}\n                oldObj={selectedObj}\n                reloadListCount={reloadListCount}\n                setReloadListCount={setReloadListCount}\n            ></UpdateBanners>\n\n            <LoadMoreButton hasMore={hasMoreState} onClick={loadMore}></LoadMoreButton>\n        </div>\n    );\n}\n\nBannersList.defaultProps = {\n    reloadListCount: 1,\n    setReloadListCount: (addedNum) => { console.log(addedNum); },\n    requestParams: { page: 0 },\n    selectButtonOnClick: null,\n}\n\nexport default BannersList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './banners_columns_label_config';\n\n// 显示查询条件组件\n\nconst BannersQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default BannersQueryParams;\n","import React, { useState, useRef } from 'react';\n// import { navigate, Link } from 'gatsby';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined, LeftOutlined } from '@ant-design/icons';\n\nimport CreateBanners from './create_banners';\nimport BannersQueryDrawerForm from './banners_query_form';\nimport BannersList from './banners_list';\nimport BannersQueryParams from './banners_query_params_display';\n// Banners 入口组件\n\nconst BannersComponent = ({ selectButtonOnClick = null }) => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createBannersVisible, setCreateBannersVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    // console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <Space>\n            {/* <Tooltip title=\"返回\">\n              <Link to=\"/logistic\"><LeftOutlined /></Link>\n            </Tooltip> */}\n            <h4>Banners</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            {/* <Button style={{ float: 'right' }} type=\"link\" onClick={() => navigate('/sendexpressaccount')}>快递帐号设置</Button> */}\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateBannersVisible(1)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><BannersQueryParams paramsObj={reqParams.current}></BannersQueryParams></Col>\n      </Row>\n      <BannersQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></BannersQueryDrawerForm>\n\n      <BannersList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n        selectButtonOnClick={selectButtonOnClick}\n      ></BannersList>\n\n      <CreateBanners\n        visible={createBannersVisible}\n        setVisible={setCreateBannersVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreateBanners>\n    </div>\n  )\n};\n\nexport default BannersComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport BannersList from '../components/wx_store/banners';\n\nconst StoreManagePage = () => (\n  <SiteLayout>\n    <SEO title=\"WX Banner\" />\n    <BannersList></BannersList>\n  </SiteLayout>\n)\n\nexport default StoreManagePage;\n"],"sourceRoot":""}