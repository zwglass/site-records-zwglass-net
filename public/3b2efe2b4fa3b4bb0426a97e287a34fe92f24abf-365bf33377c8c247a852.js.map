{"version":3,"file":"3b2efe2b4fa3b4bb0426a97e287a34fe92f24abf-365bf33377c8c247a852.js","mappings":"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","sources":["webpack://client_admin_v102/./src/components/base_components/images_list.js","webpack://client_admin_v102/./node_modules/@ant-design/icons-svg/es/asn/ArrowUpOutlined.js","webpack://client_admin_v102/./node_modules/@ant-design/icons/es/icons/ArrowUpOutlined.js","webpack://client_admin_v102/./node_modules/@ant-design/icons-svg/es/asn/ArrowDownOutlined.js","webpack://client_admin_v102/./node_modules/@ant-design/icons/es/icons/ArrowDownOutlined.js","webpack://client_admin_v102/./src/components/base_components/images_list_handle.js","webpack://client_admin_v102/./src/components/upload_files/sts_upload_files_list.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { List, Button, Tooltip } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport ImageZoom from './image_zoom';\n\n// 显示图片列表\nconst ImagesList = ({ imagesList, setImagesList, deletedImageHandle, imageKeyName }) => {\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  // url:必须; fileName:必须;\n  const deletedColumnKeys = useRef([]);\n\n  const updateDeletedColumnKeys = (culumn_key) => {\n    // 更新保存删除的列 数组\n    let has_key = false;\n    for (let index = 0; index < deletedColumnKeys.length; index++) {\n      const element = deletedColumnKeys[index];\n      if (element === culumn_key) {\n        has_key = true;\n      }\n    }\n    let updatedDeletedColumnKeys = [].concat(deletedColumnKeys.current);\n    if (!has_key) {\n      updatedDeletedColumnKeys.push(culumn_key);\n      deletedColumnKeys.current = updatedDeletedColumnKeys;\n    }\n    deletedImageHandle(updatedDeletedColumnKeys);\n\n    // let editedImagesObj = {};\n    // // 更新 editedImagesObj\n    // for (let index = 0; index < imagesList.length; index++) {\n    //   const element = imagesList[index];\n    //   if (element.cos_name.length > 10) {\n    //     editedImagesObj[element.culumn_key] = element.cos_name;\n    //   }\n    // }\n    // const editedImagesObjKeys = Object.keys(editedImagesObj);\n    // let deletedKeys = deletedColumnKeys.current;\n    // for (let index = 0; index < deletedKeys.length; index++) {\n    //   const delKey = deletedKeys[index];\n    //   if (!editedImagesObjKeys.includes(delKey)) {\n    //     editedImagesObj[delKey] = '';\n    //   }\n    // }\n  }\n\n  const updateCulumnKey = (deletedImages, column_key) => {\n    // 删除图片后更新column_key, 大于 deleteIndex 减 1\n    console.log(column_key);\n    let deletedColumnNum = parseInt(column_key.replace(imageKeyName, ''));\n    console.log(deletedColumnNum);\n    if (!deletedColumnNum) {\n      return deletedImages;\n    }\n    let updatedImagesList = [];\n    for (let index = 0; index < deletedImages.length; index++) {\n      let currentObj = { ...deletedImages[index] };\n      console.log(currentObj);\n      let currentColumnNum = currentObj.column_key ? currentObj.column_key : '0';\n      // console.log(currentColumnNum);\n      currentColumnNum = parseInt(currentColumnNum.replace(imageKeyName, ''));\n      if (currentColumnNum > deletedColumnNum) {\n        // console.log(currentColumnNum);\n        currentObj.column_key = imageKeyName + deletedColumnNum;\n        deletedColumnNum = deletedColumnNum + 1;\n      }\n      console.log(currentObj);\n      updatedImagesList.push(currentObj);\n    }\n    return updatedImagesList;\n  }\n\n  const deleteCurrentImage = (column_key) => {\n    // 删除一张图片\n    const deepcopyImages = [].concat(imagesList);\n    for (let index = 0; index < imagesList.length; index++) {\n      const element = imagesList[index];\n      if (element.column_key === column_key) {\n        deepcopyImages.splice(index, 1);\n      }\n    }\n    console.log(updateCulumnKey(deepcopyImages, column_key));\n    setImagesList(updateCulumnKey(deepcopyImages, column_key));\n    \n    updateDeletedColumnKeys(column_key);  // 更新保存删除的列 数组\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      {imagesList.length === 0 ? null : (\n        <List itemLayout=\"vertical\" size=\"large\" dataSource={imagesList}\n          renderItem={(item, index) => (\n            <List.Item\n              key={index.toString()}\n              actions={[\n                <Tooltip title=\"删除\"><Button onClick={() => deleteCurrentImage(item.column_key)} shape=\"circle\" icon={<DeleteOutlined />} /></Tooltip>,\n              ]}\n            ><List.Item.Meta\n              title={item.file_name}\n              avatar={<ImageZoom src={item.url}></ImageZoom>} />\n            </List.Item>\n          )}\n        ></List>\n      )}\n    </div>\n  );\n}\n\nImagesList.defaultProps = {\n  imagesList: [],\n  setImagesList: index => { console.log(index); },\n  deletedImageHandle: deletedColumnKeys => console.log(deletedColumnKeys),\n  imageKeyName: 'image_cos_name'\n};\n\nexport { ImagesList };\n","// This icon file is generated automatically.\nvar ArrowUpOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M868 545.5L536.1 163a31.96 31.96 0 00-48.3 0L156 545.5a7.97 7.97 0 006 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z\"\n      }\n    }]\n  },\n  \"name\": \"arrow-up\",\n  \"theme\": \"outlined\"\n};\nexport default ArrowUpOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\"; // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ArrowUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowUpOutlined = function ArrowUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowUpOutlinedSvg\n  }));\n};\n\nArrowUpOutlined.displayName = 'ArrowUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(ArrowUpOutlined);","// This icon file is generated automatically.\nvar ArrowDownOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M862 465.3h-81c-4.6 0-9 2-12.1 5.5L550 723.1V160c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v563.1L255.1 470.8c-3-3.5-7.4-5.5-12.1-5.5h-81c-6.8 0-10.5 8.1-6 13.2L487.9 861a31.96 31.96 0 0048.3 0L868 478.5c4.5-5.2.8-13.2-6-13.2z\"\n      }\n    }]\n  },\n  \"name\": \"arrow-down\",\n  \"theme\": \"outlined\"\n};\nexport default ArrowDownOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\"; // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ArrowDownOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowDownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowDownOutlined = function ArrowDownOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowDownOutlinedSvg\n  }));\n};\n\nArrowDownOutlined.displayName = 'ArrowDownOutlined';\nexport default /*#__PURE__*/React.forwardRef(ArrowDownOutlined);","import React, { useRef } from 'react';\nimport { List, Button, Tooltip } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ImageZoom from './image_zoom';\n\n// 显示图片列表\nconst ImagesListHandle = ({ imagesList, setImagesList }) => {\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  // url:必须; fileName:必须;\n\n  const deleteCurrentImage = (index) => {\n    // 删除一张图片\n    const deepcopyImages = [].concat(imagesList);\n    deepcopyImages.splice(index, 1);\n    console.log(deepcopyImages);\n    setImagesList(deepcopyImages);\n  }\n\n  const moveImageObjIndex = (index, moveNum = 1) => {\n    // 上下移动图片\n    let copyImages = [].concat(imagesList);\n    const moveImgObj = copyImages.splice(index, 1)[0];\n    // console.log(moveImgObj);\n    const insertIndex = index + moveNum;\n    if (insertIndex < 0 || insertIndex > copyImages.length) {\n      console.log('Insert index Error', insertIndex);\n      return;\n    }\n    copyImages.splice(insertIndex, 0, moveImgObj);\n    // console.log(copyImages);\n    setImagesList(copyImages);\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      {imagesList.length === 0 ? null : (\n        <List itemLayout=\"vertical\" size=\"large\" dataSource={imagesList}\n          renderItem={(item, index) => (\n            <List.Item\n              key={index.toString()}\n              actions={[\n                <Tooltip title=\"上移\"><Button onClick={() => moveImageObjIndex(index, -1)} shape=\"circle\" icon={<ArrowUpOutlined />} /></Tooltip>,\n                <Tooltip title=\"下移\"><Button onClick={() => moveImageObjIndex(index)} shape=\"circle\" icon={<ArrowDownOutlined />} /></Tooltip>,\n                <Tooltip title=\"删除\"><Button onClick={() => deleteCurrentImage(index)} shape=\"circle\" icon={<DeleteOutlined />} /></Tooltip>,\n              ]}\n            ><List.Item.Meta\n              title={item.file_name}\n              avatar={<ImageZoom src={item.url}></ImageZoom>} />\n            </List.Item>\n          )}\n        ></List>\n      )}\n    </div>\n  );\n}\n\nImagesListHandle.defaultProps = {\n  imagesList: [],\n  setImagesList: index => { console.log(index); }\n};\n\nexport { ImagesListHandle };\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, Button, message, Divider, Spin, Space } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\n// import customConfig from '../../custom_config';\n// import Cos from 'cos-js-sdk-v5';\nimport { ImagesList } from '../base_components/images_list';\nimport { ImagesListHandle } from '../base_components/images_list_handle';\n\nimport { StsTemporaryKeyRequestPost } from './upload_file_requests';\nimport { cosConfig } from './sts_funcs_config';\n\nconst createImageList = (oldObj, maxImagesNum, imageKeyName) => {\n  // 创建图片列表\n  const initImagesList = [];\n  if (maxImagesNum === 1) {\n    // 只有一个图片 cosNameKey = imageKeyName\n    const currentUrlKey = imageKeyName + '_url';\n    if (Object.keys(oldObj).includes(currentUrlKey)) {\n      initImagesList.push({\n        column_key: imageKeyName,\n        url: oldObj[currentUrlKey],\n        file_name: '',\n        cos_name: oldObj[imageKeyName]\n      });\n    }\n  } else {\n    for (let index = 0; index < maxImagesNum; index++) {\n      const currentCosNameKey = imageKeyName + (index + 1);\n      const currentUrlKey = currentCosNameKey + '_url';\n      if (Object.keys(oldObj).includes(currentCosNameKey)\n        && oldObj[currentCosNameKey].length > 5\n        && Object.keys(oldObj).includes(currentUrlKey)\n        && oldObj[currentUrlKey].length > 5\n      ) {\n        initImagesList.push({\n          column_key: currentCosNameKey,\n          url: oldObj[currentUrlKey],\n          file_name: '',\n          cos_name: oldObj[currentCosNameKey]\n        });\n      }\n    }\n  }\n  return initImagesList;\n};\n\nconst createImagesObj = (imagesList, maxImagesNum, imageKeyName) => {\n  // 创建图片对象\n  let cos_names_obj = {};\n  if (maxImagesNum === 1) {\n    // 单张图片\n    cos_names_obj[imageKeyName] = imagesList.length > 0 ? imagesList[0].cos_name : '';\n  } else {\n    // 多张图片\n    for (let index = 0; index < maxImagesNum; index++) {\n      const currentCosNameKey = imageKeyName + (index + 1);\n      cos_names_obj[currentCosNameKey] = imagesList.length > index ? imagesList[index].cos_name : '';\n    }\n  }\n  console.log(cos_names_obj);\n  return cos_names_obj;\n};\n\nconst StsUploadFilesList = ({ onChange, initFileList, maxFilesNum, imageKeyName, cleanImagesCount }) => {\n  // 上传文件组件\n  // initFileList = [{culumn_key: 'image_cos_name1', url: 'https://abc.jpg'}, ]\n  const [showUploadButton, setShowUploadButton] = useState(true);\n  const currentSelectedFileObj = useRef({});\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n\n  const stsTemporaryObj = useRef({});\n  const temporaryKeyRequestObj = useRef({});\n  const [fileList, setFileList] = useState([]);\n  const deletedColumnsKeys = useRef([]);\n\n  useEffect(() => {\n    // 默认图片\n    const addObj = { file_name: '', cos_name: '' };\n    let newFilesList = [];\n    for (let index = 0; index < initFileList.length; index++) {\n      const element = initFileList[index];\n      newFilesList.push({ ...element, ...addObj });\n    }\n    setFileList(newFilesList);\n  }, [initFileList]);\n\n  useEffect(() => {\n    if (fileList.length >= maxFilesNum) {\n      setShowUploadButton(false);  // 是否显示上传按钮\n    } else {\n      setShowUploadButton(true);\n    }\n    onChange(createImagesObj(fileList, maxFilesNum, imageKeyName));\n  }, [fileList, maxFilesNum]);\n\n  useEffect(() => {\n    // 清空图片\n    setFileList([]);\n    deletedColumnsKeys.current = [];\n  }, [cleanImagesCount]);\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const createColumnKey = () => {\n    // 生成新的column_key\n    const maxIndex = fileList.length + 1;\n    return imageKeyName + maxIndex;\n  }\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后操作\n    // console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject({\n      ...cosConfig,\n      Key: respObj.image_cos_name,              /* 必须 */\n      Body: currentSelectedFileObj.current,            // 上传文件对象\n      onProgress: function (progressData) {\n        console.log(JSON.stringify(progressData));\n      }\n    }, function (err, data) {\n      console.log(err || data);\n      if (data) {\n        // console.log(data);\n        // console.log(fileList);\n\n        // 更新fileList\n        const uploadedImageObj = {\n          column_key: createColumnKey(),\n          url: respObj.image_cos_name_url,\n          cos_name: respObj.image_cos_name,\n          file_name: currentSelectedFileObj.current.name,\n        };\n        const deepcopyFileList = [].concat(fileList);\n        deepcopyFileList.push(uploadedImageObj)\n        setFileList(deepcopyFileList);\n        message.success('文件上传成功!');\n      } else {\n        // deleteCurrentImage();  //上传失败删除图片\n        message.error('文件上传失败...');\n      }\n    });\n  };\n\n  const uploadFileProps = {\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      console.log(file);\n      const fileName = file.name;\n      temporaryKeyRequestObj.current = {file_name: fileName};   // 文件名称传给后端\n      \n      currentSelectedFileObj.current = file;\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <ImagesList imagesList={fileList}\n        setImagesList={setFileList}\n        deletedImageHandle={delKeysArr => deletedColumnsKeys.current = delKeysArr}\n        imageKeyName={imageKeyName}></ImagesList>\n      <Upload {...uploadFileProps}>\n        {(showUploadButton) ? (<Button><UploadOutlined /> Upload</Button>) : null}\n      </Upload>\n      <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n        reqObject={temporaryKeyRequestObj.current}\n        responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n    </div>\n  );\n};\n\nStsUploadFilesList.defaultProps = {\n  initFileList: [],\n  fileList: [],\n  maxFilesNum: 5,\n  onChange: (imagesObj) => { console.log(imagesObj) },\n  imageKeyName: 'image_cos_name',\n  cleanImagesCount: 0\n};\n\nconst StsUploadImagesList = ({ onChange, oldObj, maxImagesNum, imageKeyName }) => {\n  // 图片上传列表\n  // oldObj = {...} 包含key `${imageKeyName}1`, `${imageKeyName}1_url`......\n\n  // imagesList=[{column_key: 'image_cos_name1', url: 'https://abc.jpg', file_name: 'abc', cos_name: 'abc.jpg', },];\n  const [imagesList, setImagesList] = useState([]);\n\n  const [showUploadButton, setShowUploadButton] = useState(true);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n\n  const currentSelectedFileObj = useRef({});\n  const temporaryKeyRequestObj = useRef({});\n  const stsTemporaryObj = useRef({});\n\n  useEffect(() => {\n    // 初始化图片列表\n    const imgList = createImageList(oldObj, maxImagesNum, imageKeyName);\n    console.log(imgList);\n    setImagesList(imgList);\n  }, [oldObj, maxImagesNum, imageKeyName]);\n\n  useEffect(() => {\n    // 图片列表改变后，触发 onChange 事件 和是否显示上传按钮\n    setShowUploadButton(imagesList.length < maxImagesNum);  // 是否显示上传按钮\n    onChange(createImagesObj(imagesList, maxImagesNum, imageKeyName));  // 触发事件\n  }, [imagesList, maxImagesNum]);\n\n  const uploadFileProps = {\n    accept: '.jpg,.jpeg,.png,.bmp',\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      // console.log(file);\n      const fileName = file.name;\n      temporaryKeyRequestObj.current = {file_name: fileName};   // 文件名称传给后端\n\n      currentSelectedFileObj.current = file;\n      setIsUploading(true);\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  const createColumnKey = () => {\n    // 生成新的column_key\n    const maxIndex = imagesList.length + 1;\n    return imageKeyName + maxIndex;\n  }\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后操作\n    // console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      setIsUploading(false);\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject({\n      ...cosConfig,\n      Key: respObj.image_cos_name,              /* 必须 */\n      Body: currentSelectedFileObj.current,            // 上传文件对象\n      onProgress: function (progressData) {\n        console.log(JSON.stringify(progressData));\n      }\n    }, function (err, data) {\n      setIsUploading(false);\n      console.log(err || data);\n      if (data) {\n        // 更新fileList\n        const uploadedImageObj = {\n          column_key: createColumnKey(),\n          url: respObj.image_cos_name_url,\n          cos_name: respObj.image_cos_name,\n          file_name: currentSelectedFileObj.current.name,\n        };\n        const deepcopyFileList = [].concat(imagesList);\n        deepcopyFileList.push(uploadedImageObj)\n        setImagesList(deepcopyFileList);\n        message.success('文件上传成功!');\n      } else {\n        // deleteCurrentImage();  //上传失败删除图片\n        message.error('文件上传失败...');\n      }\n    });\n  };\n\n  return (\n    <div>\n      <ImagesListHandle imagesList={imagesList} setImagesList={setImagesList}></ImagesListHandle>\n      <Upload {...uploadFileProps}>\n        {(showUploadButton && !isUploading) ? (<Button><UploadOutlined />上传图片</Button>) : null}\n      </Upload>\n      <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n        reqObject={temporaryKeyRequestObj.current}\n        responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n    </div>\n  )\n};\n\nStsUploadImagesList.defaultProps = {\n  onChange: (imagesObj) => { console.log(imagesObj) },  // imagesList= {cosNameKey: cosName, ...}\n  oldObj: {handleCount: 0},\n  maxImagesNum: 1,\n  imageKeyName: '',\n  cleanImagesCount: 0\n};\n\nconst StsUploadVideo = ({ onChange, oldObj, videoKeyName }) => {\n  // 上传视频组件\n  const [isUploading, setIsUploading] = useState(false);\n  const [showUploadButton, setShowUploadButton] = useState(false)\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoCosKey, setVideoCosKey] = useState('');\n  const stsTemporaryObj = useRef({});\n  const [temporaryKeyRequestCount, setTemporaryKeyRequestCount] = useState(0);\n  const temporaryKeyRequestObj = useRef({});\n\n  const currentSelectedFileObj = useRef({});\n\n  useEffect(() => {\n    // 更新视频url\n    if (Object.keys(oldObj).length > 0 && videoKeyName.length > 0) {\n      // console.log(oldObj);\n      const coskey_convert_urlkey = videoKeyName + '_url';\n      // console.log(coskey_convert_urlkey);\n      const currentVideoUrl = oldObj[coskey_convert_urlkey] ? oldObj[coskey_convert_urlkey] : '';\n      setVideoUrl(currentVideoUrl);\n      const currentVideoCosName = oldObj[videoKeyName] ? oldObj[videoKeyName] : '';\n      setVideoCosKey(currentVideoCosName);\n    }\n\n  }, [oldObj, videoKeyName])\n\n  useEffect(() => {\n    // video url 改变后返回给父组件\n    console.log(videoKeyName);\n    if (videoKeyName.length > 0) {\n      const newVideoObj = {[videoKeyName]: videoCosKey};\n      console.log(newVideoObj);\n      onChange(newVideoObj);\n    }\n    // 是否显示上传按钮\n    setShowUploadButton(videoCosKey.length === 0);\n  }, [videoCosKey, videoKeyName])\n\n  const delVideoHandle = () => {\n    //删除当前视频\n    setVideoUrl('');\n    setVideoCosKey('');\n  }\n\n  const getAuthorization = function (options, callback) {\n    // 验证函数\n    const stsObj = { ...stsTemporaryObj.current };\n    const credentials = stsObj.credentials;\n    callback({\n      TmpSecretId: credentials.tmpSecretId,\n      TmpSecretKey: credentials.tmpSecretKey,\n      XCosSecurityToken: credentials.sessionToken,\n      StartTime: stsObj.startTime, // 时间戳，单位秒，如：1580000000，建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误\n      ExpiredTime: stsObj.expiredTime, // 时间戳，单位秒，如：1580000900\n    });\n  };\n\n  const temporaryKeyResponseDataHandle = (respObj) => {\n    // 获取临时密钥后 上传视频文件到腾讯云cos\n    console.log(respObj);\n    if (!Object.keys(respObj).includes('image_cos_name')\n      && !Object.keys(respObj).includes('sts_obj')) {\n      console.log('Get temporary key error...');\n      message.error('网络错误...');\n      return;\n    }\n    stsTemporaryObj.current = respObj.sts_obj;\n    // cos_name.current = respObj.image_cos_name;\n    // 上传到腾讯云 bucket\n    if (typeof window === 'undefined') {\n      setIsUploading(false);\n      return;\n    }\n    const Cos = require('cos-js-sdk-v5');\n    const cos = new Cos({ getAuthorization: getAuthorization });\n    cos.putObject(\n      {\n        ...cosConfig,\n        Key: respObj.image_cos_name,              /* 必须 */\n        Body: currentSelectedFileObj.current,            // 上传文件对象\n        onProgress: function (progressData) {\n          console.log(JSON.stringify(progressData));\n        }\n      }, \n      function (err, data) {\n        setIsUploading(false);\n        console.log(err || data);\n        if (data) {\n          // 更新视频文件 cos name 和 url\n          setVideoUrl(respObj.image_cos_name_url);\n          setVideoCosKey(respObj.image_cos_name);\n          message.success('视频上传成功!');\n        } else {\n          // deleteCurrentImage();  //上传失败删除图片\n          message.error('视频上传失败...');\n        }\n      }\n    );\n  }\n\n  const uploadFileProps = {\n    // action: `${customConfig.apiBaseUrl}/${uploadUrl}`,\n    accept: '.mp4,.mov,.3gp',\n    listType: 'picture',\n    fileList: [],\n    beforeUpload: (file) => {\n      // 自定义上传\n      if (isUploading) {\n        // 正在上传的时候不能重复上传\n        return null;\n      }\n      console.log(file);\n      const fileName = file.name;\n      temporaryKeyRequestObj.current = {file_name: fileName};   // 文件名称传给后端\n      currentSelectedFileObj.current = file;\n      setTemporaryKeyRequestCount(temporaryKeyRequestCount + 1);\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <Space direction=\"vertical\">\n        {videoUrl.length > 0 ? <video width=\"320\" height=\"240\" controls src={videoUrl}></video> : null}\n        {(showUploadButton) ? null : <Button onClick={delVideoHandle}>删除视频</Button>}\n        <Upload {...uploadFileProps}>\n          {(showUploadButton) \n            ? isUploading ? <Spin></Spin> : <Button><UploadOutlined />上传视频</Button>\n            : null}\n        </Upload>\n        \n        <StsTemporaryKeyRequestPost requestCount={temporaryKeyRequestCount}\n          reqObject={temporaryKeyRequestObj.current}\n          responseDataHandle={temporaryKeyResponseDataHandle}></StsTemporaryKeyRequestPost>\n      </Space>\n    </div>\n  );\n}\nStsUploadVideo.defaultProps = {\n  onChange: obj => console.log(obj),\n  oldObj: {},\n  videoKeyName: ''\n}\n\nexport { StsUploadFilesList, StsUploadImagesList, StsUploadVideo };\n"],"names":["ImagesList","imagesList","setImagesList","deletedImageHandle","imageKeyName","deletedColumnKeys","useRef","updateCulumnKey","deletedImages","column_key","console","log","deletedColumnNum","parseInt","replace","updatedImagesList","index","length","currentObj","currentColumnNum","push","deleteCurrentImage","deepcopyImages","concat","splice","culumn_key","has_key","updatedDeletedColumnKeys","current","updateDeletedColumnKeys","style","textAlign","itemLayout","size","dataSource","renderItem","item","key","toString","actions","title","onClick","shape","icon","DeleteOutlined","file_name","avatar","src","url","defaultProps","props","ref","AntdIcon","displayName","ImagesListHandle","moveImageObjIndex","moveNum","copyImages","moveImgObj","insertIndex","createImagesObj","maxImagesNum","cos_names_obj","cos_name","StsUploadFilesList","onChange","initFileList","maxFilesNum","cleanImagesCount","useState","showUploadButton","setShowUploadButton","currentSelectedFileObj","temporaryKeyRequestCount","setTemporaryKeyRequestCount","stsTemporaryObj","temporaryKeyRequestObj","fileList","setFileList","deletedColumnsKeys","useEffect","addObj","newFilesList","element","getAuthorization","options","callback","stsObj","credentials","TmpSecretId","tmpSecretId","TmpSecretKey","tmpSecretKey","XCosSecurityToken","sessionToken","StartTime","startTime","ExpiredTime","expiredTime","uploadFileProps","listType","beforeUpload","file","fileName","name","delKeysArr","UploadOutlined","requestCount","reqObject","responseDataHandle","respObj","Object","keys","includes","message","sts_obj","window","require","putObject","cosConfig","Key","image_cos_name","Body","onProgress","progressData","JSON","stringify","err","data","uploadedImageObj","maxIndex","image_cos_name_url","deepcopyFileList","imagesObj","StsUploadImagesList","oldObj","isUploading","setIsUploading","imgList","initImagesList","currentUrlKey","currentCosNameKey","createImageList","accept","handleCount","StsUploadVideo","videoKeyName","videoUrl","setVideoUrl","videoCosKey","setVideoCosKey","coskey_convert_urlkey","currentVideoUrl","currentVideoCosName","newVideoObj","direction","width","height","controls","obj"],"sourceRoot":""}