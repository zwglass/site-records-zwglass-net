{"version":3,"file":"c9690abbd4e2f8582167eb53d739858e76c6dee9-b8b9102e0fec38268b31.js","mappings":"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","sources":["webpack://client_admin_v102/./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack://client_admin_v102/./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack://client_admin_v102/./src/components/base_components/form_component.js","webpack://client_admin_v102/./src/components/wx_store/color_price/color_price_requests.js","webpack://client_admin_v102/./src/components/wx_store/color_price/color_price_columns_label_config.js","webpack://client_admin_v102/./src/components/wx_store/color_price/create_color_price.js","webpack://client_admin_v102/./src/components/wx_store/color_price/update_color_price.js","webpack://client_admin_v102/./src/components/wx_store/goods/goods_price_update_handle.js","webpack://client_admin_v102/./src/components/wx_store/color_price/color_price_list.jsx","webpack://client_admin_v102/./src/components/wx_store/color_price/index.js"],"sourcesContent":["// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\"; // GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","import React from 'react';\n\nimport AxiosRequest from '../../apis';\nimport { sendAxiosRequest } from '../../apis/sendRequest';\n\n// ColorPrice 的request请求\n\n// ~~~~~~ 需要修改apiLists ~~~~~~\nconst apiLists = ['goods-admin/v1/goodscolorprice', 'goods-admin/v1/postgoodsstock'];\n\nconst goodsStockUpdatePost = (goodsId, colorPriceId, saleNum) => {\n    // 更新商品库存\n    const requestObj = {goods_id: goodsId, color_price_id: colorPriceId, sale_num: saleNum};\n\n    return new Promise((resolve, reject) => {\n        sendAxiosRequest(apiLists[1], 'post', {}, requestObj).then((respObj) => {\n            resolve(respObj);\n        }).catch((err) => {\n            reject(err);\n        })\n    })\n}\n\nconst ColorPriceRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // ColorPrice Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nColorPriceRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst ColorPriceRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // ColorPrice post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nColorPriceRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst ColorPriceRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // ColorPrice put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nColorPriceRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst ColorPriceRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // ColorPrice delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nColorPriceRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  goodsStockUpdatePost,\n  ColorPriceRequestGet,\n  ColorPriceRequestPost,\n  ColorPriceRequestPut,\n  ColorPriceRequestDelete\n};\n","import React from 'react';\nimport { Button } from 'antd';\n// import { CustomSelect } from '../../base_components/select_component';\n\nimport { customRanderItem } from '../../base_components/lists/custom_list';\n\n// ColorPrice 列 配置 \"goods\", \"color_name\", \"stock_num\", \"retail_price\", \"agent_price\", \"cost_price\", \"property_pic\", \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\n    \"id\", \"goods\", \"color_name\", \"stock_num\", \"retail_price\", \"group_price\", \"agent_price\", \"cost_price\",\n    \"color_pic\", \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"\n];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\n    \"id\", \"goods\", \"color_pic\", \"handle_staff_id\", \"add_time\", \"update_time\"\n];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\"id\", \"color_pic\", \"handle_staff_id\",];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n    \"id\": \"ID\", \"goods\": \"商品ID\", \"color_name\": \"颜色名称\", \"stock_num\": \"库存数量\", \"retail_price\": \"零售价格\", \"group_price\": \"团购价格\",\n    \"agent_price\": \"代理价格\", \"cost_price\": \"成本价\", \"color_pic_url\": \"图片URL\",\n    \"color_pic\": \"图片cos\", \"handle_staff_id\": \"操作员ID\", \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\" : \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\n// const SelectExample = (<CustomSelect options={[{ value: 0, label: '不可编辑' }, { value: 1, label: '可编辑' }]} />);\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\nconst formKeySelectComponentsObj = {\n  // exampleColumn: SelectExample,\n  // 'end_time': SelectEndTime,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [\"color_pic\"];\n\n//  ~~~~~~ 表单get 请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [\"color_name\"];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n    \"id\": 0, \"goods\": 0, \"color_name\": \"\", \"stock_num\": 0, \"retail_price\": 0, \"group_price\": 0, \"agent_price\": 0, \"cost_price\": 0, \"color_pic_url\": \"\",\n    \"color_pic\": \"\", \"handle_staff_id\": 0, \"add_time\": \"\", \"update_time\": \"\", \"explains\" : \"\"\n}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyName = 'property_pic';\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 1;\n\nconst actionButtons = (item, setVisible, setSelectedObj, selectButtonOnClick) => {\n  const onClickInfo = () => {\n      setSelectedObj(item);\n      setVisible(2);\n  };\n  const onClickSelect = () => {\n      // 跳转到 颜色价格页面 传商品id\n      // navigate(\"/wxcolorprice\", { state: { goodsobj: item } });\n      selectButtonOnClick(item);\n      setVisible(0);\n  }\n  const btnList = [\n      <Button onClick={onClickInfo} type=\"link\">详情</Button>,\n  ];\n  if (selectButtonOnClick) {\n      btnList.push(<Button onClick={onClickSelect} type=\"link\">选择</Button>)\n  }\n  return btnList;\n}\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst renderItem = (item, setSelectedObj, selectButtonOnClick, setVisible, visible) => {\n    // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n    const textsContent = (\n        <div>\n            <p>{`库存数量: ${item.stock_num}`}</p>\n            <p>{`零售价: ${item.retail_price}`}</p>\n            <p>{`团购价: ${item.group_price}`}</p>\n            <p>{`代理价: ${item.agent_price}`}</p>\n            <p>{`成本: ${item.cost_price}`}</p>\n        </div>\n    )\n    const updateItemObj = {\n        id: item.id,\n        actions: actionButtons(item, setVisible, setSelectedObj, selectButtonOnClick),\n        img: item.property_pic_url,\n        avatar: '',\n        title: `颜色属性: ${item.color_name}`,\n        description: `说明: ${item.explains}`,\n        content: textsContent,\n    };\n    return customRanderItem(updateItemObj, 120);\n};\n\nexport {\n    formKeys,\n    formDisabledKeys,\n    formNotShowKeys,\n    formKeysLabelsObj,\n    formKeySelectComponentsObj,\n    formKeysIsImages,\n    formGetRequestParamsKeys,\n    formInitialObj,\n    imageKeyName,\n    maxImagesNum,\n    renderItem\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ColorPriceRequestPost } from './color_price_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyName\n} from './color_price_columns_label_config';\n\n// 新建 Modal\n\nconst CreateColorPrice = ({ visible, setVisible, reloadListCount, setReloadListCount, goodsId }) => {\n\n  const color_priceImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n  const createFormInitialObj = useRef({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  useEffect(() => {\n    // 更新初始化商品ID\n    let updatedInitObj = { ...formInitialObj };\n    updatedInitObj.goods = goodsId;\n    createFormInitialObj.current = updatedInitObj;\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n  }, [goodsId]);\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    console.log(respObj);\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    color_priceImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const colorPriceImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    color_priceImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...color_priceImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"ColorPrice 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            imageKeyName={imageKeyName}\n            onChange={colorPriceImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={createFormInitialObj.current}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <ColorPriceRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></ColorPriceRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreateColorPrice.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal),\n  goodsId: 0\n}\n\nexport default CreateColorPrice;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../../upload_files/sts_upload_files_list';\nimport { ColorPriceRequestPut, ColorPriceRequestDelete  } from './color_price_requests';\nimport { CustomForm } from '../../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyName,\n  maxImagesNum\n} from './color_price_columns_label_config';\n\n// 编辑 ColorPrice\n\nconst UpdateColorPrice = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n  // const [oldColorPriceHomeImages, setOldColorPriceHomeImages] = useState([]);\n  const colorPriceImageObj = useRef({});\n\n  // const [oldColorPriceImageUrl, setOldColorPriceImageUrl] = useState('');\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(0);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deleteColorPrice = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    let color_priceHomeImgs = [];\n    const imgKey = 'home_pic';\n    for (let index = 1; index < 10; index++) {\n      const currentCosNameKey = imgKey + index;\n      const currentUrlKey = currentCosNameKey + '_url';\n      const currentCosName = oldObj[currentCosNameKey];\n      const currentUrl = oldObj[currentUrlKey];\n      if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n        color_priceHomeImgs.push({\n          cosNameKey: currentCosNameKey,\n          cosName: currentCosName,\n          urlKey: currentUrlKey,\n          url: currentUrl\n        });\n      }\n    }\n    // console.log(color_priceHomeImgs);\n    // setOldColorPriceHomeImages(color_priceHomeImgs);   // 更新图片列表\n  }\n\n  const colorPriceImageUploaded = (imagesObj) => {\n    // 轮播图上传后操作\n    colorPriceImageObj.current = imagesObj;\n    console.log(colorPriceImageObj.current);\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...colorPriceImageObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible === 2}\n      title=\"ColorPrice\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyName}\n          oldObj={oldObj}\n          onChange={colorPriceImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deleteColorPrice}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <ColorPriceRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></ColorPriceRequestPut>\n      <ColorPriceRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></ColorPriceRequestDelete>\n    </Modal>\n  )\n}\n\nUpdateColorPrice.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdateColorPrice;\n","import { sendAxiosRequest } from '../../apis/sendRequest';\n\nconst apiLists = ['goods-admin/v1/goods'];\n\n// 商品价格更新操作\n\nconst updateGoodsRetailPrice = (minRetailPrice, retailPrice, totalGoodsNumber, goodsId = 0) => {\n  // 更新最低和最高零售价格 和 总库存数量\n  const api = apiLists[0] + '/' + goodsId;\n  const method = 'put';\n  const reqObject = {\"goods_number\": totalGoodsNumber, \"min_retail_price\": minRetailPrice, \"retail_price\": retailPrice};\n  return new Promise((resolve, reject) => {\n    // console.log(`argument: ${goodsId}, copy: ${handleGoodsId}`);\n    if (goodsId > 0) {\n      sendAxiosRequest(api, method, {}, reqObject)\n      .then(res => {\n        // console.log(res);\n        resolve(res);\n      })\n      .catch(err => {\n        // console.log(err);\n        reject(err);\n      })\n    } else {\n      reject('Argument goodsId must..., ', goodsId);\n    }\n  });\n};\n\nexport { updateGoodsRetailPrice };\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { ColorPriceRequestGet } from './color_price_requests';\nimport UpdateColorPrice from './update_color_price';\nimport { updateGoodsRetailPrice } from '../goods/goods_price_update_handle';\nimport { renderItem } from './color_price_columns_label_config';\nimport { CustomList } from '../../base_components/lists/custom_list';\n\nconst judgeHasMore = resp => {\n    if (Object.keys(resp).includes('next') &&\n        typeof resp.next === 'string' &&\n        resp.next.length > 5) {\n        return true;\n    }\n    return false;\n};\n\n// 列表编辑 页面\n\nconst ColorPriceList = ({\n    reloadListCount,\n    setReloadListCount,\n    requestParams,\n    selectHandle,\n}) => {\n    const [visible, setVisible] = useState(0);\n    const [hasMoreState, setHasMoreState] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [requesting, setRequesting] = useState(false);\n    const reqParams = useRef({page: 1});\n\n    const [colorPriceData, setColorPriceData] = useState([]);\n    const [colorPriceRequestGetCount, setColorPriceRequestGetCount] = useState(0);\n\n    const [selectedObj, setSelectedObj] = useState({});\n\n    useEffect(() => {\n        // 加载、更新或创建数据后 重新读取列表\n        setColorPriceData([]);\n        setLoading(false);\n        setHasMoreState(true);\n        reqParams.current = {\n            ...requestParams,\n            page: requestParams.page + 1\n        };\n        setRequesting(true);\n    }, [reloadListCount]);\n\n    useEffect(() => {\n        // 读取更多 useEffect解决异步\n        if (hasMoreState && !loading && requesting) {\n            setRequesting(false);\n            loadMore();\n        }\n    }, [hasMoreState, loading, requesting])\n\n    const loadMore = () => {\n        // 读取更多列表\n        if (requestParams.goods && requestParams.goods > 0 && hasMoreState && !loading) {\n            setHasMoreState(false);\n            setColorPriceRequestGetCount(colorPriceRequestGetCount + 1);\n            setLoading(true);\n        } else {\n            console.log('Error state: hasMore is ', hasMoreState, ', loading is ', loading);\n        }\n    };\n\n    const computeMaxOrMinPrice = (colorPriceList, isMin = true) => {\n        // 计算零售价最高或最低数\n        let computeKey = 'retail_price';\n        let retPrice = 0;\n        for (let index = 0; index < colorPriceList.length; index++) {\n            const element = colorPriceList[index];\n            const currentPrice = element[computeKey] ? element[computeKey] : 0;\n            if (retPrice === 0) {\n                retPrice = currentPrice;\n            }\n            if (isMin) {\n                if (retPrice > currentPrice && currentPrice > 0) {\n                    retPrice = currentPrice;\n                }\n            } else {\n                if (retPrice < currentPrice) {\n                    retPrice = currentPrice;\n                }\n            }\n        }\n        return retPrice;\n    };\n\n    const computeGoodsTotalNum = (colorPriceList) => {\n        // 计算商品库存数量\n        let retTotalNum = 0;\n        for (let index = 0; index < colorPriceList.length; index++) {\n            const element = colorPriceList[index];\n            const currentNum = element.stock_num > 0 ? element.stock_num : 0;\n            retTotalNum = retTotalNum + currentNum;\n        }\n        return retTotalNum;\n    }\n\n    const colorPriceGetResponse = resp => {\n        // console.log('resp process...');\n        setLoading(false);\n        if (Object.keys(resp).includes('code') &&\n            resp.code === 1000 &&\n            Object.keys(resp).includes('results')\n        ) {\n            setColorPriceData(colorPriceData.concat(resp.results));\n            // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n            setHasMoreState(judgeHasMore(resp));\n\n            // 更新价格, 总库存数量\n            const resultsList = resp.results;\n            if (resultsList.length > 0) {\n                console.log(resultsList);\n                const minPrice = computeMaxOrMinPrice(resultsList);\n                const maxPrice = computeMaxOrMinPrice(resultsList, false);\n                const totalNum = computeGoodsTotalNum(resultsList);\n                console.log(minPrice, maxPrice, resultsList[0].goods);\n                updateGoodsRetailPrice(minPrice, maxPrice, totalNum, resultsList[0].goods)\n                    .then((respObj) => {\n                        console.log(respObj);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }\n        } else {\n            console.log('Error: get data...');\n        }\n    };\n\n    return (<div>\n        <ColorPriceRequestGet requestCount={colorPriceRequestGetCount}\n            reqParams={reqParams.current}\n            responseDataHandle={colorPriceGetResponse}></ColorPriceRequestGet>\n        \n        <CustomList\n            header=\"ColorPrice\"\n            listData={colorPriceData}\n            visible={visible}\n            setVisible={setVisible}\n            randerItem={renderItem}\n            setSelectedItem={setSelectedObj}\n            selectButtonOnClick={selectHandle}\n        ></CustomList>\n\n        <UpdateColorPrice visible={visible}\n            setVisible={setVisible}\n            oldObj={selectedObj}\n            reloadListCount={reloadListCount}\n            setReloadListCount={setReloadListCount}>\n        </UpdateColorPrice>\n    </div>);\n}\n\nColorPriceList.defaultProps = {\n    reloadListCount: 0,\n    setReloadListCount: (addedNum) => {\n        console.log(addedNum);\n    },\n    requestParams: {\n        page: 0\n    },\n    selectHandle: null,\n}\n\nexport default ColorPriceList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Row, Col, Space, Tooltip, message } from 'antd';\nimport { ReloadOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Link } from 'gatsby';\n\nimport CreateColorPrice from './create_color_price';\nimport ColorPriceList from './color_price_list';\n// ColorPrice 入口组件\n\nconst ColorPriceComponent = ({ location }) => {\n  // props.location接收传递的参数\n  const [goodsId, setGoodsId] = useState(0);\n  const reqParams = useRef({ page: 0 });\n  const [goodsTitle, setGoodsTitle] = useState('');\n\n  const [reloadListCount, setReloadListCount] = useState(0);\n\n  const [createColorPriceVisible, setCreateColorPriceVisible] = useState(false);\n\n  const [selectColorHandle, setSelectColorHandle] = useState(null);\n  const [setVisible, setSetVisible] = useState(null);\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    if (goodsId && goodsId > 0) {\n      reqParams.current = { page: 0, goods: goodsId };\n      setReloadListCount(reloadListCount + 1);\n      console.log('init search 00 ...');\n    }else {\n      console.log('No goods...');\n      // message.error('Error: 请返回, 重新选择产品...');\n    }\n  }\n\n  useEffect(() => {\n    // 接收上一页面传递的参数 商品id 重新查询列表\n    // console.log(location);\n    try {\n      console.log(location.state.goodsobj);\n      setGoodsId(location.state.goodsobj.id);\n      setGoodsTitle(location.state.goodsobj.name);\n      setSelectColorHandle(location.state.selectHandle ? location.state.selectHandle : null);\n      console.log(location.state);\n    } catch (error) {\n      console.log(error);\n      message.error('Error: 请重新选择产品...');\n    }\n    // initReloadList();\n  }, [location.state]);\n\n  useEffect(() => {\n    initReloadList();\n  }, [goodsId]);\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <div style={{width: '100%', height: 'auto', padding: '0.1rem 0.5rem'}}>\n            <Space size=\"large\">\n              {setVisible \n                ? null \n                : <Tooltip title=\"返回\"><Link to=\"/wxgoods\"><LeftOutlined /></Link></Tooltip>}\n              \n              <h4>ColorPrice</h4>\n              <Tooltip title=\"刷新\">\n                <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n              </Tooltip>\n            </Space>\n          </div>\n        </Col>\n        <Col span={10}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreateColorPriceVisible(true)}>新建</Button>\n          </div>\n        </Col>\n      </Row>\n      <Row style={{margin: '1rem 0.2rem'}}>\n        <h6>商品标题: {goodsTitle}</h6>\n      </Row>\n\n      <ColorPriceList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n        selectHandle={selectColorHandle}\n        // setVisible={setVisible}\n      ></ColorPriceList>\n\n      <CreateColorPrice\n        visible={createColorPriceVisible}\n        setVisible={setCreateColorPriceVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        goodsId={goodsId}\n      ></CreateColorPrice>\n    </div>\n  )\n};\n\nexport default ColorPriceComponent;\n"],"names":["props","ref","AntdIcon","icon","displayName","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","width","FormItem","formKey","formKeyLabelObj","disabledKeys","updateFormObj","rulesObj","formKeySelectComponentsObj","passwordKeys","showLabelName","disabled","includes","currentLabel","currentInputValue","name","label","initialValue","rules","Object","keys","style","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","type","onClick","e","console","log","clickMethod","err","CustomForm","columns","notShowKeys","onFinish","cancelHandle","deleteHandle","showDeleteButton","formInitialObj","initFormCount","form","Form","useState","buttonIsLoading","setButtonIsLoading","useEffect","setFieldsValue","layout","values","map","index","key","toString","loading","htmlType","defaultProps","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","span","wrapperCol","apiLists","ColorPriceRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","respObj","ColorPriceRequestPost","concat","ColorPriceRequestPut","id","ColorPriceRequestDelete","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","imageKeyName","actionButtons","item","setVisible","setSelectedObj","selectButtonOnClick","btnList","push","renderItem","visible","textsContent","stock_num","retail_price","group_price","agent_price","cost_price","updateItemObj","actions","img","property_pic_url","avatar","title","color_name","description","explains","content","customRanderItem","CreateColorPrice","reloadListCount","setReloadListCount","goodsId","color_priceImageObj","useRef","oldObj","createCount","createFormInitialObj","setInitFormCount","postRequestCount","setPostRequestCount","updatedInitObj","goods","current","closeModal","closable","footer","height","textAlign","onChange","imagesObj","upObj","code","message","val","booleanVal","UpdateColorPrice","colorPriceImageObj","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","initImgAndForm","color_priceHomeImgs","currentCosNameKey","currentUrlKey","currentCosName","currentUrl","length","cosNameKey","cosName","urlKey","url","maxImagesNum","ColorPriceList","requestParams","selectHandle","hasMoreState","setHasMoreState","setLoading","requesting","setRequesting","page","colorPriceData","setColorPriceData","colorPriceRequestGetCount","setColorPriceRequestGetCount","selectedObj","loadMore","computeMaxOrMinPrice","colorPriceList","isMin","computeKey","retPrice","element","currentPrice","resp","results","next","judgeHasMore","resultsList","minPrice","maxPrice","totalNum","retTotalNum","computeGoodsTotalNum","minRetailPrice","retailPrice","totalGoodsNumber","Promise","resolve","reject","sendAxiosRequest","then","res","catch","updateGoodsRetailPrice","header","listData","randerItem","setSelectedItem","addedNum","location","setGoodsId","goodsTitle","setGoodsTitle","createColorPriceVisible","setCreateColorPriceVisible","selectColorHandle","setSelectColorHandle","initReloadList","state","goodsobj","error","padding","size","Link","to","LeftOutlined","shape","ReloadOutlined","float","margin"],"sourceRoot":""}