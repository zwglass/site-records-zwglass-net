{"version":3,"sources":["webpack:///./src/components/base_components/list_item.js","webpack:///./node_modules/antd/es/divider/index.js","webpack:///./src/components/purchase_records_logistic/purchase_records_logistic_columns_label_config.js","webpack:///./src/components/purchase_records_logistic/custom_select_requests.js","webpack:///./src/components/purchase_records_logistic/purchase_records_logistic_requests.js","webpack:///./src/components/purchase_records_logistic/create_purchase_records_logistic.js","webpack:///./src/components/purchase_records_logistic/purchase_records_logistic_query_form.js","webpack:///./src/components/purchase_records_logistic/update_purchase_records_logistic.js","webpack:///./src/components/purchase_records_logistic/purchase_records_logistic_list.js","webpack:///./src/components/purchase_records_logistic/purchase_records_logistic_query_params_display.js","webpack:///./src/components/purchase_records_logistic/index.js","webpack:///./src/pages/logistic.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./src/components/base_components/form_component.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack:///./src/components/base_components/select_component.js"],"names":["containerCommomStyle","width","height","padding","margin","display","alignItems","justifyContent","imageContainerStyle","overflow","handleContainerStyle","position","sourcePriceNoThroughStyle","color","fontSize","sourcePriceThroughStyle","textDecoration","ListsItem","listsIndex","url","productTitle","productEffects","sourcePrice","salePrice","clickDetailHandle","customButtons","rowHeight","useState","showSourcePrice","setShowSourcePrice","sourcePriceLineThrough","setSourcePriceLineThrough","showSalePrice","setShowSalePrice","outContainerStyle","border","backgroundColor","fontFamily","maxWidth","useEffect","priceContainerStyle","salePriceStyle","imageComponent","span","style","src","square","gutter","length","float","map","item","index","key","toString","onClick","type","buttonLabel","defaultProps","console","log","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","props","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","role","formKeys","formDisabledKeys","formNotShowKeys","formKeysLabelsObj","SelectExpressCompany","value","onChange","selectOptions","setSelectOptions","Promise","resolve","reject","sendAxiosRequest","then","respObj","catch","err","resList","results","updateOptions","element","push","express_company_code","label","express_company_name","error","options","SelectLogisticState","formKeySelectComponentsObj","formGetRequestParamsKeys","formInitialObj","imageKeyNames","apiLists","PurchaseRecordsLogisticRequestGet","requestCount","reqParams","responseDataHandle","api","method","reqObject","PurchaseRecordsLogisticRequestPost","PurchaseRecordsLogisticRequestPut","id","PurchaseRecordsLogisticRequestDelete","CreatePurchaseRecordsLogistic","visible","setVisible","reloadListCount","setReloadListCount","purchaseRecordsLogisticImageObj","useRef","oldObj","createCount","initFormCount","setInitFormCount","postRequestCount","setPostRequestCount","closeModal","current","title","closable","footer","textAlign","maxImagesNum","imageKeyName","imagesObj","columns","disabledKeys","notShowKeys","formKeyLabelObj","onFinish","values","upObj","cancelHandle","showDeleteButton","keys","includes","code","message","val","booleanVal","PurchaseRecordsLogisticQueryDrawerForm","queryHandle","closeDrawer","placement","onClose","bodyStyle","paddingBottom","formObj","copyFormObj","setTimeout","booleanValue","queryParamsObj","UpdatePurchaseRecordsLogistic","setOldPurchaseRecordsLogisticHomeImages","oldFormObj","setOldFormObj","putRequestCount","setPutRequestCount","deleteRequestCount","setDeleteRequestCount","initImgAndForm","purchaseRecordsLogisticHomeImgs","imgKey","currentCosNameKey","currentUrlKey","currentCosName","currentUrl","cosNameKey","cosName","urlKey","deleteHandle","updateFormObj","success","PurchaseRecordsLogisticList","requestParams","hasMore","hasMoreState","setHasMoreState","loading","setLoading","page","purchaseRecordsLogisticData","setPurchaseRecordsLogisticData","purchaseRecordsLogisticRequestGetCount","setPurchaseRecordsLogisticRequestGetCount","updatePurchaseRecordsLogisticVisible","setUpdatePurchaseRecordsLogisticVisible","selectedObj","setSelectedObj","reloadListsHandle","loadMore","current_page","Number","isInteger","resp","next","judgeHasMore","purchaseRecordsList","infoBottonTips","infoBottonClick","selObj","customBottonTips","addedNum","PurchaseRecordsLogisticQueryParams","paramsObj","displayQueryFactorStr","setDisplayQueryFactorStr","displayStr","retDisplayStr","forEach","currentFactor","PurchaseRecordsLogisticComponent","drawerVisible","setDrawerVisible","createPurchaseRecordsLogisticVisible","setCreatePurchaseRecordsLogisticVisible","shape","icon","ReloadOutlined","SearchOutlined","navigate","currentRequestParams","LogisticPage","$export","S","isObject","floor","Math","module","exports","it","isFinite","formCommonStyle","customConfig","styleFormLayout","layoutForm","styleFormItemLayout","formItemLayout","styleFormTailItemLayout","tailFormItemLayout","formInputStyle","FormItem","formKey","rulesObj","passwordKeys","showLabelName","disabled","currentLabel","currentInputValue","Item","name","initialValue","rules","Password","placeholder","FormItemExistsHandleButton","formKeysItemButtonObj","tips","buttonTips","clickMethod","CustomForm","form","Form","useForm","buttonIsLoading","setButtonIsLoading","setFieldsValue","layout","htmlType","getFieldsValueHandle","CustomSingleRowForm","onFinishButtonTips","showCancelButton","labelCol","wrapperCol","ref","AntdIcon","assign","displayName","Option","Select","CustomSelect","mode","allowClear","obj","selectComponentWidth"],"mappings":"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","file":"component---src-pages-logistic-js-1aea2b700b8e02286b3e.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Divider, Space } from 'antd';\nimport ImageZoom from './image_zoom';\n\n// 通用 div 样式\nconst containerCommomStyle = {\n  width: '100%',\n  height: '100%',\n  padding: '0.1rem',\n  margin: '0.2rem 0.1rem',\n  /* flex 布局 */\n  display: 'flex',\n  /* 实现垂直居中center, 左-left, 右-right */\n  alignItems: 'center',\n  /* 实现水平居中 */\n  justifyContent: 'left',\n};\n\nconst imageContainerStyle = {\n  width: '80%',\n  height: 180,\n  // border: '1px solid red',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  overflow: 'hidden',\n}\n\nconst handleContainerStyle = {\n  ...containerCommomStyle,\n  position: 'relative',\n  // position: 'absolute',\n  /* 实现垂直居中center, 左-left, 右-right */\n  alignItems: 'center',\n  /* 实现水平靠右 */\n  // justifyContent: 'right',\n  width: '100%',\n  height: '100%'\n};\n\nconst sourcePriceNoThroughStyle = { color: '#FF3300', fontSize: '1rem' }\nconst sourcePriceThroughStyle = { ...sourcePriceNoThroughStyle, textDecoration: 'line-through', color: '#E0E0E0' };\n\nconst ListsItem = ({ listsIndex, url, productTitle, productEffects, sourcePrice, salePrice, clickDetailHandle, customButtons, rowHeight }) => {\n  // 列表 行组件\n  // item={url: '', product_title: '', productEffects: '', sourcePrice: 30, salePrice: 20}\n  const [showSourcePrice, setShowSourcePrice] = useState(true);\n  const [sourcePriceLineThrough, setSourcePriceLineThrough] = useState(sourcePriceThroughStyle);\n  const [showSalePrice, setShowSalePrice] = useState(true);\n\n  // outContainerStyle\nconst outContainerStyle = {\n  border: '0.5px solid #F0F0F0',\n  height: rowHeight,\n  width: '100%',\n  backgroundColor: '#FCFCFC',\n  fontFamily: 'sans-serif',\n  maxWidth: '600px',\n  padding: '0.5rem 0.2rem'\n};\n\n  useEffect(() => {\n    setShowSourcePrice(sourcePrice > 0);\n    let sourcePriceLineThroughStyle = showSalePrice ? sourcePriceThroughStyle : sourcePriceNoThroughStyle;\n    setSourcePriceLineThrough(sourcePriceLineThroughStyle);\n  }, [sourcePrice, salePrice, showSalePrice]);\n\n  useEffect(() => {\n    setShowSalePrice(salePrice > 0);\n  }, [salePrice]);\n\n  const priceContainerStyle = {\n    ...containerCommomStyle,\n    /* 实现垂直居中center, 左-left, 右-right */\n    alignItems: 'left',\n  };\n\n  const salePriceStyle = {\n    fontFamily: 'sans-serif',\n    color: \"#FF3300\",\n    display: showSalePrice ? \"inline\" : \"none\"\n  }\n\n  const imageComponent = (<Col span={8}><div style={imageContainerStyle}><ImageZoom src={url} square={true} /></div></Col>)\n  return (\n    <div style={outContainerStyle}>\n      <Row gutter={16}>\n        {url.length > 5 ? imageComponent : null}\n        {/* <Col span={8}>\n          <div style={imageContainerStyle}>\n            {url.length > 5 ? (<ImageZoom src={url}></ImageZoom>) : null}\n          </div>\n        </Col> */}\n\n        <Col span={16}>\n          <Row><Col span={24}>\n            <div style={{ width: '100%', height: 'auto', padding: '0.5rem 0.2rem' }}>\n              <h3>{productTitle}</h3>\n            </div>\n          </Col></Row>\n          <Row>\n            <Col span={24}>\n              <div style={{ width: '100%', height: 'auto', padding: '0.2rem' }}>\n                <p>{productEffects}</p>\n              </div>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={24}>\n              <div style={priceContainerStyle}>\n                <Space>\n                  {showSourcePrice ? <p style={sourcePriceLineThrough}>{`¥${sourcePrice}`}</p> : null}\n                  <h3 style={salePriceStyle}>{`¥${salePrice}`}</h3>\n                </Space>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <div style={handleContainerStyle}>\n            <div style={{ float: 'left', width: 'auto', height: 'auto', padding: '0.2rem 0.5rem' }}>\n              {customButtons.map((item, index) => {\n                return (\n                  <Button key={index.toString()} onClick={() => item.onClick(listsIndex)} type=\"link\">{item.buttonLabel}</Button>\n                )\n              })}\n              <Button onClick={() => clickDetailHandle(listsIndex)} type=\"link\">详情</Button>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Divider></Divider>\n    </div>\n  )\n}\n\nListsItem.defaultProps = {\n  listsIndex: 0,\n  url: '',\n  productTitle: '',\n  productEffects: '',\n  sourcePrice: 0,\n  salePrice: 0,\n  clickDetailHandle: (listsIndex) => console.log(listsIndex),\n  customButtons: [],    // 自定义按钮[{buttonName: 'click1', onClick: index => console.log(index)}, ]\n  rowHeight: 240,\n};\n\nexport default ListsItem;\n","import \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React, { useState, useEffect } from 'react';\n// import { DatePicker } from 'antd';\nimport { CustomSelect } from '../base_components/select_component';\nimport ListsItem from '../base_components/list_item';\nimport { expressCompanyRequestGet } from './custom_select_requests';\n\n// PurchaseRecordsLogistic 列 配置\n\n// ~~~~~~ 表单列, 需添加 ~~~~~~\nconst formKeys = [\"id\", \"customer_id\", \"purchase_record_id\", \"express_company_code\", \"logistic_code\", \"logistic_state\", \"logistic_traces\", \"handle_staff_id\", \"add_time\", \"update_time\", \"explains\"];\n\n// ~~~~~~ 表单不能编辑列, 根据实际添加 ~~~~~~\nconst formDisabledKeys = [\"id\", \"logistic_traces\", \"handle_staff_id\", \"add_time\", \"update_time\"];\n\n// ~~~~~~ 表单不显示列, 根据实际添加 ~~~~~~\nconst formNotShowKeys = [\"handle_staff_id\", ];\n\n// ~~~~~~ 表单列名称 label, 需添加 ~~~~~~\nconst formKeysLabelsObj = {\n  \"id\": \"ID\", \"customer_id\": \"顾客ID\", \"purchase_record_id\": \"订单ID\", \"express_company_code\": \"快递公司\",\n  \"logistic_code\": \"快递单号\", \"logistic_state\": \"快递状态\", \"logistic_traces\": \"物流路径\", \"handle_staff_id\": \"操作员\",\n  \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\"\n};\n\n//  ~~~~~~ 选择框, 根据实际添加 ~~~~~~\nconst SelectExpressCompany = ({ value = '', onChange = e => console.log(e) }) => {\n  const [selectOptions, setSelectOptions] = useState([]);\n  useEffect(() => {\n    expressCompanyRequestGet().then(respObj => {\n        const resList = respObj.results;\n        let updateOptions = [];\n        for (let index = 0; index < resList.length; index++) {\n          const element = resList[index];\n          updateOptions.push({\n            value: element.express_company_code,\n            label: element.express_company_name\n          })\n        }\n        setSelectOptions(updateOptions);\n      }).catch(error => {\n        console.log(error);\n        setSelectOptions([]);\n      });\n  }, []);\n  return (<CustomSelect options={selectOptions} value={value} onChange={onChange}></CustomSelect>)\n};\nconst SelectLogisticState = (<CustomSelect options={[{ value: 2, label: '在途中' }, { value: 3, label: '签收' }, { value: 4, label: '问题件' }]} />);\n// const SelectEndTime = (<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />);\n// const SelectBoolean = (<CustomSelect options={[{ value: 0, label: '否' }, { value: 1, label: '是' }]} />);\nconst formKeySelectComponentsObj = {\n  'express_company_code': <SelectExpressCompany />,\n  'logistic_state': SelectLogisticState,\n  // exampleColumn: SelectBoolean,\n};\n\n//  ~~~~~~ 表单是图片列, 根据实际添加 ~~~~~~\nconst formKeysIsImages = [];\n\n//  ~~~~~~ 表单get 查询请求条件key, 根据实际添加 ~~~~~~\nconst formGetRequestParamsKeys = [];\n\n//  ~~~~~~ 表单初始化值, 根据实际添加 ~~~~~~\nconst formInitialObj = {\n  \"id\": 0, \"customer_id\": 0, \"purchase_record_id\": \"\", \"express_company_code\": \"ZTO\",\n  \"logistic_code\": \"\", \"logistic_state\": 2, \"logistic_traces\": [], \"handle_staff_id\": 0,\n  \"add_time\": \"\", \"update_time\": \"\", \"explains\": \"\"\n}\n\n// ~~~~~~ 图片列名称, 根据实际修改 ~~~~~~\nconst imageKeyNames = [];\n\n// ~~~~~~ 图片总数量, 默认设置为1, 根据实际修改 ~~~~~~\nconst maxImagesNum = 0;\n\n// ~~~~~~ api请求url apiLists, 根据实际修改 ~~~~~~\nconst apiLists = ['records-admin/v1/purchaserecord', 'kdniao-admin/v1/kdniao', 'kdniao-admin/v1/kdniaoexpresscompanycodes'];\n\n// 修改 ~~~~~~~ item keys ~~~~~~;\nconst ItemRendererComponent = ({ item, index, itemDetailClick }) => {\n  // 必须 每一行渲染 的组件, 修改 ~~~~~~~ item keys ~~~~~~;\n  console.log(item);\n  return (<div>\n    <ListsItem\n      listsIndex={index}\n      productTitle={item.add_time}\n      productEffects={`订单ID: ${item.id}; 顾客留言: ${item.explains_customer}; 订单备注: ${item.explains}`}\n      salePrice={0}\n      clickDetailHandle={itemDetailClick}\n    ></ListsItem>\n  </div>);\n};\n\nexport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum,\n  apiLists,\n  ItemRendererComponent\n};\n","import React from 'react';\nimport { sendAxiosRequest } from '../apis/sendRequest';\n\n// 自定义 Select 组件的request请求, ～～～～～～ 根据需要重写 ～～～～～～\n\nconst expressCompanyRequestGet = () => {\n  // 快递公司编号 Get 请求\n  return new Promise(function (resolve, reject) {\n    const api = 'kdniao-admin/v1/kdniaoexpresscompanycodes';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n};\n\nconst categoryRequestGet = () => {\n  // 分类 Get请求\n  return new Promise(function (resolve, reject) {\n    const api = 'category-admin/v1/category';\n    const method = 'get';\n    const reqParams = {};\n    const reqObject = {};\n    sendAxiosRequest(api, method, reqParams, reqObject)\n      .then(respObj => {\n        resolve(respObj);\n      })\n      .catch(err => {\n        console.log(err);\n        reject(err);\n      });\n  });\n}\n\nexport {\n  expressCompanyRequestGet,\n  categoryRequestGet\n}\n","import React from 'react';\n\nimport AxiosRequest from '../apis';\nimport { apiLists } from './purchase_records_logistic_columns_label_config';\n\n// PurchaseRecordsLogistic 的request请求\n\nconst PurchaseRecordsLogisticRequestGet = ({ requestCount, reqParams, responseDataHandle }) => {\n  // PurchaseRecordsLogistic Get请求\n  const api = apiLists[0];\n  const method = 'get';\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nPurchaseRecordsLogisticRequestGet.defaultProps = {\n  requestCount: 0,\n  reqParams: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst PurchaseRecordsLogisticRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // PurchaseRecordsLogistic post请求\n  const api = [].concat(apiLists)[0];\n  const method = 'post';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nPurchaseRecordsLogisticRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst PurchaseRecordsLogisticRequestPut = ({ requestCount, reqObject, responseDataHandle, id }) => {\n  // PurchaseRecordsLogistic put请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'put';\n  const reqParams = {};\n  // const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nPurchaseRecordsLogisticRequestPut.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nconst PurchaseRecordsLogisticRequestDelete = ({ requestCount, responseDataHandle, id }) => {\n  // PurchaseRecordsLogistic delete请求\n  const api = [].concat(apiLists)[0] + `/${id}`;\n  const method = 'delete';\n  const reqParams = {};\n  const reqObject = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  );\n};\nPurchaseRecordsLogisticRequestDelete.defaultProps = {\n  requestCount: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n  id: 0\n}\n\nexport {\n  PurchaseRecordsLogisticRequestGet,\n  PurchaseRecordsLogisticRequestPost,\n  PurchaseRecordsLogisticRequestPut,\n  PurchaseRecordsLogisticRequestDelete\n};\n","import React, { useRef, useState } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\nimport { StsUploadImagesList } from '../upload_files/sts_upload_files_list';\nimport { PurchaseRecordsLogisticRequestPost } from './purchase_records_logistic_requests';\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './purchase_records_logistic_columns_label_config';\n\n// 新建 Modal\n\nconst CreatePurchaseRecordsLogistic = ({ visible, setVisible, reloadListCount, setReloadListCount }) => {\n\n  const purchaseRecordsLogisticImageObj = useRef({});\n  const oldObj = useRef({createCount: 0});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [postRequestCount, setPostRequestCount] = useState(0);\n  const reqObject = useRef({});\n\n  const postResponseDataHandle = (respObj) => {\n    // 表单提交后的操作\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      closeModal();\n      setReloadListCount(reloadListCount + 1)\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const closeModal = () => {\n    // 初始化表格和图片 并关闭Modal\n    purchaseRecordsLogisticImageObj.current = {};  // 清空图片数据\n    oldObj.current = {createCount: oldObj.current.createCount + 1};  // 初始化图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setVisible(false);\n  }\n\n  const purchaseRecordsLogisticImageUploaded = (imagesObj) => {\n    // 图片上传后操作\n    purchaseRecordsLogisticImageObj.current = { ...imagesObj };\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...purchaseRecordsLogisticImageObj.current };\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    reqObject.current = upObj;\n    setPostRequestCount(postRequestCount + 1);\n  }\n\n  return (\n    <>\n       <Modal visible={visible}\n        title=\"PurchaseRecordsLogistic 新建\"\n        closable={false}\n        footer={null}\n      >\n        <div style={{ width: '100%', height: 'auto', textAlign: 'center' }}>\n          <StsUploadImagesList\n            oldObj={oldObj.current}\n            maxImagesNum={maxImagesNum}\n            imageKeyName={imageKeyNames[0]}\n            onChange={purchaseRecordsLogisticImageUploaded}></StsUploadImagesList>\n        </div>\n        <Divider></Divider>\n\n        <CustomForm\n          columns={formKeys}\n          disabledKeys={formDisabledKeys}\n          notShowKeys={formNotShowKeys}\n          formKeyLabelObj={formKeysLabelsObj}\n          formKeySelectComponentsObj={formKeySelectComponentsObj}\n          onFinish={onFinish}\n          cancelHandle={closeModal}\n          showDeleteButton={false}\n          formInitialObj={formInitialObj}\n          initFormCount={initFormCount}\n        ></CustomForm>\n\n      <PurchaseRecordsLogisticRequestPost\n        requestCount={postRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={postResponseDataHandle}></PurchaseRecordsLogisticRequestPost>\n      </Modal>\n    </>\n  )\n}\n\nCreatePurchaseRecordsLogistic.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  reloadListCount: 0,\n  setReloadListCount: (booleanVal) => console.log(booleanVal)\n}\n\nexport default CreatePurchaseRecordsLogistic;\n","import React, { useState } from 'react';\nimport { Drawer } from 'antd';\n\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formGetRequestParamsKeys,\n  formInitialObj\n} from './purchase_records_logistic_columns_label_config';\n// 列表查询 form\n\nconst PurchaseRecordsLogisticQueryDrawerForm = ({ visible, setVisible, queryHandle }) => {\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const closeDrawer = () => {\n    // 关闭查询抽屉\n    setInitFormCount(initFormCount + 1);\n    setVisible(false);\n  };\n\n  const onFinish = (formObj) => {\n    // 提交查询 根据具体情况更新 fromObj\n    // ~~~~~~~ 具体情况更新 fromObj ~~~~~~\n    let copyFormObj = { ...formObj };\n    console.log(copyFormObj);\n    queryHandle(copyFormObj);\n    setTimeout(() => {\n      closeDrawer();\n    }, 50);\n  };\n\n  return (\n    <Drawer\n      title=\"销售记录查询\"\n      width=\"100%\"\n      height=\"400px\"\n      placement=\"top\"\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={null}\n    >\n      <CustomForm\n        columns={formGetRequestParamsKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={false}\n        formInitialObj={formInitialObj}\n        initFormCount={initFormCount}\n      ></CustomForm>\n    </Drawer>\n  );\n};\n\nPurchaseRecordsLogisticQueryDrawerForm.defaultProps = {\n  visible:false,\n  setVisible: (booleanValue) => { console.log(booleanValue); },\n  queryHandle: (queryParamsObj) => { console.log(queryParamsObj); }\n};\n\nexport default PurchaseRecordsLogisticQueryDrawerForm;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Modal, Divider, message } from 'antd';\n\n// import StsUploadFile from '../../upload_files/sts_upload_file';\nimport { StsUploadImagesList } from '../upload_files/sts_upload_files_list';\nimport { PurchaseRecordsLogisticRequestPut, PurchaseRecordsLogisticRequestDelete  } from './purchase_records_logistic_requests';\nimport { CustomForm } from '../base_components/form_component';\n\nimport {\n  formKeys,\n  formDisabledKeys,\n  formNotShowKeys,\n  formKeysLabelsObj,\n  formKeySelectComponentsObj,\n  formKeysIsImages,\n  formGetRequestParamsKeys,\n  formInitialObj,\n  imageKeyNames,\n  maxImagesNum\n} from './purchase_records_logistic_columns_label_config';\n\n// 编辑 PurchaseRecordsLogistic\n\nconst UpdatePurchaseRecordsLogistic = ({ visible, setVisible, oldObj, reloadListCount, setReloadListCount }) => {\n  const [oldPurchaseRecordsLogisticHomeImages, setOldPurchaseRecordsLogisticHomeImages] = useState([]);\n  const purchaseRecordsLogisticImageObj = useRef({});\n\n  const [oldPurchaseRecordsLogisticImageUrl, setOldPurchaseRecordsLogisticImageUrl] = useState('');\n  const [oldFormObj, setOldFormObj] = useState({});\n\n  const [initFormCount, setInitFormCount] = useState(0);\n\n  const [putRequestCount, setPutRequestCount] = useState(0);\n  const reqObject = useRef({});\n  const putResponseDataHandle = (respObj) => {\n    if (Object.keys(respObj).includes('code')\n      && respObj.code === 1000) {\n      message.success('修改成功');\n      setReloadListCount(reloadListCount + 1);\n      setVisible(false);\n    } else {\n      message.error('网络错误...');\n    }\n  }\n\n  const [deleteRequestCount, setDeleteRequestCount] = useState(0);\n  const deletePurchaseRecordsLogistic = () => {\n    // 删除当前对象\n    setDeleteRequestCount(deleteRequestCount + 1);\n    setReloadListCount(reloadListCount + 1);\n  };\n\n  useEffect(() => {\n    initImgAndForm();   // 初始化表格和图片\n  }, [visible, oldObj]);\n\n  const initImgAndForm = () => {\n    // 初始化表格和图片\n    setInitFormCount(initFormCount + 1);  // 初始化表格\n    setOldFormObj({ ...oldObj });  // 给表格赋值\n\n    // 生成图片列表\n    let purchaseRecordsLogisticHomeImgs = [];\n    const imgKey = imageKeyNames[0];\n    for (let index = 1; index < 10; index++) {\n      const currentCosNameKey = imgKey + index;\n      const currentUrlKey = currentCosNameKey + '_url';\n      const currentCosName = oldObj[currentCosNameKey];\n      const currentUrl = oldObj[currentUrlKey];\n      if (typeof currentCosName === 'string' && currentCosName.length > 5) {\n        purchaseRecordsLogisticHomeImgs.push({\n          cosNameKey: currentCosNameKey,\n          cosName: currentCosName,\n          urlKey: currentUrlKey,\n          url: currentUrl\n        });\n      }\n    }\n    // console.log(purchaseRecordsLogisticHomeImgs);\n    setOldPurchaseRecordsLogisticHomeImages(purchaseRecordsLogisticHomeImgs);   // 更新图片列表\n  }\n\n  const purchaseRecordsLogisticImageUploaded = (imagesObj) => {\n    // 轮播图上传后操作\n    purchaseRecordsLogisticImageObj.current = imagesObj;\n  }\n\n  const onFinish = (values) => {\n    // 提交表单\n    let upObj = { ...values, ...purchaseRecordsLogisticImageObj.current };\n    console.log(upObj);\n    // 时间转时间戳\n    // let newDate = new Date(upObj.end_time);\n    // upObj.end_time = parseInt(newDate.getTime());    // 时间转时间戳\n    // console.log(upObj.end_time);\n    reqObject.current = upObj;\n    setPutRequestCount(putRequestCount + 1);\n  }\n\n  return (\n    <Modal visible={visible}\n      title=\"PurchaseRecordsLogistic\"\n      closable={false}\n      footer={null}\n    >\n      <div style={{width: '100%', height: 'auto', textAlign: 'center'}}>\n        <StsUploadImagesList\n          maxImagesNum={maxImagesNum}\n          imageKeyName={imageKeyNames[0]}\n          oldObj={oldObj}\n          onChange={purchaseRecordsLogisticImageUploaded}\n        ></StsUploadImagesList>\n      </div>\n      <Divider></Divider>\n\n      <CustomForm\n        columns={formKeys}\n        disabledKeys={formDisabledKeys}\n        notShowKeys={formNotShowKeys}\n        formKeyLabelObj={formKeysLabelsObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        onFinish={onFinish}\n        cancelHandle={() => setVisible(false)}\n        showDeleteButton={true}\n        deleteHandle={deletePurchaseRecordsLogistic}\n        updateFormObj={oldFormObj}\n        formInitialObj={{}}\n        initFormCount={initFormCount}\n      ></CustomForm>\n\n      <PurchaseRecordsLogisticRequestPut\n        requestCount={putRequestCount}\n        reqObject={reqObject.current}\n        responseDataHandle={putResponseDataHandle}\n        id={oldFormObj.id}></PurchaseRecordsLogisticRequestPut>\n      <PurchaseRecordsLogisticRequestDelete\n        requestCount={deleteRequestCount}\n        responseDataHandle={(respObj) => setVisible(false)}\n        id={oldFormObj.id}></PurchaseRecordsLogisticRequestDelete>\n    </Modal>\n  )\n}\n\nUpdatePurchaseRecordsLogistic.defaultProps = {\n  visible: false,\n  setVisible: (val) => console.log(val),\n  oldObj: {}\n}\n\nexport default UpdatePurchaseRecordsLogistic;\n","import React, { useState, useEffect, useRef } from 'react';\n\n// import ProductsList from '../base_components/products_list';\nimport { PurchaseRecordsLogisticRequestGet } from './purchase_records_logistic_requests';\n// import CreatePurchaseRecordsLogistic from './create_purchase_records_logistic';\nimport UpdatePurchaseRecordsLogistic from './update_purchase_records_logistic';\n// import { ItemRendererComponent } from './purchase_records_logistic_columns_label_config';\nimport { PurchaseRecordsListComponent } from '../base_components/purchase_records_goods_delivery_address/purchase_records_list';\n\n// 列表编辑 页面\n\nconst PurchaseRecordsLogisticList = ({ reloadListCount, setReloadListCount, requestParams }) => {\n  const hasMore = useRef(true);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const reqParams = useRef({ page: 0 });\n\n  const [purchaseRecordsLogisticData, setPurchaseRecordsLogisticData] = useState([]);\n  const [purchaseRecordsLogisticRequestGetCount, setPurchaseRecordsLogisticRequestGetCount] = useState(0);\n\n  // const [createPurchaseRecordsLogisticVisible, setCreatePurchaseRecordsLogisticVisible] = useState(false);\n  const [updatePurchaseRecordsLogisticVisible, setUpdatePurchaseRecordsLogisticVisible] = useState(false);\n  const [selectedObj, setSelectedObj] = useState({});\n\n  useEffect(() => {\n    // 加载、更新或创建数据后 重新读取列表\n    reqParams.current = { ...requestParams };\n    reloadListsHandle();\n  }, [reloadListCount]);\n\n  useEffect(() => {\n    // useState才可以读取更多\n    setHasMoreState(hasMore.current);\n  }, [hasMore.current])\n\n  const loadMore = () => {\n    // 读取更多列表\n    if (hasMore.current && !loading) {\n      const current_page = Number.isInteger(reqParams.current.page) ? reqParams.current.page + 1 : 1;\n      reqParams.current = { ...reqParams.current, page: current_page };\n      console.log(reqParams.current);\n      setPurchaseRecordsLogisticRequestGetCount(purchaseRecordsLogisticRequestGetCount + 1);\n      setLoading(true);\n    } else {\n      console.log('Error state: hasMore is ', hasMore.current, ', loading is ', loading);\n    }\n  };\n\n  const reloadListsHandle = () => {\n    // 重新读取数据\n    reqParams.current = { ...reqParams.current, page: 0 };\n    // console.log(reqParams.current);\n    setPurchaseRecordsLogisticData([]);\n    // setHasMore(true);\n    hasMore.current = true;\n    setLoading(false);\n    setTimeout(() => {\n      loadMore();\n      console.log('end loadMore...');\n    }, 100);\n  };\n\n  const judgeHasMore = resp => {\n    if (Object.keys(resp).includes('next')\n      && typeof resp.next === 'string'\n      && resp.next.length > 5) {\n      return true;\n    }\n    return false;\n  };\n\n  const purchaseRecordsLogisticGetResponse = resp => {\n    console.log('resp process...', resp);\n    setLoading(false);\n    if (Object.keys(resp).includes('code')\n      && resp.code === 1000\n      && Object.keys(resp).includes('results')) {\n      setPurchaseRecordsLogisticData(purchaseRecordsLogisticData.concat(resp.results));\n      // setHasMore(judgeHasMore(resp));   // 判断是否还有更多\n      hasMore.current = judgeHasMore(resp);\n    } else {\n      console.log('Error: get data...');\n    }\n  };\n\n  const itemDetailClick = (index) => {\n    // 打开详情编辑窗口\n    // console.log(purchaseRecordsLogisticData[index]);\n    let selObj = { ...purchaseRecordsLogisticData[index] };\n    console.log(selObj);\n    // 日期转 moment 时间\n    // selObj.end_time = moment(dateFormat(selObj.end_time), 'YYYY-MM-DD HH:mm:ss');\n    setSelectedObj(selObj);\n    setUpdatePurchaseRecordsLogisticVisible(true);\n  };\n\n  // const CurrentItemRendererComponent = ({ item, index }) => {\n  //   // 每一行渲染 的组件\n  //   return (\n  //     <ItemRendererComponent item={item} index={index} itemDetailClick={itemDetailClick} />\n  //   )\n  // }\n\n  return (\n    <div>\n      <PurchaseRecordsLogisticRequestGet requestCount={purchaseRecordsLogisticRequestGetCount}\n        reqParams={reqParams.current}\n        responseDataHandle={purchaseRecordsLogisticGetResponse}></PurchaseRecordsLogisticRequestGet>\n      {/* <ProductsList\n        productsData={purchaseRecordsLogisticData}\n        loadMore={loadMore}\n        hasMore={hasMoreState}\n        ItemRendererComponent={CurrentItemRendererComponent}></ProductsList> */}\n\n      <PurchaseRecordsListComponent\n        purchaseRecordsList={purchaseRecordsLogisticData}\n        loadMore={loadMore}\n        hasMore={hasMoreState}\n        loading={loading}\n        infoBottonTips=\"快递发货\"\n        infoBottonClick={itemDetailClick}\n        customBottonTips=\"电子面单打印\"\n      ></PurchaseRecordsListComponent>\n\n      <UpdatePurchaseRecordsLogistic\n        visible={updatePurchaseRecordsLogisticVisible}\n        setVisible={setUpdatePurchaseRecordsLogisticVisible}\n        oldObj={selectedObj}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></UpdatePurchaseRecordsLogistic>\n    </div>\n  );\n}\n\nPurchaseRecordsLogisticList.defaultProps = {\n  reloadListCount: 1,\n  setReloadListCount: (addedNum) => { console.log(addedNum); },\n  requestParams: { page: 0 }\n}\n\nexport default PurchaseRecordsLogisticList;\n","import React, { useState, useEffect } from 'react';\n\nimport { formKeysLabelsObj } from './purchase_records_logistic_columns_label_config';\n\n// 显示查询条件组件\n\nconst PurchaseRecordsLogisticQueryParams = ({ paramsObj={} }) => {\n  const [displayQueryFactorStr, setDisplayQueryFactorStr] = useState('');\n\n  useEffect(() => {\n    displayStr();\n  }, [paramsObj])\n\n  const displayStr = () => {\n    // 显示的查询条件 字符串\n    // let retDisplayStr = '查询条件:';\n    let retDisplayStr = '';\n    Object.keys(paramsObj).forEach(element => {\n      if (Object.keys(formKeysLabelsObj).includes(element)) {\n        // 只显示 formKeysLabelsObj 包含的key\n        const currentFactor = ' ' + formKeysLabelsObj[element] + ' = ' + paramsObj[element] + ';';\n        retDisplayStr = retDisplayStr + currentFactor\n      }\n    });\n    if (retDisplayStr.length > 2) {\n      retDisplayStr = '查询条件:' + retDisplayStr;\n      setDisplayQueryFactorStr(retDisplayStr);\n    } else {\n      console.log('查询条件为空')\n      setDisplayQueryFactorStr('');\n    }\n  }\n  return (\n    <div style={{ height: 'auto', width: '100%', padding: '0.1rem 0.2rem' }}>\n      {displayQueryFactorStr.length > 2\n        ? (<p>{displayQueryFactorStr}</p>)\n        : null}\n    </div>\n  )\n};\n\nexport default PurchaseRecordsLogisticQueryParams;\n","import React, { useState, useRef } from 'react';\nimport { navigate } from 'gatsby';\nimport { Button, Row, Col, Space, Tooltip } from 'antd';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport CreatePurchaseRecordsLogistic from './create_purchase_records_logistic';\nimport PurchaseRecordsLogisticQueryDrawerForm from './purchase_records_logistic_query_form';\nimport PurchaseRecordsLogisticList from './purchase_records_logistic_list';\nimport PurchaseRecordsLogisticQueryParams from './purchase_records_logistic_query_params_display';\n// PurchaseRecordsLogistic 入口组件\n\nconst PurchaseRecordsLogisticComponent = () => {\n  const reqParams = useRef({ page: 0 });\n\n  const [reloadListCount, setReloadListCount] = useState(1);\n\n  const [drawerVisible, setDrawerVisible] = useState(false);\n\n  const [createPurchaseRecordsLogisticVisible, setCreatePurchaseRecordsLogisticVisible] = useState(false);\n\n  const queryHandle = (currentRequestParams) => {\n    // 查询操作\n    reqParams.current = { ...currentRequestParams };\n    // 触发重新读取数据\n    setReloadListCount(reloadListCount + 1)\n    console.log('search...');\n  };\n\n  const initReloadList = () => {\n    // 刷新列表, 删除所有查询条件\n    reqParams.current = { page: 0 };\n    setReloadListCount(reloadListCount + 1);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={16}>\n          <Space>\n            <h4>订单快递</h4>\n            <Tooltip title=\"刷新\">\n              <Button onClick={initReloadList} shape=\"circle\" icon={<ReloadOutlined />}></Button>\n            </Tooltip>\n            <Tooltip title=\"搜索\">\n              <Button onClick={() => setDrawerVisible(true)} shape=\"circle\" icon={<SearchOutlined />}></Button>\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col span={8}>\n          <div style={{ width: '100%', height: 'auto' }}>\n            <Button style={{ float: 'right' }} type=\"link\" onClick={() => navigate('/sendexpressaccount')}>快递帐号设置</Button>\n            {/* <Button style={{ float: 'right' }} type=\"link\" onClick={() => setCreatePurchaseRecordsLogisticVisible(true)}>新建</Button> */}\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}><PurchaseRecordsLogisticQueryParams paramsObj={reqParams.current}></PurchaseRecordsLogisticQueryParams></Col>\n      </Row>\n      <PurchaseRecordsLogisticQueryDrawerForm\n        visible={drawerVisible}\n        setVisible={setDrawerVisible}\n        queryHandle={queryHandle}\n      ></PurchaseRecordsLogisticQueryDrawerForm>\n\n      <PurchaseRecordsLogisticList\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n        requestParams={reqParams.current}\n      ></PurchaseRecordsLogisticList>\n\n      <CreatePurchaseRecordsLogistic\n        visible={createPurchaseRecordsLogisticVisible}\n        setVisible={setCreatePurchaseRecordsLogisticVisible}\n        reloadListCount={reloadListCount}\n        setReloadListCount={setReloadListCount}\n      ></CreatePurchaseRecordsLogistic>\n    </div>\n  )\n};\n\nexport default PurchaseRecordsLogisticComponent;\n","import React from \"react\";\n\nimport SiteLayout from '../components/site_layout';\nimport SEO from \"../components/seo\";\n\nimport PurchaseRecordsLogisticComponent from '../components/purchase_records_logistic';\n\nconst LogisticPage = () => (\n  <SiteLayout>\n    <SEO title=\"Logistic\" />\n    <PurchaseRecordsLogisticComponent></PurchaseRecordsLogisticComponent>\n  </SiteLayout>\n)\n\nexport default LogisticPage;\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Space, Input } from 'antd';\n\nimport customConfig from '../../custom_config';\n// import { CircularIoncButton } from './button_components/button_icon_components';\n\n// Form 组件\n\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleFormLayout = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleFormTailItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst formInputStyle = {width: 260};\n\nconst FormItem = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, showLabelName=true}) => {\n  // 没有按钮的 form item\n  const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n  const currentLabel = formKeyLabelObj[formKey];\n  const currentInputValue = updateFormObj[formKey];\n  return (\n    <Form.Item { ...styleFormItemLayout }\n      name={formKey}\n      label={showLabelName ? currentLabel : ''}\n      initialValue={currentInputValue}\n      rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n    >\n      {Object.keys(formKeySelectComponentsObj).includes(formKey)\n        ? formKeySelectComponentsObj[formKey]\n        : (passwordKeys.includes(formKey)\n          ? <Input.Password style={formInputStyle} />\n          : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n    </Form.Item>\n  );\n};\n\nconst FormItemExistsHandleButton = ({formKey, formKeyLabelObj, disabledKeys, updateFormObj, rulesObj, formKeySelectComponentsObj, passwordKeys, formKeysItemButtonObj}) => {\n  // 有按钮的 form item\n  const tips = formKeysItemButtonObj[formKey].buttonTips;\n  const onClickMethod = (e) => {\n    console.log(e);\n    try {\n      formKeysItemButtonObj[formKey].clickMethod();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const currentLabel = formKeyLabelObj[formKey];\n  return (\n    <Form.Item {...styleFormItemLayout} label={currentLabel}>\n      <FormItem\n        formKey={formKey}\n        formKeyLabelObj={formKeyLabelObj}\n        disabledKeys={disabledKeys}\n        updateFormObj={updateFormObj}\n        rulesObj={rulesObj}\n        formKeySelectComponentsObj={formKeySelectComponentsObj}\n        passwordKeys={passwordKeys}\n        showLabelName={false}\n      ></FormItem>\n      {/* <CircularIoncButton\n        tips={tips}\n        onClick={onClickMethod}\n      ></CircularIoncButton> */}\n      <Button type='link' onClick={onClickMethod}>{tips}</Button>\n    </Form.Item>\n  )\n};\n\nconst CustomForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  formKeysItemButtonObj,\n  onFinish,\n  cancelHandle,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n}) => {\n  const [form] = Form.useForm();\n\n  const [buttonIsLoading, setButtonIsLoading] = useState(false);\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n    setButtonIsLoading(false);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    if (initFormCount > 0) {\n      form.setFieldsValue(formInitialObj);\n      setButtonIsLoading(false);\n    }\n  }, [initFormCount]);\n\n  const clickSubmit = (values) => {\n    // 提交按钮先让 button 不可点击\n    setButtonIsLoading(true);\n    onFinish(values);\n  };\n\n  const clickDelete = () => {\n    // 提交删除先让 button 不可点击\n    setButtonIsLoading(true);\n    deleteHandle()\n  };\n\n  // const getFormFieldsValue = () => {\n  //   // 获取表单的所有值\n  // }\n\n  return (\n    <Form {...styleFormLayout} form={form}\n      layout=\"horizontal\" onFinish={clickSubmit} name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        if (Object.keys(formKeysItemButtonObj).includes(formKey)) {\n          return (<FormItemExistsHandleButton\n              key={index.toString()}\n              formKey={formKey}\n              formKeyLabelObj={formKeyLabelObj}\n              disabledKeys={disabledKeys}\n              updateFormObj={updateFormObj}\n              rulesObj={rulesObj}\n              formKeySelectComponentsObj={formKeySelectComponentsObj}\n              passwordKeys={passwordKeys}\n              formKeysItemButtonObj={formKeysItemButtonObj}\n            ></FormItemExistsHandleButton>)\n        } else {\n          return <FormItem\n            key={index.toString()}\n            formKey={formKey}\n            formKeyLabelObj={formKeyLabelObj}\n            disabledKeys={disabledKeys}\n            updateFormObj={updateFormObj}\n            rulesObj={rulesObj}\n            formKeySelectComponentsObj={formKeySelectComponentsObj}\n            passwordKeys={passwordKeys}\n          ></FormItem>\n        }\n      })}\n      <Form.Item {...styleFormTailItemLayout}>\n        <Space>\n          <Button loading={buttonIsLoading} disabled={buttonIsLoading} type=\"primary\" htmlType=\"submit\">提交</Button>\n          <Button onClick={cancelHandle}>取消</Button>\n          {showDeleteButton ? <Button loading={buttonIsLoading} disabled={buttonIsLoading} onClick={clickDelete}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )\n};\n\nCustomForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\n// 单行表单 (效果不好，弃用)\nconst CustomSingleRowForm = ({\n  columns,\n  disabledKeys,\n  notShowKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  // formKeysItemButtonObj,\n  onFinish,\n  onFinishButtonTips,\n  cancelHandle,\n  showCancelButton,\n  deleteHandle,\n  showDeleteButton,\n  updateFormObj,\n  formInitialObj,\n  initFormCount,\n  rulesObj,\n  passwordKeys,\n  getFieldsValueHandle\n}) => {\n  const [form] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 0,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  useEffect(() => {\n    // formInitialObj 变化 重新给form赋值\n    // console.log(updateFormObj);\n    form.setFieldsValue(updateFormObj);\n  }, [updateFormObj]);\n\n  useEffect(() => {\n    // initFormCount 变化 重新给form赋初始化值\n    form.setFieldsValue(formInitialObj);\n  }, [initFormCount]);\n\n  const FormItem = ({formKey}) => {\n    // 没有按钮的 form item\n    const disabled = disabledKeys.includes(formKey);  // 是否可以编辑输入框\n    const currentLabel = formKeyLabelObj[formKey];\n    const currentInputValue = updateFormObj[formKey];\n    \n    return (\n      <Form.Item\n        name={formKey}\n        initialValue={currentInputValue}\n        rules={rulesObj[formKey] ? rulesObj[formKey] : []}\n      >\n        {Object.keys(formKeySelectComponentsObj).includes(formKey)\n          ? formKeySelectComponentsObj[formKey]\n          : (passwordKeys.includes(formKey)\n            ? <Input.Password style={formInputStyle} />\n            : <Input style={formInputStyle} placeholder={`请输入 ${currentLabel}`} disabled={disabled} />)}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form {...layout} form={form}\n      layout=\"inline\"\n      onFinish={onFinish}\n      name=\"adminer_info_edit\">\n      {columns.map((formKey, index) => {\n        if (notShowKeys.includes(formKey)) {\n          return null;\n        }\n        return <FormItem formKey={formKey} key={index.toString()}></FormItem>\n      })}\n      <Form.Item>\n        <Space>\n          <Button type=\"primary\" htmlType=\"submit\">{onFinishButtonTips}</Button>\n          {showCancelButton ? <Button onClick={cancelHandle}>取消</Button> : null}\n          {showDeleteButton ? <Button onClick={deleteHandle}>删除</Button> : null}\n        </Space>\n      </Form.Item>\n    </Form>\n  )  \n};\nCustomSingleRowForm.defaultProps = {\n  columns: [],\n  disabledKeys: [],\n  notShowKeys: [],\n  formKeyLabelObj: {},\n  formKeySelectComponentsObj: {},\n  // formKeysItemButtonObj: {},\n  onFinish: (values) => { console.log(values); },\n  onFinishButtonTips: '确定/修改',\n  cancelHandle: () => { console.log('Cancel Handle'); },\n  showCancelButton: false,\n  deleteHandle: () => { console.log('Delete Handle'); },\n  showDeleteButton: false,\n  updateFormObj: {},\n  formInitialObj: {},\n  initFormCount: 0,\n  rulesObj: {},\n  passwordKeys: [],\n  getFieldsValueHandle: values => console.log(values),\n};\n\nexport { CustomForm, CustomSingleRowForm };\n","// This icon file is generated automatically.\nvar ReloadOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"\n      }\n    }]\n  },\n  \"name\": \"reload\",\n  \"theme\": \"outlined\"\n};\nexport default ReloadOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default React.forwardRef(ReloadOutlined);","import React from 'react';\nimport { Select } from 'antd';\nimport customConfig from '../../custom_config';\n\n// custom select 组件\n\nconst { Option } = Select;\n\nconst CustomSelect = ({ options, width, value, onChange, mode }) => {\n  return (\n    <Select style={{ width: width }} onChange={onChange} value={value} mode={mode} allowClear>\n      {options.map((obj, index) => {\n        return <Option\n          key={index.toString()}\n          value={obj.value}\n        >{obj.label}</Option>\n      })}\n    </Select>\n  )\n}\n\nCustomSelect.defaultProps = {\n  options: [],  // [{value: '值', label: '显示名称'}]\n  width: customConfig.selectComponentWidth,\n  value: null,\n  onChange: (value) => { console.log(value) },\n  mode: null,\n}\n\nexport { CustomSelect };\n"],"sourceRoot":""}